{
  "openapi": "3.0.0",
  "info": {
    "version": "2.4",
    "title": "Cortex XSIAM REST API",
    "description": "Using the Cortex XSIAM APIs, you can integrate Cortex XSIAM with third-party apps or services to ingest alerts and to leverage alert stitching and investigation capabilities. The APIs allows you to manage incidents in a ticketing or automation system of your choice by reviewing and editing the incident's details, status, and assignee. Using the APIs, you can also retrieve information on the endpoints, create installation package, perform response actions directly on the endpoint and more.",
    "contact": {
      "email": "docs-cortex@paloaltonetworks.com",
      "name": "Cortex Documentation Team",
      "url": "https://docs-cortex.paloaltonetworks.com/p/XSIAM"
    }
  },
  "servers": [
    {
      "url": "https://api-yourfqdn/"
    }
  ],
  "paths": {
    "/public_api/v1/xql/start_xql_query": {
      "post": {
        "tags": [
          "XQL Query"
        ],
        "summary": "Start an XQL Query",
        "description": "Execute an XQL query.\n\nFor more information on how to run XQL queries, see [*Running XQL Query APIs*](https://cortex-panw.stoplight.io/docs/cortex-xsiam-1/90ay3tlx6l9dh-running-xql-query-ap-is).\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postStartXqlQuery",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "String of the XQL query."
                      },
                      "tenants": {
                        "type": "array",
                        "description": "Note: This is only used when querying tenants managed by Managed Security Services Providers (MSSP).\n\nList of strings used for running APIs on local and Managed Security tenants. Valid values:\n- For single tenant (local tenant) query, enter a single-item list with your tenant_id. Additional valid values are, empty list ([]) or null (default).\n- For multi-tenant investigations (Managed Security parent who investigate children and/or local), enter multi-item list with the required tenant_id. List of IDs can contain the parent, children, or both parent and children.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "timeframe": {
                        "type": "object",
                        "description": "Integer in timestamp epoch milliseconds.\r\nValid values include:\r\n- Absolute Unix timestamp representing a date period: {\"from\" : 1598907600000, \"to\" : 1599080399000} = date period: 31/08/20 09:00:00 PM UTC - 02/09/20 8:59:59 PM UTC\r\n- Relative Unix timestamp representing the last 24 hours: {\"relativeTime\": 86400000} = (24*60*60*1000 = 86400000).",
                        "properties": {
                          "from": {
                            "type": "integer",
                            "description": "Use for an absolute timeframe in Unix timestamp.",
                            "example": 1598907600000
                          },
                          "to": {
                            "type": "integer",
                            "description": "Use for an absolute timeframe in Unix timestamp.",
                            "example": 1599080399000
                          },
                          "relativeTime": {
                            "type": "integer",
                            "description": "Use for a relative Unix timestamp.",
                            "example": 86400000
                          }
                        }
                      }
                    },
                    "required": [
                      "query"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "example": {
                  "request_data": {
                    "query": "dataset=xdr_data | fields event_id, event_type, event_sub_type | limit 3",
                    "tenants": [],
                    "timeframe": {
                      "from": 1598907600000,
                      "to": 1599080399000
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "query": "dataset=xdr_data | fields event_id, event_type, event_sub_type | limit 3",
                      "tenants": [],
                      "timeframe": {
                        "from": 1598907600000,
                        "to": 1599080399000
                      }
                    }
                  }
                },
                "example-1": {
                  "value": {
                    "request_data": {
                      "query": "dataset=xdr_data | fields event_id, event_type, event_sub_type | limit 3",
                      "tenants": [
                        "431509831",
                        "401387390"
                      ],
                      "timeframe": {
                        "from": 1598907600000,
                        "to": 1599080399000
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "string"
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": "ad21c1e1492d4c_667_inv"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": "ad21c1e1492d4c_667_inv"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer",
                              "description": "The number of daily active queries."
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer",
                              "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer",
                              "description": "The number of daily active queries."
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer",
                              "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer",
                              "description": "The number of daily active queries."
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer",
                              "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer",
                              "description": "The number of daily active queries."
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer",
                              "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer",
                              "description": "The number of daily active queries."
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer",
                              "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/get_query_results": {
      "post": {
        "tags": [
          "XQL Query"
        ],
        "summary": "Get XQL Query Results",
        "description": "Retrieve results of an executed XQL query API. \n\nNote: This endpoint only works on XQL queries initiated by `/public_api/v1/xql/start_xql_query/`.\n\nMaximum result set size is 1000. The API does not support pagination, therefore, you can set values to determine the result size limitation and how to wait for the results. To view response with greater than 1000 results you must call **Get XQL Query Results Stream**.\n\nFor more information on how to run XQL queries, see [*Running XQL Query APIs*](https://cortex-panw.stoplight.io/docs/cortex-xsiam-1/90ay3tlx6l9dh-running-xql-query-ap-is).\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetQueryResults",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "query_id": {
                        "type": "string",
                        "description": "String representing the unique execution ID generated by the response to **Start an XQL Query** API.\nYou can also enter the execution ID of a query generated in Cortex XDR and listed in the Query Center table."
                      },
                      "pending_flag": {
                        "type": "boolean",
                        "description": "Boolean flag indicating whether the API call should operate in synchronous/blocking mode, or in asynchronous/non-blocking mode. Valid Values:\n- True (default): The call returns immediately with one of the following options:\n1) PENDING status indicating query hasn't yet completed or results are not yet ready to be returned. Need to execute the API call again.\n2) SUCCESS/FAIL status\n- False: The API will block until query completes and results are ready to be returned."
                      },
                      "limit": {
                        "type": "integer",
                        "description": "Integer representing the maximum number of results to return.\nIf the 'limit' is not specified or if 'limit' is greater than 1000 and the query yields more than 1000 valid results, a `stream id` will be generated for use in the *Get XQL Query Results Stream** API.\nIn the context of multi-tenant investigations, when you specify the parameter value (x),\nit will return x results across all tenants combined, rather than x results for each individual tenant.\nFor example, if there are y tenants participating in the investigation, the maximum number of results returned can be x*y (up to the limit of 1,000,000)."
                      },
                      "format": {
                        "type": "string",
                        "enum": [
                          "json",
                          "csv"
                        ],
                        "description": "The type of response output."
                      }
                    },
                    "required": [
                      "query_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "example": {
                  "request_data": {
                    "query_id": "061880b4867446_4356_inv",
                    "pending_flag": true,
                    "limit": 100,
                    "format": "json"
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "query_id": "061880b4867446_4356_inv",
                      "pending_flag": true,
                      "limit": 100,
                      "format": "json"
                    }
                  }
                },
                "example-1": {
                  "value": {
                    "request_data": {
                      "query_id": "061880b4867446_4356_inv",
                      "pending_flag": true,
                      "limit": 100,
                      "format": "json"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "number_of_results": {
                          "type": "integer"
                        },
                        "query_cost": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "number"
                          }
                        },
                        "remaining_quota": {
                          "type": "number"
                        },
                        "results": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "event_id": {
                                    "type": "string"
                                  },
                                  "agent_version": {
                                    "type": "string"
                                  },
                                  "_product": {
                                    "type": "string"
                                  },
                                  "_time": {
                                    "type": "integer"
                                  },
                                  "_vendor": {
                                    "type": "string"
                                  },
                                  "insert_timestamp": {
                                    "type": "integer"
                                  },
                                  "agent_os_type": {
                                    "type": "string"
                                  },
                                  "event_type": {
                                    "type": "string"
                                  },
                                  "event_sub_type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "status": "SUCCESS",
                        "number_of_results": 1,
                        "query_cost": {
                          "9995067425505": 0.01298138888888889
                        },
                        "remaining_quota": 4.969819444444444,
                        "results": {
                          "data": [
                            {
                              "event_id": "MTQ5MDE0OTI5NjE2NDY2NTI3NA==",
                              "agent_version": "7.7.0.60725",
                              "_product": "Fusion",
                              "_time": 1690877704746,
                              "_vendor": "PANW",
                              "insert_timestamp": 1690877878272,
                              "agent_os_type": "AGENT_OS_WINDOWS",
                              "event_type": "STORY",
                              "event_sub_type": "event_sub_type_4"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "pending_flag=true": {
                    "value": {
                      "reply": {
                        "status": "PENDING"
                      }
                    }
                  },
                  "Up to 1,000 results, JSON format, Single Tenant Investigation": {
                    "value": {
                      "reply": {
                        "status": "SUCCESS",
                        "number_of_results": 3,
                        "query_cost": {
                          "tenant_id_1": 0.001596388888888889
                        },
                        "remaining_quota": 4.998403611111111,
                        "results": {
                          "data": [
                            {
                              "event_id": "eventID1",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825324,
                              "_time": 1621541523000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL"
                            },
                            {
                              "event_id": "eventID2",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825326,
                              "_time": 1621541528000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL"
                            },
                            {
                              "event_id": "eventID3",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825325,
                              "_time": 1621541517000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "Up to 1,000 results, CSV format, Single Tenant Investigation": {
                    "value": {
                      "reply": {
                        "status": "SUCCESS",
                        "number_of_results": 3,
                        "query_cost": {
                          "tenant_id_1": 0.001596388888888889
                        },
                        "remaining_quota": 4.998403611111111,
                        "results": {
                          "data": "_vendor,_product,insert_timestamp,event_id1,_time,event_type,event_sub_type\nPANW,Fusion,2021-05-20 20:17:05.324000+00:00,eventID,2021-05-20 20:12:03+00:00,STORY,NULL\nPANW,Fusion,2021-05-20 20:17:05.326000+00:00,eventID2,2021-05-20 20:12:08+00:00,STORY,NULL\nPANW,Fusion,2021-05-20 20:17:05.325000+00:00,eventID3,2021-05-20 20:11:57+00:00,STORY,NULL\n"
                        }
                      }
                    }
                  },
                  "Up to 1,000 results, JSON format, Multi Tenant Investigation": {
                    "value": {
                      "reply": {
                        "status": "SUCCESS",
                        "number_of_results": 6,
                        "query_cost": {
                          "tenant_id_1": 0.001596388888888889,
                          "tenant_id_2": 0.00179989
                        },
                        "remaining_quota": 4.995007332222222,
                        "results": {
                          "data": [
                            {
                              "event_id": "eventID1",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825324,
                              "_time": 1621541523000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1723879655"
                            },
                            {
                              "event_id": "eventID2",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825326,
                              "_time": 1621541528000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1723879655"
                            },
                            {
                              "event_id": "eventID3",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825325,
                              "_time": 1621541517000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1723879655"
                            },
                            {
                              "event_id": "eventID4",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825324,
                              "_time": 1621541523000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1705396706"
                            },
                            {
                              "event_id": "eventID5",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825326,
                              "_time": 1621541528000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1705396706"
                            },
                            {
                              "event_id": "eventID6",
                              "_vendor": "PANW",
                              "_product": "Fusion",
                              "insert_timestamp": 1621541825325,
                              "_time": 1621541517000,
                              "event_type": "STORY",
                              "event_sub_type": "NULL",
                              "tenant": "1705396706"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "More than 1,000 results": {
                    "value": {
                      "reply": {
                        "status": "SUCCESS",
                        "number_of_results": 1000000,
                        "query_cost": {
                          "tenant_id_1": 0.011742777777777777
                        },
                        "remaining_quota": 4.984442777777778,
                        "results": {
                          "stream_id": "streamID"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/get_quota": {
      "post": {
        "tags": [
          "XQL Query"
        ],
        "summary": "Get XQL Query Quota",
        "description": "Retrieve the amount of query quota available and used. \n\nNote: This endpoint only works on XQL queries initiated by `/public_api/v1/xql/start_xql_query/`.\n\nFor more information on how to run XQL queries, see [*Running XQL Query APIs*](https://cortex-panw.stoplight.io/docs/cortex-xsiam-1/90ay3tlx6l9dh-running-xql-query-ap-is).\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "request_data": {}
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "license_quota": {
                          "type": "integer"
                        },
                        "additional_purchased_quota": {
                          "type": "integer"
                        },
                        "used_quota": {
                          "type": "number"
                        },
                        "eval_quota": {
                          "type": "integer"
                        },
                        "total_daily_running_queries": {
                          "type": "integer",
                          "description": "The number of daily active queries. This value is reset nightly."
                        },
                        "total_daily_concurrent_rejected_queries": {
                          "type": "integer",
                          "description": "The number of daily queries rejected due to too many concurrent XQL queries being run through the API.  This value is reset nightly."
                        },
                        "current_concurrent_active_queries": {
                          "type": "object",
                          "description": "Currently running XQL queries with their current duration.",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "current_concurrent_active_queries_count": {
                          "type": "integer",
                          "description": "The number of active queries currently running."
                        },
                        "max_daily_concurrent_active_query_count": {
                          "type": "integer",
                          "description": "The maximum number of queries that ran concurrently today on this tenant.  This value is reset nightly."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "license_quota": 5,
                        "additional_purchased_quota": 0,
                        "used_quota": 0.07041027777777777,
                        "eval_quota": 0
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "license_quota": 5,
                        "additional_purchased_quota": 0,
                        "used_quota": 0,
                        "eval_quota": 0,
                        "total_daily_running_queries": 4,
                        "total_daily_concurrent_rejected_queries": 8,
                        "current_concurrent_active_queries": {
                          "debee6b0c41f47_911_inv": {
                            "xql": "config timeframe = 1mo | dataset=xdr_data | limit 1000000",
                            "duration": 61
                          }
                        },
                        "current_concurrent_active_queries_count": 1,
                        "max_daily_concurrent_active_query_count": 4
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "err_code": {
                          "type": "integer"
                        },
                        "err_msg": {
                          "type": "string"
                        },
                        "err_extra": {
                          "type": "object",
                          "properties": {
                            "err_msg": {
                              "type": "string"
                            },
                            "query_cost": {
                              "type": "integer"
                            },
                            "remaining_quota": {
                              "type": "integer"
                            },
                            "total_daily_running_queries": {
                              "type": "integer"
                            },
                            "total_daily_concurrent_rejected_queries": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "err_code": 500,
                        "err_msg": "An error occurred while processing XDR - XQL query",
                        "err_extra": {
                          "err_msg": "reached max allowed amount of parallel running queries. please wait for some queries to finish and submit your query again",
                          "query_cost": 0,
                          "remaining_quota": 5,
                          "total_daily_running_queries": 4,
                          "total_daily_concurrent_rejected_queries": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/get_query_results_stream": {
      "post": {
        "tags": [
          "XQL Query"
        ],
        "summary": "Get XQL Query Results Stream",
        "description": "Retrieve XQL query results with more than 1000 results. \n\nNote: This endpoint only works on XQL queries initiated by `/public_api/v1/xql/start_xql_query/`.\n\nResponse is returned as chunked (Transfer-Encoding: chunked). To retrieve a compressed gzipped response (Content-Encoding: gzip), in your header add Accept-Encoding: gzip.\n\nFor more information on how to run XQL queries, see [*Running XQL Query APIs*](https://cortex-panw.stoplight.io/docs/cortex-xsiam-1/90ay3tlx6l9dh-running-xql-query-ap-is).\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetQueryResultsStream",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accept-Encoding",
            "in": "header",
            "description": "For retrieving a compressed gzipped response",
            "schema": {
              "type": "string",
              "default": "gzip"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "stream_id": {
                        "type": "string",
                        "description": "String representing the unique ID generate by the response to **Get XQL Query Results** API."
                      },
                      "is_gzip_compressed": {
                        "type": "boolean",
                        "description": "A boolean flag."
                      }
                    },
                    "required": [
                      "stream_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "example": {
                  "request_data": {
                    "stream_id": "563c5e24-===-9a1f8139d3c5",
                    "is_gzip_compressed": true
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "stream_id": "563c5e24-===-9a1f8139d3c5",
                      "is_gzip_compressed": true
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/incidents/get_incidents": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Incidents",
        "description": "Get a list of incidents filtered by a list of incident IDs, modification time, or creation time.\n- The response is concatenated using AND condition (OR is not supported).\n- The maximum result set size is >100.\n- Offset is the zero-based number of incidents from the start of the result set.\n\nNote: You can send a request to retrieve either **all** or **filtered** results.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetIncidents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "If no parameters are included, all results will be returned.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "modification_time",
                                "creation_time",
                                "incident_id_list",
                                "description",
                                "alert_sources",
                                "status",
                                "incident_id",
                                "starred"
                              ],
                              "description": "Identifies the incident field the filter is matching. Filters are based on the following keywords:\n- `modification_time`: Time the incident has been modified.\n- `creation_time`: Incident's creation time.\n- `incident_id`: Incident ID.\n- `incident_id_list`: List of incident IDs.\n- `description`: Incident description.\n- `alert_sources`: Source that detected the alert.\n- `status`: The status of the incident.\n- `starred`: Whether the incident is starred."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "contains",
                                "gte",
                                "lte",
                                "eq",
                                "neq"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords are:\n`in`: \n- `incident_id_list`, `alert_sources`, `description`: List of Strings\n`contains`\n- `description`: String\n`gte` / `lte`\n- `modification_time`, `creation_time`: Integer in timestamp epoch milliseconds\n`eq` / `neq`\n- `status`: String\n- `starred`: Boolean\n"
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the incident field that you specified for this filter:\n- `modification_time`, `creation_time`: Integer representing the number of milliseconds after the Unix epoch, UTC timezone.\n- `description`: List of strings.\n- `incident_id`: String.\n- `incident_id_list`: List of strings. Each item in the list muste be an incident ID.\n- `alert_sources`: List of strings.\n- `status`: Single value, can be one of the following: `resolved_duplicate`, `resolved_other`, `new`, `resolved_security_testing`, `resolved_known_issue`, `resolved_auto`, `resolved_threat_handled`, `resolved_true_positive`, `under_investigation`, or `resolved_false_positive`.\n- `starred`: Boolean value: `true` or `false`.",
                              "oneOf": [
                                {
                                  "type": "array"
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "Integer representing the starting offset within the query result set from which you want incidents returned.\nIncidents are returned as a zero-based list. Any incident indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "Integer representing the end offset within the result set after which you do not want incidents returned.\nIncidents in the incident list that are indexed higher than this value are not returned in the final results set. Defaults to >100, which returns all incidents to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "creation_time",
                              "incident_id",
                              "modification_time"
                            ],
                            "description": "Sort according to this field. Valid options are: \r\n- `creation_time`\r\n- `incident_id`\r\n- `modification_time`"
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Sort in ascending or descending order."
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "incident_id_list",
                          "operator": "in",
                          "value": [
                            "<incident ID>",
                            "<incident ID>"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 100,
                      "sort": {
                        "field": "creation_time",
                        "keyword": "desc"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "incident_id_list",
                          "operator": "in",
                          "value": [
                            "<incident ID>",
                            "<incident ID>"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 100,
                      "sort": {
                        "field": "creation_time",
                        "keyword": "desc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "The total number of possible results."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "The number of incidents actually returned as result."
                        },
                        "incidents": {
                          "type": "array",
                          "description": "A list of incidents.\n\nNote: If a manual_description was set, the description field will display the manual description and the system description is not returned.\n\nDepending on the defined user permissions, with full permissions, the response displays original_tags and tags fields.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "incident_id": {
                                "type": "string"
                              },
                              "incident_name": {
                                "type": "string"
                              },
                              "creation_time": {
                                "type": "integer"
                              },
                              "modification_time": {
                                "type": "integer"
                              },
                              "detection_time": {
                                "nullable": true
                              },
                              "status": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "assigned_user_mail": {
                                "nullable": true
                              },
                              "assigned_user_pretty_name": {
                                "nullable": true
                              },
                              "alert_count": {
                                "type": "integer"
                              },
                              "low_severity_alert_count": {
                                "type": "integer"
                              },
                              "med_severity_alert_count": {
                                "type": "integer"
                              },
                              "high_severity_alert_count": {
                                "type": "integer"
                              },
                              "critical_severity_alert_count": {
                                "type": "integer"
                              },
                              "user_count": {
                                "type": "integer"
                              },
                              "host_count": {
                                "type": "integer"
                              },
                              "notes": {
                                "nullable": true
                              },
                              "resolve_comment": {
                                "nullable": true
                              },
                              "resolved_timestamp": {
                                "type": "integer"
                              },
                              "manual_severity": {
                                "nullable": true
                              },
                              "manual_description": {
                                "type": "string"
                              },
                              "xdr_url": {
                                "type": "string"
                              },
                              "starred": {
                                "type": "boolean"
                              },
                              "starred_manually": {
                                "type": "boolean",
                                "description": "True = this incident was manually starred.\r\nFalse = This incident was starred by starring rules."
                              },
                              "hosts": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "users": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "incident_sources": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "rule_based_score": {
                                "type": "integer"
                              },
                              "manual_score": {
                                "nullable": true
                              },
                              "wildfire_hits": {
                                "type": "integer"
                              },
                              "alerts_grouping_status": {
                                "type": "string"
                              },
                              "mitre_tactics_ids_and_names": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "mitre_techniques_ids_and_names": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "alert_categories": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "original_tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "incident_domain": {
                                "type": "string"
                              },
                              "custom_fields": {
                                "type": "object",
                                "description": "The custom fields for this incident. The names of the custom fields are standardized into lowercase with no white spaces. For example, `Timer Reset` would be included as `timerreset`."
                              }
                            }
                          }
                        },
                        "restricted_incident_ids": {
                          "type": "array",
                          "description": "Depending on the defined user permissions, in restrictive or partial permission mode, the response displays only the incident ID. \nFor example: \"restricted_incident_ids\": [\"1491\"]",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "incidents": [
                          {
                            "incident_id": "<incident ID>",
                            "incident_name": "test",
                            "creation_time": 1577024425126,
                            "modification_time": 1577024425126,
                            "detection_time": null,
                            "status": "resolved_known_issue",
                            "severity": "medium",
                            "description": "Memory Corruption Exploit generated by XDR Agent",
                            "assigned_user_mail": null,
                            "assigned_user_pretty_name": null,
                            "alert_count": 1,
                            "low_severity_alert_count": 0,
                            "med_severity_alert_count": 1,
                            "high_severity_alert_count": 0,
                            "critical_severity_alert_count": 0,
                            "user_count": 1,
                            "host_count": 1,
                            "notes": null,
                            "resolve_comment": null,
                            "resolved_timestamp": 1577024425126,
                            "manual_severity": null,
                            "manual_description": "Memory Corruption Exploit generated by XDR Agent",
                            "xdr_url": "https://<link to incident>",
                            "starred": false,
                            "hosts": [
                              "<host ID>"
                            ],
                            "users": [
                              "test_1",
                              "test_2"
                            ],
                            "incident_sources": [
                              "XDR Agent",
                              "XDR BIOC"
                            ],
                            "rule_based_score": 342,
                            "manual_score": null,
                            "wildfire_hits": 0,
                            "alerts_grouping_status": "Enabled",
                            "mitre_tactics_ids_and_names": [
                              "TA0004 - Privilege Escalation",
                              "TA0005 - Defense Evasion",
                              "TA0006 - Credential Access"
                            ],
                            "mitre_techniques_ids_and_names": [
                              "T1001.001 - Data Obfuscation: Junk Data",
                              "T1001.002 - Data Obfuscation: Steganography",
                              "T1001.003 - Data Obfuscation: Protocol Impersonation"
                            ],
                            "alert_categories": [
                              "Credential Access",
                              "Exploit",
                              "Spyware Detected via Anti-Spyware profile"
                            ],
                            "original_tags": [
                              "DS:PANW/NGFW",
                              "EG:acme-2",
                              "EG:Acme group",
                              "DS:PANW/XDR Agent"
                            ],
                            "tags": [
                              "EG:Acme group",
                              "DS:PANW/NGFW",
                              "DS:PANW/XDR Agent",
                              "EG:acme-2"
                            ]
                          }
                        ],
                        "restricted_incident_ids": []
                      }
                    }
                  }
                },
                "examples": {
                  "Success Response Example": {
                    "value": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "incidents": [
                          {
                            "incident_id": "<incident ID>",
                            "incident_name": "test",
                            "creation_time": 1577024425126,
                            "modification_time": 1577024425126,
                            "detection_time": null,
                            "status": "resolved_known_issue",
                            "severity": "medium",
                            "description": "Memory Corruption Exploit generated by XDR Agent",
                            "assigned_user_mail": null,
                            "assigned_user_pretty_name": null,
                            "alert_count": 1,
                            "low_severity_alert_count": 0,
                            "med_severity_alert_count": 1,
                            "high_severity_alert_count": 0,
                            "critical_severity_alert_count": 0,
                            "user_count": 1,
                            "host_count": 1,
                            "notes": null,
                            "resolve_comment": null,
                            "resolved_timestamp": 1577024425126,
                            "manual_severity": null,
                            "manual_description": "Memory Corruption Exploit generated by XDR Agent",
                            "xdr_url": "https://<link to incident>",
                            "starred": false,
                            "hosts": [
                              "<host ID>"
                            ],
                            "users": [
                              "test_1",
                              "test_2"
                            ],
                            "incident_sources": [
                              "XDR Agent",
                              "XDR BIOC"
                            ],
                            "rule_based_score": 342,
                            "manual_score": null,
                            "wildfire_hits": 0,
                            "alerts_grouping_status": "Enabled",
                            "mitre_tactics_ids_and_names": [
                              "TA0004 - Privilege Escalation",
                              "TA0005 - Defense Evasion",
                              "TA0006 - Credential Access"
                            ],
                            "mitre_techniques_ids_and_names": [
                              "T1001.001 - Data Obfuscation: Junk Data",
                              "T1001.002 - Data Obfuscation: Steganography",
                              "T1001.003 - Data Obfuscation: Protocol Impersonation"
                            ],
                            "alert_categories": [
                              "Credential Access",
                              "Exploit",
                              "Spyware Detected via Anti-Spyware profile"
                            ],
                            "original_tags": [
                              "DS:PANW/NGFW",
                              "EG:acme-2",
                              "EG:Acme group",
                              "DS:PANW/XDR Agent"
                            ],
                            "tags": [
                              "EG:Acme group",
                              "DS:PANW/NGFW",
                              "DS:PANW/XDR Agent",
                              "EG:acme-2"
                            ],
                            "incident_domain": "DOMAIN_1",
                            "custom_fields": {
                              "s1": {
                                "goal": "24:00:00",
                                "endType": "incident_resolved",
                                "goalName": "All Incidents",
                                "timer_name": "t1",
                                "totalDuration": 6988
                              },
                              "t1": {
                                "endDate": "2024-06-08 15:18:35",
                                "endType": "incident_resolved",
                                "runStatus": "ended",
                                "startDate": "2024-06-08 13:22:07",
                                "totalDuration": 6988
                              },
                              "sla1": {
                                "goal": "02:30:00",
                                "endType": "end_condition",
                                "goalName": "1",
                                "timer_name": "timer1",
                                "totalDuration": 41701
                              },
                              "mmnum": 123440009.223,
                              "mmbool": false
                            }
                          }
                        ],
                        "restricted_incident_ids": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/get_alerts/": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get all Alerts",
        "description": "Get a list of alerts.\r\n- Response is concatenated using AND condition (OR is not supported).\r\n- Maximum result set size is 100.\r\n- Offset is the zero-based number of alerts from the start of the result set.\r\nCortex XDR displays in the APIs response whether an PAN NGFW type alert contains a PCAP triggering packet. Use the Retrieve PCAP Packet API to retrieve a list of alert IDs and their associated PCAP data.\r\n\r\nNote: You can send a request to retrieve either all or filtered results.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-alerts-get_alerts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "If no parameters are included, all results will be returned.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "alert_id_list",
                                "alert_source",
                                "severity",
                                "creation_time"
                              ],
                              "description": "Identifies the alert field the filter is matching. Filters are based on the following keywords:\r\n- `alert_id_list`: List of integers representing the Alert IDs.\r\n- `alert_source`: List of strings representing the Alert sources.\r\n- `severity`: List of strings representing the Alert severities.\r\n- `creation_time`: Timestamp of the alert creation time."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords are:\r\n`in`: \r\n- `alert_id_list`, `alert_source`, and `severity`\r\n`gte` / `lte`\r\n- `creation_time`."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the alert field that you specified for this filter:\r\n- `creation_time`: Integer representing the number of seconds or milliseconds after the Unix epoch, UTC timezone. The value is returned in the response under the `detection_timestamp` field, and represented in console under the TIMESTAMP field.\r\n- `alert_id_list`: Array of integers. Each item in the list must be an alert ID.\r\n- `severity`: Valid values are `low`, `medium`, `high`, `critical`.",
                              "oneOf": [
                                {
                                  "type": "array"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the starting offset within the query result set from which you want alerts returned.\r\nAlerts are returned as a zero-based list. Any alert indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end offset within the result set after which you do not want alerts returned.\r\nAlerts in the alerts list that are indexed higher than this value are not returned in the final results set. Defaults to 100, which returns all alerts to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set. By default the sort is defined as *creation_time*, *desc*.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "description": "Identifies how to sort the result set, either according to severity or creation time. "
                          },
                          "keyword": {
                            "type": "string",
                            "description": "Defines whether to sort the results in ascending (asc) or descending (desc) order."
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging. If filter returned 10,000 results or more than 9,999 will be the value and you can use paging to view the entire set of data."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of alerts actually returned as result."
                        },
                        "alerts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "agent_os_sub_type": {
                                "type": "string"
                              },
                              "fw_app_category": {
                                "nullable": true
                              },
                              "fw_app_id": {
                                "nullable": true
                              },
                              "fw_app_subcategory": {
                                "nullable": true
                              },
                              "fw_app_technology": {
                                "nullable": true
                              },
                              "causality_actor_process_command_line": {
                                "nullable": true
                              },
                              "causality_actor_process_image_md5": {
                                "nullable": true
                              },
                              "causality_actor_process_image_name": {
                                "nullable": true
                              },
                              "causality_actor_process_image_path": {
                                "nullable": true
                              },
                              "causality_actor_process_image_sha256": {
                                "nullable": true
                              },
                              "causality_actor_process_signature_status": {
                                "type": "string"
                              },
                              "causality_actor_process_signature_vendor": {
                                "nullable": true
                              },
                              "causality_actor_causality_id": {
                                "nullable": true
                              },
                              "identity_sub_type": {
                                "nullable": true
                              },
                              "identity_type": {
                                "nullable": true
                              },
                              "operation_name": {
                                "nullable": true
                              },
                              "project": {
                                "nullable": true
                              },
                              "cloud_provider": {
                                "nullable": true
                              },
                              "referenced_resource": {
                                "nullable": true
                              },
                              "resource_sub_type": {
                                "nullable": true
                              },
                              "resource_type": {
                                "nullable": true
                              },
                              "cluster_name": {
                                "nullable": true
                              },
                              "container_id": {
                                "nullable": true
                              },
                              "contains_featured_host": {
                                "type": "string"
                              },
                              "contains_featured_ip": {
                                "type": "string"
                              },
                              "contains_featured_user": {
                                "type": "string"
                              },
                              "action_country": {
                                "type": "string"
                              },
                              "fw_interface_to": {
                                "nullable": true
                              },
                              "dns_query_name": {
                                "nullable": true
                              },
                              "agent_device_domain": {
                                "type": "string"
                              },
                              "fw_email_recipient": {
                                "nullable": true
                              },
                              "fw_email_sender": {
                                "nullable": true
                              },
                              "fw_email_subject": {
                                "nullable": true
                              },
                              "event_type": {
                                "nullable": true
                              },
                              "is_whitelisted": {
                                "type": "boolean"
                              },
                              "action_file_macro_sha256": {
                                "nullable": true
                              },
                              "action_file_md5": {
                                "nullable": true
                              },
                              "action_file_name": {
                                "nullable": true
                              },
                              "action_file_path": {
                                "nullable": true
                              },
                              "action_file_sha256": {
                                "nullable": true
                              },
                              "fw_device_name": {
                                "nullable": true
                              },
                              "fw_rule_id": {
                                "nullable": true
                              },
                              "fw_rule": {
                                "nullable": true
                              },
                              "fw_serial_number": {
                                "nullable": true
                              },
                              "agent_fqdn": {
                                "type": "string"
                              },
                              "mac": {
                                "type": "string"
                              },
                              "agent_os_type": {
                                "type": "string"
                              },
                              "image_name": {
                                "nullable": true
                              },
                              "actor_process_image_name": {
                                "type": "string"
                              },
                              "actor_process_command_line": {
                                "nullable": true
                              },
                              "actor_process_image_md5": {
                                "nullable": true
                              },
                              "actor_process_image_path": {
                                "nullable": true
                              },
                              "actor_process_os_pid": {
                                "nullable": true
                              },
                              "actor_process_image_sha256": {
                                "nullable": true
                              },
                              "actor_process_signature_status": {
                                "type": "string"
                              },
                              "actor_process_signature_vendor": {
                                "nullable": true
                              },
                              "actor_thread_thread_id": {
                                "nullable": true
                              },
                              "fw_is_phishing": {
                                "type": "string"
                              },
                              "action_local_ip": {
                                "nullable": true
                              },
                              "action_local_port": {
                                "nullable": true
                              },
                              "fw_misc": {
                                "nullable": true
                              },
                              "mitre_tactic_id_and_name": {
                                "type": "string"
                              },
                              "mitre_technique_id_and_name": {
                                "type": "string"
                              },
                              "module_id": {
                                "type": "string"
                              },
                              "fw_vsys": {
                                "nullable": true
                              },
                              "os_actor_process_command_line": {
                                "nullable": true
                              },
                              "os_actor_thread_thread_id": {
                                "nullable": true
                              },
                              "os_actor_process_image_name": {
                                "nullable": true
                              },
                              "os_actor_process_os_pid": {
                                "nullable": true
                              },
                              "os_actor_process_image_sha256": {
                                "nullable": true
                              },
                              "os_actor_process_signature_status": {
                                "type": "string"
                              },
                              "os_actor_process_signature_vendor": {
                                "nullable": true
                              },
                              "os_actor_effective_username": {
                                "nullable": true
                              },
                              "action_process_signature_status": {
                                "type": "string"
                              },
                              "action_process_signature_vendor": {
                                "nullable": true
                              },
                              "action_registry_data": {
                                "nullable": true
                              },
                              "action_registry_full_key": {
                                "nullable": true
                              },
                              "action_external_hostname": {
                                "nullable": true
                              },
                              "action_remote_ip": {
                                "type": "string"
                              },
                              "action_remote_port": {
                                "nullable": true
                              },
                              "matching_service_rule_id": {
                                "nullable": true
                              },
                              "fw_interface_from": {
                                "nullable": true
                              },
                              "starred": {
                                "type": "boolean"
                              },
                              "action_process_image_command_line": {
                                "nullable": true
                              },
                              "action_process_image_name": {
                                "nullable": true
                              },
                              "action_process_image_sha256": {
                                "nullable": true
                              },
                              "fw_url_domain": {
                                "nullable": true
                              },
                              "user_agent": {
                                "nullable": true
                              },
                              "fw_xff": {
                                "nullable": true
                              },
                              "alert_domain": {
                                "type": "string"
                              },
                              "external_id": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "matching_status": {
                                "type": "string"
                              },
                              "end_match_attempt_ts": {
                                "nullable": true
                              },
                              "local_insert_ts": {
                                "type": "integer"
                              },
                              "last_modified_ts": {
                                "type": "integer"
                              },
                              "bioc_indicator": {
                                "nullable": true
                              },
                              "attempt_counter": {
                                "type": "integer"
                              },
                              "bioc_category_enum_key": {
                                "nullable": true
                              },
                              "case_id": {
                                "type": "integer"
                              },
                              "deduplicate_tokens": {
                                "nullable": true
                              },
                              "filter_rule_id": {
                                "nullable": true
                              },
                              "agent_version": {
                                "type": "string"
                              },
                              "agent_ip_addresses_v6": {
                                "nullable": true
                              },
                              "agent_data_collection_status": {
                                "type": "boolean"
                              },
                              "agent_is_vdi": {
                                "type": "boolean"
                              },
                              "agent_install_type": {
                                "type": "string"
                              },
                              "agent_host_boot_time": {
                                "nullable": true
                              },
                              "event_sub_type": {
                                "nullable": true
                              },
                              "association_strength": {
                                "type": "integer"
                              },
                              "dst_association_strength": {
                                "nullable": true
                              },
                              "story_id": {
                                "nullable": true
                              },
                              "event_id": {
                                "nullable": true
                              },
                              "event_timestamp": {
                                "type": "integer"
                              },
                              "actor_process_instance_id": {
                                "nullable": true
                              },
                              "actor_process_causality_id": {
                                "nullable": true
                              },
                              "actor_causality_id": {
                                "nullable": true
                              },
                              "causality_actor_process_execution_time": {
                                "nullable": true
                              },
                              "action_registry_key_name": {
                                "nullable": true
                              },
                              "action_registry_value_name": {
                                "nullable": true
                              },
                              "action_local_ip_v6": {
                                "nullable": true
                              },
                              "action_remote_ip_v6": {
                                "nullable": true
                              },
                              "action_process_instance_id": {
                                "nullable": true
                              },
                              "action_process_causality_id": {
                                "nullable": true
                              },
                              "os_actor_process_instance_id": {
                                "nullable": true
                              },
                              "os_actor_process_image_path": {
                                "nullable": true
                              },
                              "os_actor_process_causality_id": {
                                "nullable": true
                              },
                              "os_actor_causality_id": {
                                "nullable": true
                              },
                              "dst_agent_id": {
                                "nullable": true
                              },
                              "dst_causality_actor_process_execution_time": {
                                "nullable": true
                              },
                              "dst_action_external_hostname": {
                                "nullable": true
                              },
                              "dst_action_country": {
                                "nullable": true
                              },
                              "dst_action_external_port": {
                                "nullable": true
                              },
                              "is_pcap": {
                                "type": "boolean"
                              },
                              "image_id": {
                                "nullable": true
                              },
                              "container_name": {
                                "nullable": true
                              },
                              "namespace": {
                                "nullable": true
                              },
                              "alert_type": {
                                "type": "string"
                              },
                              "resolution_status": {
                                "type": "string"
                              },
                              "resolution_comment": {
                                "nullable": true
                              },
                              "dynamic_fields": {
                                "nullable": true
                              },
                              "tags": {
                                "type": "string"
                              },
                              "malicious_urls": {
                                "nullable": true
                              },
                              "dss_job_title": {
                                "nullable": true
                              },
                              "dss_department": {
                                "nullable": true
                              },
                              "dss_country": {
                                "nullable": true
                              },
                              "dss_groups": {
                                "nullable": true
                              },
                              "alert_id": {
                                "type": "string"
                              },
                              "detection_timestamp": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "category": {
                                "type": "string"
                              },
                              "endpoint_id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "host_ip": {
                                "type": "string"
                              },
                              "host_name": {
                                "type": "string"
                              },
                              "source": {
                                "type": "string"
                              },
                              "action": {
                                "type": "string"
                              },
                              "action_pretty": {
                                "type": "string"
                              },
                              "user_name": {
                                "nullable": true
                              },
                              "events_length": {
                                "type": "integer"
                              },
                              "original_tags": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 20834,
                        "result_count": 1,
                        "alerts": [
                          {
                            "agent_os_sub_type": "6.3.9600",
                            "fw_app_category": null,
                            "fw_app_id": null,
                            "fw_app_subcategory": null,
                            "fw_app_technology": null,
                            "causality_actor_process_command_line": null,
                            "causality_actor_process_image_md5": null,
                            "causality_actor_process_image_name": null,
                            "causality_actor_process_image_path": null,
                            "causality_actor_process_image_sha256": null,
                            "causality_actor_process_signature_status": "N/A",
                            "causality_actor_process_signature_vendor": null,
                            "causality_actor_causality_id": null,
                            "identity_sub_type": null,
                            "identity_type": null,
                            "operation_name": null,
                            "project": null,
                            "cloud_provider": null,
                            "referenced_resource": null,
                            "resource_sub_type": null,
                            "resource_type": null,
                            "cluster_name": null,
                            "container_id": null,
                            "contains_featured_host": "NO",
                            "contains_featured_ip": "NO",
                            "contains_featured_user": "NO",
                            "action_country": "UNKNOWN",
                            "fw_interface_to": null,
                            "dns_query_name": null,
                            "agent_device_domain": "attractions.disney.com",
                            "fw_email_recipient": null,
                            "fw_email_sender": null,
                            "fw_email_subject": null,
                            "event_type": null,
                            "is_whitelisted": false,
                            "action_file_macro_sha256": null,
                            "action_file_md5": null,
                            "action_file_name": null,
                            "action_file_path": null,
                            "action_file_sha256": null,
                            "fw_device_name": null,
                            "fw_rule_id": null,
                            "fw_rule": null,
                            "fw_serial_number": null,
                            "agent_fqdn": "FL-ATR-DC3-04.attractions.disney.com",
                            "mac": "00:50:56:bb:34:34,00:50:56:bc:bc:2f",
                            "agent_os_type": "Windows",
                            "image_name": null,
                            "actor_process_image_name": "10.91.72.115",
                            "actor_process_command_line": null,
                            "actor_process_image_md5": null,
                            "actor_process_image_path": null,
                            "actor_process_os_pid": null,
                            "actor_process_image_sha256": null,
                            "actor_process_signature_status": "N/A",
                            "actor_process_signature_vendor": null,
                            "actor_thread_thread_id": null,
                            "fw_is_phishing": "N/A",
                            "action_local_ip": null,
                            "action_local_port": null,
                            "fw_misc": null,
                            "mitre_tactic_id_and_name": "TA0007 - Discovery",
                            "mitre_technique_id_and_name": "T1012 - Query Registry",
                            "module_id": "Behavioral Threat Protection",
                            "fw_vsys": null,
                            "os_actor_process_command_line": null,
                            "os_actor_thread_thread_id": null,
                            "os_actor_process_image_name": null,
                            "os_actor_process_os_pid": null,
                            "os_actor_process_image_sha256": null,
                            "os_actor_process_signature_status": "N/A",
                            "os_actor_process_signature_vendor": null,
                            "os_actor_effective_username": null,
                            "action_process_signature_status": "N/A",
                            "action_process_signature_vendor": null,
                            "action_registry_data": null,
                            "action_registry_full_key": null,
                            "action_external_hostname": null,
                            "action_remote_ip": "10.71.62.215",
                            "action_remote_port": null,
                            "matching_service_rule_id": null,
                            "fw_interface_from": null,
                            "starred": false,
                            "action_process_image_command_line": null,
                            "action_process_image_name": null,
                            "action_process_image_sha256": null,
                            "fw_url_domain": null,
                            "user_agent": null,
                            "fw_xff": null,
                            "alert_domain": "DOMAIN_SECURITY",
                            "external_id": "7c96737d50f74c7b9487450426e9eafb",
                            "severity": "high",
                            "matching_status": "MATCHED",
                            "end_match_attempt_ts": null,
                            "local_insert_ts": 1706539597503,
                            "last_modified_ts": 1706539706370,
                            "bioc_indicator": null,
                            "attempt_counter": 0,
                            "bioc_category_enum_key": null,
                            "case_id": 391722,
                            "deduplicate_tokens": null,
                            "filter_rule_id": null,
                            "agent_version": "8.1.0.42616",
                            "agent_ip_addresses_v6": null,
                            "agent_data_collection_status": false,
                            "agent_is_vdi": false,
                            "agent_install_type": "STANDARD",
                            "agent_host_boot_time": null,
                            "event_sub_type": null,
                            "association_strength": 50,
                            "dst_association_strength": null,
                            "story_id": null,
                            "event_id": null,
                            "event_timestamp": 1706540499609,
                            "actor_process_instance_id": null,
                            "actor_process_causality_id": null,
                            "actor_causality_id": null,
                            "causality_actor_process_execution_time": null,
                            "action_registry_key_name": null,
                            "action_registry_value_name": null,
                            "action_local_ip_v6": null,
                            "action_remote_ip_v6": null,
                            "action_process_instance_id": null,
                            "action_process_causality_id": null,
                            "os_actor_process_instance_id": null,
                            "os_actor_process_image_path": null,
                            "os_actor_process_causality_id": null,
                            "os_actor_causality_id": null,
                            "dst_agent_id": null,
                            "dst_causality_actor_process_execution_time": null,
                            "dst_action_external_hostname": null,
                            "dst_action_country": null,
                            "dst_action_external_port": null,
                            "is_pcap": false,
                            "image_id": null,
                            "container_name": null,
                            "namespace": null,
                            "alert_type": "Unclassified",
                            "resolution_status": "STATUS_020_UNDER_INVESTIGATION",
                            "resolution_comment": null,
                            "dynamic_fields": null,
                            "tags": "DS:PANW/XDR Agent",
                            "malicious_urls": null,
                            "dss_job_title": null,
                            "dss_department": null,
                            "dss_country": null,
                            "dss_groups": null,
                            "alert_id": "50023290705",
                            "detection_timestamp": 1706540499609,
                            "name": "Behavioral Threat",
                            "category": "Malware",
                            "endpoint_id": "866d9341c27a4df389b246d977d216ec",
                            "description": "Behavioral threat detected (rule: sync.query_ntdsdit_vssadmin_remote)",
                            "host_ip": "10.71.62.2,10.71.62.5",
                            "host_name": "hostname",
                            "source": "XDR Agent",
                            "action": "REPORTED",
                            "action_pretty": "Detected (Reported)",
                            "user_name": null,
                            "events_length": 1,
                            "original_tags": "DS:PANW/XDR Agent"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "total_count": 20834,
                        "result_count": 1,
                        "alerts": [
                          {
                            "agent_os_sub_type": "6.3.9600",
                            "fw_app_category": null,
                            "fw_app_id": null,
                            "fw_app_subcategory": null,
                            "fw_app_technology": null,
                            "causality_actor_process_command_line": null,
                            "causality_actor_process_image_md5": null,
                            "causality_actor_process_image_name": null,
                            "causality_actor_process_image_path": null,
                            "causality_actor_process_image_sha256": null,
                            "causality_actor_process_signature_status": "N/A",
                            "causality_actor_process_signature_vendor": null,
                            "causality_actor_causality_id": null,
                            "identity_sub_type": null,
                            "identity_type": null,
                            "operation_name": null,
                            "project": null,
                            "cloud_provider": null,
                            "referenced_resource": null,
                            "resource_sub_type": null,
                            "resource_type": null,
                            "cluster_name": null,
                            "container_id": null,
                            "contains_featured_host": "NO",
                            "contains_featured_ip": "NO",
                            "contains_featured_user": "NO",
                            "action_country": "UNKNOWN",
                            "fw_interface_to": null,
                            "dns_query_name": null,
                            "agent_device_domain": "attractions.disney.com",
                            "fw_email_recipient": null,
                            "fw_email_sender": null,
                            "fw_email_subject": null,
                            "event_type": null,
                            "is_whitelisted": false,
                            "action_file_macro_sha256": null,
                            "action_file_md5": null,
                            "action_file_name": null,
                            "action_file_path": null,
                            "action_file_sha256": null,
                            "fw_device_name": null,
                            "fw_rule_id": null,
                            "fw_rule": null,
                            "fw_serial_number": null,
                            "agent_fqdn": "FL-ATR-DC3-04.attractions.disney.com",
                            "mac": "00:50:56:bb:34:34,00:50:56:bc:bc:2f",
                            "agent_os_type": "Windows",
                            "image_name": null,
                            "actor_process_image_name": "10.91.72.115",
                            "actor_process_command_line": null,
                            "actor_process_image_md5": null,
                            "actor_process_image_path": null,
                            "actor_process_os_pid": null,
                            "actor_process_image_sha256": null,
                            "actor_process_signature_status": "N/A",
                            "actor_process_signature_vendor": null,
                            "actor_thread_thread_id": null,
                            "fw_is_phishing": "N/A",
                            "action_local_ip": null,
                            "action_local_port": null,
                            "fw_misc": null,
                            "mitre_tactic_id_and_name": "TA0007 - Discovery",
                            "mitre_technique_id_and_name": "T1012 - Query Registry",
                            "module_id": "Behavioral Threat Protection",
                            "fw_vsys": null,
                            "os_actor_process_command_line": null,
                            "os_actor_thread_thread_id": null,
                            "os_actor_process_image_name": null,
                            "os_actor_process_os_pid": null,
                            "os_actor_process_image_sha256": null,
                            "os_actor_process_signature_status": "N/A",
                            "os_actor_process_signature_vendor": null,
                            "os_actor_effective_username": null,
                            "action_process_signature_status": "N/A",
                            "action_process_signature_vendor": null,
                            "action_registry_data": null,
                            "action_registry_full_key": null,
                            "action_external_hostname": null,
                            "action_remote_ip": "10.71.62.215",
                            "action_remote_port": null,
                            "matching_service_rule_id": null,
                            "fw_interface_from": null,
                            "starred": false,
                            "action_process_image_command_line": null,
                            "action_process_image_name": null,
                            "action_process_image_sha256": null,
                            "fw_url_domain": null,
                            "user_agent": null,
                            "fw_xff": null,
                            "alert_domain": "DOMAIN_SECURITY",
                            "external_id": "7c96737d50f74c7b9487450426e9eafb",
                            "severity": "high",
                            "matching_status": "MATCHED",
                            "end_match_attempt_ts": null,
                            "local_insert_ts": 1706539597503,
                            "last_modified_ts": 1706539706370,
                            "bioc_indicator": null,
                            "attempt_counter": 0,
                            "bioc_category_enum_key": null,
                            "case_id": 391722,
                            "deduplicate_tokens": null,
                            "filter_rule_id": null,
                            "agent_version": "8.1.0.42616",
                            "agent_ip_addresses_v6": null,
                            "agent_data_collection_status": false,
                            "agent_is_vdi": false,
                            "agent_install_type": "STANDARD",
                            "agent_host_boot_time": null,
                            "event_sub_type": null,
                            "association_strength": 50,
                            "dst_association_strength": null,
                            "story_id": null,
                            "event_id": null,
                            "event_timestamp": 1706540499609,
                            "actor_process_instance_id": null,
                            "actor_process_causality_id": null,
                            "actor_causality_id": null,
                            "causality_actor_process_execution_time": null,
                            "action_registry_key_name": null,
                            "action_registry_value_name": null,
                            "action_local_ip_v6": null,
                            "action_remote_ip_v6": null,
                            "action_process_instance_id": null,
                            "action_process_causality_id": null,
                            "os_actor_process_instance_id": null,
                            "os_actor_process_image_path": null,
                            "os_actor_process_causality_id": null,
                            "os_actor_causality_id": null,
                            "dst_agent_id": null,
                            "dst_causality_actor_process_execution_time": null,
                            "dst_action_external_hostname": null,
                            "dst_action_country": null,
                            "dst_action_external_port": null,
                            "is_pcap": false,
                            "image_id": null,
                            "container_name": null,
                            "namespace": null,
                            "alert_type": "Unclassified",
                            "resolution_status": "STATUS_020_UNDER_INVESTIGATION",
                            "resolution_comment": null,
                            "dynamic_fields": null,
                            "tags": "DS:PANW/XDR Agent",
                            "malicious_urls": null,
                            "dss_job_title": null,
                            "dss_department": null,
                            "dss_country": null,
                            "dss_groups": null,
                            "alert_id": "50023290705",
                            "detection_timestamp": 1706540499609,
                            "name": "Behavioral Threat",
                            "category": "Malware",
                            "endpoint_id": "866d9341c27a4df389b246d977d216ec",
                            "description": "Behavioral threat detected (rule: sync.query_ntdsdit_vssadmin_remote)",
                            "host_ip": "10.71.62.2,10.71.62.5",
                            "host_name": "hostname",
                            "source": "XDR Agent",
                            "action": "REPORTED",
                            "action_pretty": "Detected (Reported)",
                            "user_name": null,
                            "events_length": 1,
                            "original_tags": "DS:PANW/XDR Agent"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON."
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters."
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API."
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API."
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors."
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v2/alerts/get_alerts_multi_events": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Alerts Multi-Events v2",
        "description": "Get a list of alerts with multiple events.\r\n- The response is concatenated using AND condition (OR is not supported).\r\n- The maximum result set size is 100.\r\n- Offset is the zero-based number of alerts from the start of the result set.\r\n\r\nCortex XDR displays in the API response whether a PAN NGFW type alert contains a PCAP triggering packet. Use the **Retrieve PCAP Packet** API to retrieve a list of alert IDs and their associated PCAP data.\r\n\r\nNote: You can send a request to retrieve either all or filtered results.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v2-alerts-get_alerts_multi_events",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\r\n\r\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "alert_id_list",
                                "alert_source",
                                "severity",
                                "creation_time",
                                "server_creation_time"
                              ],
                              "description": "Alert field the filter is matching. Filters are based on the following keywords:\r\n- `alert_id_list`: List of integers of the Alert ID\r\n- `alert_source`: List of strings of the Alert source\r\n- `severity`: List of strings of the Alert severity\r\n- `ceation_time`: Timestamp of the creation time\r\n- `server_creation_time`: Timestamp of when Cortex XDR created the alert"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Possible values:\r\n`in`\r\n- permitted for `alert_id`, `alert_source`, and `severity`\r\n- `gte` / `lte`\r\n- Permitted only for `creation_time'"
                            },
                            "value": {
                              "description": "Value that the filter must match. The contents of this field differ depending on the alert field that you specified for this filter.",
                              "oneOf": [
                                {
                                  "type": "array"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "The number of total results returned by this filter without paging. If the filter returns more than 9,999 the total_count value returned will be 9.999. You can use paging to view the entire set of data."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "The number of alerts actually returned as results."
                        },
                        "alerts": {
                          "type": "array",
                          "description": "A list of alerts.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "agent_os_sub_type": {
                                "type": "string"
                              },
                              "fw_app_category": {
                                "nullable": true
                              },
                              "fw_app_id": {
                                "nullable": true
                              },
                              "fw_app_subcategory": {
                                "nullable": true
                              },
                              "fw_app_technology": {
                                "nullable": true
                              },
                              "category": {
                                "type": "string"
                              },
                              "causality_actor_process_command_line": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_image_md5": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_image_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_image_path": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_image_sha256": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_signature_status": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_signature_vendor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_causality_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "identity_sub_type": {
                                "nullable": true
                              },
                              "identity_type": {
                                "nullable": true
                              },
                              "operation_name": {
                                "nullable": true
                              },
                              "project": {
                                "nullable": true
                              },
                              "cloud_provider": {
                                "nullable": true
                              },
                              "referenced_resource": {
                                "nullable": true
                              },
                              "resource_sub_type": {
                                "nullable": true
                              },
                              "resource_type": {
                                "nullable": true
                              },
                              "cluster_name": {
                                "nullable": true
                              },
                              "container_id": {
                                "nullable": true
                              },
                              "contains_featured_host": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "contains_featured_ip": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "contains_featured_user": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "action_country": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "description": {
                                "type": "string"
                              },
                              "fw_interface_to": {
                                "nullable": true
                              },
                              "dns_query_name": {
                                "nullable": true
                              },
                              "agent_device_domain": {
                                "nullable": true
                              },
                              "fw_email_recipient": {
                                "nullable": true
                              },
                              "fw_email_sender": {
                                "nullable": true
                              },
                              "fw_email_subject": {
                                "nullable": true
                              },
                              "event_type": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "is_whitelisted": {
                                "type": "boolean"
                              },
                              "action_file_macro_sha256": {
                                "nullable": true
                              },
                              "action_file_md5": {
                                "nullable": true
                              },
                              "action_file_name": {
                                "nullable": true
                              },
                              "action_file_path": {
                                "nullable": true
                              },
                              "action_file_sha256": {
                                "nullable": true
                              },
                              "fw_device_name": {
                                "nullable": true
                              },
                              "fw_rule_id": {
                                "nullable": true
                              },
                              "fw_rule": {
                                "nullable": true
                              },
                              "fw_serial_number": {
                                "nullable": true
                              },
                              "agent_fqdn": {
                                "nullable": true
                              },
                              "agent_os_type": {
                                "type": "string"
                              },
                              "image_name": {
                                "nullable": true
                              },
                              "actor_process_image_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_command_line": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_image_md5": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_image_path": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_os_pid": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "actor_process_image_sha256": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_signature_status": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_signature_vendor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_thread_thread_id": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "fw_is_phishing": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "action_local_ip": {
                                "nullable": true
                              },
                              "action_local_port": {
                                "nullable": true
                              },
                              "fw_misc": {
                                "nullable": true
                              },
                              "mitre_tactic_id_and_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "mitre_technique_id_and_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "module_id": {
                                "nullable": true
                              },
                              "fw_vsys": {
                                "nullable": true
                              },
                              "os_actor_process_command_line": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_thread_thread_id": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "os_actor_process_image_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_process_os_pid": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "os_actor_process_image_sha256": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_process_signature_status": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_process_signature_vendor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_effective_username": {
                                "nullable": true
                              },
                              "action_process_signature_status": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "action_process_signature_vendor": {
                                "nullable": true
                              },
                              "action_registry_data": {
                                "nullable": true
                              },
                              "action_registry_full_key": {
                                "nullable": true
                              },
                              "action_external_hostname": {
                                "nullable": true
                              },
                              "action_remote_ip": {
                                "nullable": true
                              },
                              "action_remote_port": {
                                "nullable": true
                              },
                              "matching_service_rule_id": {
                                "type": "string"
                              },
                              "fw_interface_from": {
                                "nullable": true
                              },
                              "starred": {
                                "type": "boolean"
                              },
                              "action_process_image_command_line": {
                                "nullable": true
                              },
                              "action_process_image_name": {
                                "nullable": true
                              },
                              "action_process_image_sha256": {
                                "nullable": true
                              },
                              "fw_url_domain": {
                                "nullable": true
                              },
                              "user_agent": {
                                "nullable": true
                              },
                              "fw_xff": {
                                "nullable": true
                              },
                              "external_id": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "matching_status": {
                                "type": "string"
                              },
                              "end_match_attempt_ts": {
                                "nullable": true
                              },
                              "local_insert_ts": {
                                "type": "integer"
                              },
                              "last_modified_ts": {
                                "nullable": true
                              },
                              "bioc_indicator": {
                                "nullable": true
                              },
                              "attempt_counter": {
                                "type": "integer"
                              },
                              "bioc_category_enum_key": {
                                "nullable": true
                              },
                              "case_id": {
                                "type": "integer"
                              },
                              "deduplicate_tokens": {
                                "nullable": true
                              },
                              "filter_rule_id": {
                                "nullable": true
                              },
                              "agent_version": {
                                "type": "string"
                              },
                              "agent_ip_addresses_v6": {
                                "nullable": true
                              },
                              "agent_data_collection_status": {
                                "nullable": true
                              },
                              "agent_is_vdi": {
                                "type": "boolean"
                              },
                              "agent_install_type": {
                                "type": "string"
                              },
                              "agent_host_boot_time": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "event_sub_type": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "association_strength": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "dst_association_strength": {
                                "nullable": true
                              },
                              "story_id": {
                                "nullable": true
                              },
                              "event_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "event_timestamp": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "actor_process_instance_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_process_causality_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "actor_causality_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "causality_actor_process_execution_time": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "action_registry_key_name": {
                                "nullable": true
                              },
                              "action_registry_value_name": {
                                "nullable": true
                              },
                              "action_local_ip_v6": {
                                "nullable": true
                              },
                              "action_remote_ip_v6": {
                                "nullable": true
                              },
                              "action_process_instance_id": {
                                "nullable": true
                              },
                              "action_process_causality_id": {
                                "nullable": true
                              },
                              "os_actor_process_instance_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_process_image_path": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_process_causality_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "os_actor_causality_id": {
                                "nullable": true
                              },
                              "dst_agent_id": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "dst_causality_actor_process_execution_time": {
                                "nullable": true
                              },
                              "dst_action_external_hostname": {
                                "nullable": true
                              },
                              "dst_action_country": {
                                "nullable": true
                              },
                              "dst_action_external_port": {
                                "nullable": true
                              },
                              "is_pcap": {
                                "type": "boolean"
                              },
                              "alert_type": {
                                "type": "string"
                              },
                              "resolution_status": {
                                "type": "string"
                              },
                              "resolution_comment": {
                                "nullable": true
                              },
                              "dynamic_fields": {
                                "nullable": true
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "alert_id": {
                                "type": "string"
                              },
                              "detection_timestamp": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "endpoint_id": {
                                "type": "string"
                              },
                              "host_ip": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "host_name": {
                                "type": "string"
                              },
                              "action": {
                                "type": "string"
                              },
                              "original_tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "user_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "mac_addresses": {
                                "nullable": true
                              },
                              "source": {
                                "nullable": true
                              },
                              "action_pretty": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "alerts": [
                          {
                            "agent_os_sub_type": "<os_sub_type>",
                            "fw_app_category": null,
                            "fw_app_id": null,
                            "fw_app_subcategory": null,
                            "fw_app_technology": null,
                            "category": "<category>",
                            "causality_actor_process_command_line": [
                              "<command_line>"
                            ],
                            "causality_actor_process_image_md5": [
                              "<image_md5>"
                            ],
                            "causality_actor_process_image_name": [
                              "<image_name>"
                            ],
                            "causality_actor_process_image_path": [
                              "<image_path>"
                            ],
                            "causality_actor_process_image_sha256": [
                              "<sha256>"
                            ],
                            "causality_actor_process_signature_status": [
                              "Signed"
                            ],
                            "causality_actor_process_signature_vendor": [
                              "<signature_vendor>"
                            ],
                            "causality_actor_causality_id": [
                              "<causality_id>"
                            ],
                            "identity_sub_type": null,
                            "identity_type": null,
                            "operation_name": null,
                            "project": null,
                            "cloud_provider": null,
                            "referenced_resource": null,
                            "resource_sub_type": null,
                            "resource_type": null,
                            "cluster_name": null,
                            "container_id": null,
                            "contains_featured_host": [
                              "NO"
                            ],
                            "contains_featured_ip": [
                              "NO"
                            ],
                            "contains_featured_user": [
                              "NO"
                            ],
                            "action_country": [
                              "UNKNOWN"
                            ],
                            "description": "The user domain\\username enabled a default account. The default account enabled: domain\\username",
                            "fw_interface_to": null,
                            "dns_query_name": null,
                            "agent_device_domain": null,
                            "fw_email_recipient": null,
                            "fw_email_sender": null,
                            "fw_email_subject": null,
                            "events": null,
                            "event_type": [
                              "<event_type>"
                            ],
                            "is_whitelisted": false,
                            "action_file_macro_sha256": null,
                            "action_file_md5": null,
                            "action_file_name": null,
                            "action_file_path": null,
                            "action_file_sha256": null,
                            "fw_device_name": null,
                            "fw_rule_id": null,
                            "fw_rule": null,
                            "fw_serial_number": null,
                            "agent_fqdn": null,
                            "agent_os_type": "<os_type>",
                            "image_name": null,
                            "actor_process_image_name": [
                              "<image_name>"
                            ],
                            "actor_process_command_line": [
                              "<command_line>"
                            ],
                            "actor_process_image_md5": [
                              "<image_md5>"
                            ],
                            "actor_process_image_path": [
                              "<image_path>"
                            ],
                            "actor_process_os_pid": [
                              996
                            ],
                            "actor_process_image_sha256": [
                              "<image_sha256>"
                            ],
                            "actor_process_signature_status": [
                              "Signed"
                            ],
                            "actor_process_signature_vendor": [
                              "<signature_vendor>"
                            ],
                            "actor_thread_thread_id": [
                              7452
                            ],
                            "fw_is_phishing": [
                              "N/A"
                            ],
                            "action_local_ip": null,
                            "action_local_port": null,
                            "fw_misc": null,
                            "mitre_tactic_id_and_name": [
                              "<mitre_tactic_id_name1>",
                              "<mitre_tactic_id_name2>"
                            ],
                            "mitre_technique_id_and_name": [
                              "<technique_id_name1>",
                              "<technique_id_name2>"
                            ],
                            "module_id": null,
                            "fw_vsys": null,
                            "os_actor_process_command_line": [
                              "<command_line>"
                            ],
                            "os_actor_thread_thread_id": [
                              7205
                            ],
                            "os_actor_process_image_name": [
                              "<image_name>"
                            ],
                            "os_actor_process_os_pid": [
                              996
                            ],
                            "os_actor_process_image_sha256": [
                              "<image_sha256>"
                            ],
                            "os_actor_process_signature_status": [
                              "Signed"
                            ],
                            "os_actor_process_signature_vendor": [
                              "<Signature_vendor>"
                            ],
                            "os_actor_effective_username": null,
                            "action_process_signature_status": [
                              "N/A"
                            ],
                            "action_process_signature_vendor": null,
                            "action_registry_data": null,
                            "action_registry_full_key": null,
                            "action_external_hostname": null,
                            "action_remote_ip": null,
                            "action_remote_port": null,
                            "matching_service_rule_id": "<service_rule_id>",
                            "fw_interface_from": null,
                            "starred": true,
                            "action_process_image_command_line": null,
                            "action_process_image_name": null,
                            "action_process_image_sha256": null,
                            "fw_url_domain": null,
                            "user_agent": null,
                            "fw_xff": null,
                            "external_id": "<external_id>",
                            "severity": "low",
                            "matching_status": "MATCHED",
                            "end_match_attempt_ts": null,
                            "local_insert_ts": 1673372647792,
                            "last_modified_ts": null,
                            "bioc_indicator": null,
                            "attempt_counter": 0,
                            "bioc_category_enum_key": null,
                            "case_id": 9629,
                            "deduplicate_tokens": null,
                            "filter_rule_id": null,
                            "agent_version": "<agent_version>",
                            "agent_ip_addresses_v6": null,
                            "agent_data_collection_status": null,
                            "agent_is_vdi": false,
                            "agent_install_type": "STANDARD",
                            "agent_host_boot_time": [
                              1669128165772
                            ],
                            "event_sub_type": [
                              1
                            ],
                            "association_strength": [
                              50
                            ],
                            "dst_association_strength": null,
                            "story_id": null,
                            "event_id": [
                              "<event_id>"
                            ],
                            "event_timestamp": [
                              1662199363118
                            ],
                            "actor_process_instance_id": [
                              "<instance_id>"
                            ],
                            "actor_process_causality_id": [
                              "<process_causality_id>"
                            ],
                            "actor_causality_id": [
                              "<actor_causality_id>"
                            ],
                            "causality_actor_process_execution_time": [
                              1669528171295
                            ],
                            "action_registry_key_name": null,
                            "action_registry_value_name": null,
                            "action_local_ip_v6": null,
                            "action_remote_ip_v6": null,
                            "action_process_instance_id": null,
                            "action_process_causality_id": null,
                            "os_actor_process_instance_id": [
                              "<instance_id>"
                            ],
                            "os_actor_process_image_path": [
                              "<image_path>"
                            ],
                            "os_actor_process_causality_id": [
                              "<process_causality_id>"
                            ],
                            "os_actor_causality_id": null,
                            "dst_agent_id": [
                              "<agent_id>"
                            ],
                            "dst_causality_actor_process_execution_time": null,
                            "dst_action_external_hostname": null,
                            "dst_action_country": null,
                            "dst_action_external_port": null,
                            "is_pcap": false,
                            "alert_type": "Unclassified",
                            "resolution_status": "STATUS_010_NEW",
                            "resolution_comment": null,
                            "dynamic_fields": null,
                            "tags": [
                              "ET:DESKTOP-FCCIPAN",
                              "EG:k8s agents",
                              "EG:windows"
                            ],
                            "dss_job_title": null,
                            "dss_department": null,
                            "dss_country": null,
                            "dss_groups": null,
                            "alert_id": "<alert_id>",
                            "detection_timestamp": 1569159363318,
                            "name": "A user enabled the Windows DefaultAccount",
                            "endpoint_id": "<endpoint_id>",
                            "host_ip": [
                              "<host_ip>"
                            ],
                            "host_name": "<host_name>",
                            "action": "DETECTED",
                            "original_tags": [
                              "EG:k8s agents",
                              "EG:windows",
                              "ET:DESKTOP-FCCIPAN"
                            ],
                            "user_name": [
                              "<user_name>"
                            ],
                            "mac_addresses": null,
                            "source": null,
                            "action_pretty": "Detected"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/get_alerts_multi_events": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Alerts Multi-Events v1",
        "description": "**Note: ** This endpoint is legacy. Use the [Get Alerts Multi-Events v2](https://cortex-panw.stoplight.io/docs/cortex-xsiam-1/guxcmlw6h3y8v-get-alerts-multi-events-v2) endpoint.\n\nGet a list of alerts with multiple events.\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 100.\n- Offset is the zero-based number of alerts from the start of the result set.\nCortex XDR displays in the APIs response whether an PAN NGFW type alert contains a PCAP triggering packet. Use the Retrieve PCAP Packet API to retrieve a list of alert IDs and their associated PCAP data.\n\nNote: You can send a request to retrieve either all or filtered results.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetAlertsMultiEvents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "If no parameters are included, all results will be returned.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "List of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "alert_id_list",
                                "alert_source",
                                "severity",
                                "creation_time",
                                "server_creation_time",
                                "external_id_list"
                              ],
                              "description": "Identifies the alert field the filter is matching. Filters are based on the following keywords:\n- `alert_id_list`: List of integers representing the Alert IDs.\n- `alert_source`: List of strings representing the Alert sources.\n- `severity`: List of strings representing the Alert severities.\n- `creation_time`: Timestamp of the alert creation time.\n- `server_creation_time`: Timestamp of when Cortex XDR created the alert.\n- `external_id_list`: List of external IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords are:\n`in`: \n- `alert_id_list`, `alert_source`, `severity`, and `external_id_list`.\n`gte` / `lte`\n- `creation_time`."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the alert field that you specified for this filter:\n- `creation_time`: Integer representing the number of seconds or milliseconds after the Unix epoch, UTC timezone. The value is returned in the response under the `detection_timestamp` field, and represented in console under the TIMESTAMP field.\n- `alert_id_list`: Array of integers. Each item in the list must be an alert ID.\n- `severity`: Valid values are `low`, `medium`, `high`, `critical`, `informational`.\n- `external_id_list`: Array of strings.",
                              "oneOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "array"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the starting offset within the query result set from which you want alerts returned.\nAlerts are returned as a zero-based list. Any alert indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end offset within the result set after which you do not want alerts returned.\nAlerts in the alerts list that are indexed higher than this value are not returned in the final results set. Defaults to 100, which returns all alerts to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set. By default the sort is defined as *creation_time*, *desc*.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "severity",
                              "creation_time"
                            ],
                            "description": "Identifies how to sort the result set, either according to severity or creation time. "
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Defines whether to sort the results in ascending (asc) or descending (desc) order."
                          }
                        },
                        "required": [
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "request_data": {
                    "filters": [
                      {
                        "field": "severity",
                        "operator": "in",
                        "value": [
                          "medium",
                          "high"
                        ]
                      }
                    ],
                    "search_from": 0,
                    "search_to": 5,
                    "sort": {
                      "field": "severity",
                      "keyword": "asc"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                },
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "type": "integer",
                      "description": "Number of total results of this filter without paging. If filter returned 10,000 results or more than 9,999 will be the value and you can use paging to view the entire set of data."
                    },
                    "result_count": {
                      "type": "integer",
                      "description": "Number of alerts actually returned as result."
                    },
                    "alerts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/alert"
                      }
                    },
                    "alert_id": {
                      "type": "string"
                    },
                    "detection_timestamp": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "endpoint_id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "host_ip": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "host_name": {
                      "type": "string"
                    },
                    "source": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string"
                    },
                    "action_pretty": {
                      "type": "string"
                    },
                    "malicious_urls": {
                      "type": "array",
                      "description": "Malicious URL/s that have been detected in the destination or content of the accessed web page.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "Success response": {
                    "value": {
                      "reply": {
                        "total_count": 45,
                        "result_count": 1,
                        "alerts": [
                          {
                            "external_id": "<external ID>",
                            "severity": "high",
                            "matching_status": "FAILED",
                            "end_match_attempt_ts": 1603552062824,
                            "local_insert_ts": 1603279967500,
                            "bioc_indicator": null,
                            "matching_service_rule_id": null,
                            "attempt_counter": 55,
                            "bioc_category_enum_key": null,
                            "is_whitelisted": false,
                            "starred": false,
                            "deduplicate_tokens": null,
                            "filter_rule_id": null,
                            "mitre_technique_id_and_name": [
                              ""
                            ],
                            "mitre_tactic_id_and_name": [
                              ""
                            ],
                            "agent_version": "<agent version>",
                            "agent_device_domain": null,
                            "agent_fqdn": "test",
                            "agent_os_type": "Windows",
                            "agent_os_sub_type": "<os subtype>",
                            "agent_data_collection_status": true,
                            "mac": null,
                            "mac_address": [
                              "<mac address>"
                            ],
                            "agent_is_vdi": null,
                            "contains_featured_host": false,
                            "contains_featured_user": false,
                            "contains_featured_ip": false,
                            "events": [
                              {
                                "agent_install_type": "NA",
                                "agent_host_boot_time": null,
                                "event_sub_type": null,
                                "module_id": "Privilege Escalation Protection",
                                "association_strength": null,
                                "dst_association_strength": null,
                                "story_id": null,
                                "event_id": null,
                                "event_type": "Process Execution",
                                "event_timestamp": 1603279888980,
                                "actor_process_instance_id": "<instance ID>",
                                "actor_process_image_path": "c:\\<file path>\\virus.exe",
                                "actor_process_image_name": "virus.exe",
                                "actor_process_command_line": "c:\\<file path>\\virus.exe",
                                "actor_process_signature_status": "N/A",
                                "actor_process_signature_vendor": null,
                                "actor_process_image_sha256": "<SHA256 value>",
                                "actor_process_image_md5": null,
                                "actor_process_causality_id": null,
                                "actor_causality_id": null,
                                "actor_process_os_pid": "<PID>",
                                "actor_thread_thread_id": null,
                                "causality_actor_process_image_name": null,
                                "causality_actor_process_command_line": null,
                                "causality_actor_process_image_path": null,
                                "causality_actor_process_signature_vendor": null,
                                "causality_actor_process_signature_status": "N/A",
                                "causality_actor_causality_id": null,
                                "causality_actor_process_execution_time": null,
                                "causality_actor_process_image_md5": null,
                                "causality_actor_process_image_sha256": null,
                                "action_file_path": null,
                                "action_file_name": null,
                                "action_file_md5": null,
                                "action_file_sha256": null,
                                "action_file_macro_sha256": null,
                                "action_registry_data": null,
                                "action_registry_key_name": null,
                                "action_registry_value_name": null,
                                "action_registry_full_key": null,
                                "action_local_ip": null,
                                "action_local_port": null,
                                "action_remote_ip": null,
                                "action_remote_port": null,
                                "action_external_hostname": null,
                                "action_country": "UNKNOWN",
                                "action_process_instance_id": null,
                                "action_process_causality_id": null,
                                "action_process_image_name": null,
                                "action_process_image_sha256": null,
                                "action_process_image_command_line": null,
                                "action_process_signature_status": "N/A",
                                "action_process_signature_vendor": null,
                                "os_actor_effective_username": null,
                                "os_actor_process_instance_id": null,
                                "os_actor_process_image_path": null,
                                "os_actor_process_image_name": null,
                                "os_actor_process_command_line": null,
                                "os_actor_process_signature_status": "N/A",
                                "os_actor_process_signature_vendor": null,
                                "os_actor_process_image_sha256": null,
                                "os_actor_process_causality_id": null,
                                "os_actor_causality_id": null,
                                "os_actor_process_os_pid": null,
                                "os_actor_thread_thread_id": null,
                                "fw_app_id": null,
                                "fw_interface_from": null,
                                "fw_interface_to": null,
                                "fw_rule": null,
                                "fw_rule_id": null,
                                "fw_device_name": null,
                                "fw_serial_number": null,
                                "fw_url_domain": null,
                                "fw_email_subject": null,
                                "fw_email_sender": null,
                                "fw_email_recipient": null,
                                "fw_app_subcategory": null,
                                "fw_app_category": null,
                                "fw_app_technology": null,
                                "fw_vsys": null,
                                "fw_xff": null,
                                "fw_misc": null,
                                "fw_is_phishing": "N/A",
                                "dst_agent_id": null,
                                "dst_causality_actor_process_execution_time": null,
                                "dns_query_name": null,
                                "dst_action_external_hostname": null,
                                "dst_action_country": null,
                                "dst_action_external_port": null,
                                "user_name": null
                              }
                            ],
                            "alert_id": "<alert ID>",
                            "detection_timestamp": 1603279888980,
                            "name": "Kernel Privilege Escalation",
                            "category": "Exploit",
                            "endpoint_id": "<endpoint ID>",
                            "description": "Local privilege escalation prevented",
                            "host_ip": [
                              "<IP address>"
                            ],
                            "host_name": "Test",
                            "source": "XDR Agent",
                            "action": "BLOCKED",
                            "action_pretty": "Prevented (Blocked)"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/incidents/update_incident": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update an Incident",
        "description": "Update one or more fields of a specific incident. Missing fields are ignored.\nNote the following:\n- `assigned_user_mail` field is validated by Cortex XSIAM to confirm the provided assignee email address belongs to a user that exists in the same Cortex XSIAM tenant.\n- To unassign an incident pass `none` or `\"assigned_user_mail\": \"\"`.\n- To remove a manually set severity pass `none` or `\"manual_severity\": \"\"`.",
        "operationId": "postUpdateIncident",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "incident_id": {
                        "type": "string",
                        "description": "A string representing the incident ID you want to update."
                      },
                      "update_data": {
                        "type": "object",
                        "description": "The data to update the incident with.",
                        "properties": {
                          "assigned_user_mail": {
                            "type": "string",
                            "description": "Updated email address of the incident assignee."
                          },
                          "assigned_user_pretty_name": {
                            "type": "string",
                            "description": "Updated full name of the incident assignee. To supply a new value in this field, you must also supply a value for `assigned_user_mail` in the same request."
                          },
                          "manual_severity": {
                            "type": "string",
                            "enum": [
                              "critical",
                              "high",
                              "medium",
                              "low"
                            ],
                            "description": "Administrator-defined severity."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "new",
                              "resolved_duplicate",
                              "resolved_security_testing",
                              "resolved_true_positive",
                              "resolved_false_positive",
                              "resolved_other",
                              "under_investigation",
                              "resolved_known_issue"
                            ],
                            "description": "Updated incident status."
                          },
                          "resolve_comment": {
                            "type": "string",
                            "description": "Descriptive comment explaining the incident change. This can be set only for resolved incidents."
                          },
                          "comment": {
                            "type": "object",
                            "description": "Add a comment to the incident.",
                            "properties": {
                              "comment_action": {
                                "type": "string",
                                "enum": [
                                  "add"
                                ],
                                "description": "The comment action must be 'add'."
                              },
                              "value": {
                                "type": "string",
                                "description": "The comment text."
                              }
                            },
                            "required": [
                              "comment_action",
                              "value"
                            ]
                          },
                          "<custom_fields>": {
                            "type": "string",
                            "description": "You can include custom incident fields in the request. The names of the custom fields are standardized into lowercase with no white spaces. \r\nor example, `Single Select` would be included as `singleselect`."
                          }
                        }
                      }
                    },
                    "required": [
                      "incident_id",
                      "update_data"
                    ]
                  }
                }
              },
              "examples": {
                "Request example": {
                  "value": {
                    "request_data": {
                      "incident_id": "2927",
                      "update_data": {
                        "assigned_user_mail": "username@test.com",
                        "assigned_user_pretty_name": "Hello World",
                        "manual_severity": "low",
                        "status": "resolved_other",
                        "resolve_comment": "This incident is resolved"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors. For example, test@test.com is not a valid Cortex XDR email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/update_alerts": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Update Alerts",
        "description": "Update one or more alerts. You can update up to 100 alerts per request. Missing fields are ignored.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postUpdateAlerts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "(Required) A dictionary containing the API request fields.\r\n\r\nAn empty dictionary returns all results.",
                    "properties": {
                      "alert_id_list": {
                        "type": "array",
                        "description": "A list representing the alert IDs you want to update.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "update_data": {
                        "type": "object",
                        "description": "The data you want to update the alerts with.",
                        "properties": {
                          "severity": {
                            "type": "string",
                            "enum": [
                              "critical",
                              "high",
                              "medium",
                              "low",
                              "informational"
                            ],
                            "description": "Administrator-defined severity."
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "new",
                              "resolved_threat_handled",
                              "under_investigation",
                              "resolved_security_testing",
                              "resolved_auto",
                              "resolved_known_issue",
                              "resolved_duplicate",
                              "resolved_other",
                              "resolved_false_positive",
                              "resolved_true_positive"
                            ],
                            "description": "Updated alert status. Valid values:\r\n- "
                          },
                          "comment": {
                            "type": "string",
                            "description": "Updated text that appears in the Resolution Comment field of the Alerts table."
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "request_data": {
                    "alert_id_list": "<list of ids>",
                    "update_data": {
                      "severity": "medium",
                      "status": "resolved_other",
                      "comment": "This incident is resolved"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "alert_id_list": "<list of ids>",
                      "update_data": {
                        "severity": "medium",
                        "status": "resolved_other",
                        "comment": "This incident is resolved"
                      }
                    }
                  }
                },
                "example-1": {
                  "value": {
                    "request_data": {
                      "alert_id_list": "<list of alert IDs>",
                      "update_data": {
                        "severity": "low",
                        "status": "resolved_other",
                        "comment": "This alert is resolved"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "IDs of alerts that were updated.",
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "alerts_ids": [
                          104173820,
                          574203823,
                          395720183
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors. For example, test@test.com is not a valid Cortex XDR email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/insert_cef_alerts": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Insert CEF Alerts",
        "description": "Upload alerts in CEF format from external alert sources. After you map CEF alert fields to Cortex XDR fields, Cortex XDR displays the alerts in related incidents and views.\nYou can send 600 alerts per minute.\n\nRequired license: **Cortex XSIAM Enterprise Plus**",
        "operationId": "postInsertCefAlerts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "alerts": {
                        "type": "array",
                        "description": "A list of alerts in CEF format.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "request_data": {
                    "alerts": [
                      "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|microsoft-ds|Unknown|act=AcceptdeviceDirection=0 rt=1569---000 spt=5---57 dpt=4---5cs2Label=Rule Name cs2=ADPrimerylayer_name=FW_Device_blackenedSecuritylayer_uuid=07-----fc7-1a5c-71b8c match_id=1---6parent_rule=0rule_action=Accept rule_uid=8----be5cifname=bond2logid=0loguid={0x5d8c5388,0x61,0x29321fac,0xc0000022}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=363version=5dst=1.1.1.1 inzone=External outzone=Internal product=VPN-1 & FireWall-1proto=6service_id=microsoft-ds src=1.1.1.1",
                      "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|Log|Unknown|act=AcceptdeviceDirection=0 rt=1569477501000 spt=63088 dpt=5985cs2Label=RuleNamelayer_name=FW_Device_blackenedSecuritylayer_uuid=07693f---e96c71b8c match_id=8----9parent_rule=0rule_action=Acceptrule_uid=ae9---70f-ab1c-1ad552c82369conn_direction=Internal ifname=bond1.12logid=0loguid={0x5d8c537d,0xbb,0x29321fac,0xc0000014}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=899version=5dst=1.1.1.1 product=VPN-1 & FireWall-1 proto=6 src=1.1.1.1"
                    ]
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "alerts": [
                        "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|microsoft-ds|Unknown|act=AcceptdeviceDirection=0 rt=1569---000 spt=5---57 dpt=4---5cs2Label=Rule Name cs2=ADPrimerylayer_name=FW_Device_blackenedSecuritylayer_uuid=07-----fc7-1a5c-71b8c match_id=1---6parent_rule=0rule_action=Accept rule_uid=8----be5cifname=bond2logid=0loguid={0x5d8c5388,0x61,0x29321fac,0xc0000022}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=363version=5dst=1.1.1.1 inzone=External outzone=Internal product=VPN-1 & FireWall-1proto=6service_id=microsoft-ds src=1.1.1.1",
                        "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|Log|Unknown|act=AcceptdeviceDirection=0 rt=1569477501000 spt=63088 dpt=5985cs2Label=RuleNamelayer_name=FW_Device_blackenedSecuritylayer_uuid=07693f---e96c71b8c match_id=8----9parent_rule=0rule_action=Acceptrule_uid=ae9---70f-ab1c-1ad552c82369conn_direction=Internal ifname=bond1.12logid=0loguid={0x5d8c537d,0xbb,0x29321fac,0xc0000014}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=899version=5dst=1.1.1.1 product=VPN-1 & FireWall-1 proto=6 src=1.1.1.1"
                      ]
                    }
                  }
                },
                "example-1": {
                  "value": {
                    "request_data": {
                      "alerts": [
                        "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|microsoft-ds|Unknown|act=AcceptdeviceDirection=0 rt=1569---000 spt=5---57 dpt=4---5cs2Label=Rule Name cs2=ADPrimery layer_name=FW_Device_blackenedSecuritylayer_uuid=07-----fc7-1a5c-71b8c match_id=1---6parent_rule=0rule_action=Accept rule_uid=8----be5cifname=bond2logid=0 loguid={0x5d8c5388,0x61,0x29321fac,0xc0000022}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=363version=5dst=1.1.1.1 inzone=External outzone=Internal product=VPN-1 & FireWall-1 proto=6service_id=microsoft-ds src=1.1.1.1",
                        "CEF:0|Check Point|VPN-1 & FireWall-1|Check Point|Log|Log|Unknown|act=AcceptdeviceDirection=0 rt=1569477501000 spt=63088 dpt=5985cs2Label=Rule Namelayer_name=FW_Device_blackenedSecuritylayer_uuid=07693f---e96c71b8c match_id=8----9parent_rule=0rule_action=Acceptrule_uid=ae9---70f-ab1c-1ad552c82369conn_direction=Internal ifname=bond1.12logid=0loguid=0x5d8c537d,0xbb,0x29321fac,0xc0000014}origin=1.1.1.1originsicname=CN=DWdeviceBlackend,O=Blackend sequencenum=899version=5dst=1.1.1.1 product=VPN-1 & FireWall-1 proto=6 src=1.1.1.1"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=upload successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/insert_parsed_alerts": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Insert Parsed Alerts",
        "description": "Upload alerts from external alert sources in Cortex XSIAM format. Cortex XSIAM displays alerts that are parsed successfully in related incidents and views.\nYou can send 600 alerts per minute. Each request can contain a maximum of 60 alerts.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postInsertParsedAlerts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "alerts": {
                        "type": "array",
                        "description": "The external alerts you want to upload to Cortex XSIAM.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product": {
                              "type": "string"
                            },
                            "vendor": {
                              "type": "string"
                            },
                            "local_ip": {
                              "type": "string"
                            },
                            "local_port": {
                              "type": "string"
                            },
                            "remote_ip": {
                              "type": "string"
                            },
                            "remote_port": {
                              "type": "string"
                            },
                            "event_timestamp": {
                              "type": "integer"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "alert_name": {
                              "type": "string"
                            },
                            "alert_description": {
                              "type": "string"
                            },
                            "action_status": {
                              "type": "string"
                            },
                            "local_ip_v6": {
                              "type": "string"
                            },
                            "remote_ip_v6": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "alerts": [
                        {
                          "product": "VPN & Firewall-1",
                          "vendor": "<vendor name>",
                          "local_ip": "<IP address>",
                          "local_port": "<port>",
                          "remote_ip": "<IP address>",
                          "remote_port": "<port>",
                          "event_timestamp": 1543270652000,
                          "severity": "Low",
                          "alert_name": "Alert Name Example",
                          "alert_description": "Alert Description",
                          "action_status": "Reported",
                          "local_ip_v6": "<IPv6 address>",
                          "remote_ip_v6": "<IPv6 address>"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "alerts": [
                        {
                          "product": "VPN & Firewall-1",
                          "vendor": "<vendor name>",
                          "local_ip": "<IP address>",
                          "local_port": "<port>",
                          "remote_ip": "<IP address>",
                          "remote_port": "<port>",
                          "event_timestamp": 1543270652000,
                          "severity": "Low",
                          "alert_name": "Alert Name Example",
                          "alert_description": "Alert Description",
                          "action_status": "Reported",
                          "local_ip_v6": "<IPv6 address>",
                          "remote_ip_v6": "<IPv6 address>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=upload successful"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/get_alerts_pcap": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Retrieve PCAP Packet",
        "description": "Retrieve a list of alert IDs and the associated PCAP triggering packets of PAN NGFW type alerts returned when running the **Get Alerts** and **Get Extra Incident Data** APIs. Maximum result set size is 100.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**\n",
        "operationId": "postGetAlertsPcap",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note: You can send a request to retrieve either all or filtered results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "alert_id_list",
                                "alert_source",
                                "severity",
                                "creation_time"
                              ],
                              "description": "Identifies the alert field the filter is matching. Filters are based on the following keywords:\n- `alert_id_list`: List of integers of the Alert ID\n- `alert_source`: List of strings of the Alert source\n- `severity`: List of strings of the Alert severity\n- `creation_time`: Integer of the Creation time"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Values keywords:\n`in`: \n- `alert_id`, `alert_source`, and `severity`.\n`gte` or `lte`: \n- `creation_time`."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the alert field that you specified for this filter:\n- `creation_time`: Integer representing the number of seconds or milliseconds after the Unix epoch, UTC timezone. The value is returned in the response under the `detection_timestamp` field, and represented in console under the TIMESTAMP field.\n- `alert_id_list`: List of integers. Each item in the list must be an alert ID.\n- `severity`: Valid values are `low`, `medium`, `high`, `critical`, `informational`, `unknown`.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the starting offset within the query result set from which you want alerts returned.\nAlerts are returned as a zero-based list. Any alert indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end offset within the result set after which you do not want alerts returned.\nAlerts in the alerts list that are indexed higher than this value are not returned in the final results set. Defaults to 100, which returns all alerts to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set. By default the sort is defined as creation_time, DESC.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "creation_time",
                              "severity"
                            ],
                            "description": "The field you want to sort by."
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Whether to sort in ascending or descending order."
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "example": {
                  "request_data": {
                    "filters": [
                      {
                        "field": "severity",
                        "operator": "in",
                        "value": [
                          "medium",
                          "high"
                        ]
                      }
                    ],
                    "search_from": 0,
                    "search_to": 5,
                    "sort": {
                      "field": "severity",
                      "keyword": "asc"
                    }
                  }
                }
              },
              "examples": {
                "default": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                },
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "severity",
                          "operator": "in",
                          "value": [
                            "medium",
                            "high"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 5,
                      "sort": {
                        "field": "severity",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging. If filter returned 10,000 results or more than 9,999 will be the value and you can use paging to view the entire set of data."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of alerts actually returned as result."
                        },
                        "alerts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "pcap_data": {
                                "type": "string",
                                "description": "For alerts without PCAP data an empty string is returned."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": [
                        {
                          "id": 283839,
                          "pcap_data": ""
                        },
                        {
                          "id": 319541,
                          "pcap_data": "<pcap_data>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/alerts/create_alert": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Create a Custom Alert",
        "description": "Create a custom alert.\n\nIn addition to the mandatory fields (`vendor`, `product`, `severity`, `category`), any field that appears in the alert table can be used. In order to use a field from the alert table, use its lower camel case representation. For example: `Container ID` -> `container_id`. If the field in the alert table contains a hyphen, replace it with underscore, for example: `App - ID` -> `app_id`.\n\nThe following fields are recommended for creating an alert:\n\t- `remote_ip`\n\t- `remote_host`\n\t- `host_name`\n\t- `group_id`\n\t- `initiated_by`\n\t- `initiator_sha256`\n\t- `target_process_sha256`\n\t- `cgo_sha256`\n\t- `file_sha256`\n\t- `os_parent_cmd`\n\t- `os_parent_user_name`\n\nBy using multiple calls of `create_alert`, you can send up to 600 alerts per minute.\n\nRequired role: **App Service Account**\n\nRequired licenses: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**.",
        "operationId": "postCreateAlert",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "alert": {
                        "type": "object",
                        "description": "The alert fields.",
                        "properties": {
                          "vendor": {
                            "type": "string",
                            "description": "The vendor name."
                          },
                          "product": {
                            "type": "string",
                            "description": "The product name."
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "Informational",
                              "Low",
                              "Medium",
                              "High",
                              "Critical"
                            ],
                            "description": "The severity level of the alert."
                          },
                          "category": {
                            "type": "string",
                            "description": "Can be one of the predefined options:\r\n`Collection`, `Credential Access`, `Discovery`, `Dropper`, `Evasion`, `Execution`, `Exfiltration`, `File Privilege Manipulation`, `File Type Obfuscation`, `Infiltration`, `Lateral Movement`, `Other`, `Persistence`, `Privilege Escalation`, `Reconnaissance`, `Tampering`, or any string value."
                          },
                          "mitre_defs": {
                            "type": "object",
                            "description": "This dictionary represents the relationship between MITRE attack tactics and techniques.\r\nEach tactic is as a key and the value is a list of associated techniques or sub-techniques.\r\nFor example: \"mitre_defs\": {\"TA0007\": [\"T1007\", \"T1033\"], \"TA0002\": [\"T1037.001\"]}"
                          }
                        },
                        "required": [
                          "vendor",
                          "product",
                          "severity",
                          "category"
                        ]
                      }
                    },
                    "required": [
                      "alert"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The reply object from the API call.",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The alert external ID."
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "x-examples": {
                    "Example 1": {
                      "TA0007": [
                        "T1007",
                        "T1033"
                      ],
                      "TA0002": [
                        "T1037.001"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors. For example, test@test.com is not a valid Cortex XDR email address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/featured_fields/replace_hosts": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Replace Featured Hosts",
        "description": "Replace the featured hosts listed in your environment.\n\nNote: Running this API will delete all existing host names.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postReplaceHosts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "description": "An array of host names and comments.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "Defines the host name. Maximum length is 256 characters."
                            },
                            "comment": {
                              "type": "string",
                              "description": "Represents additional information regarding the featured alert field."
                            }
                          },
                          "required": [
                            "value"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "ADMIN-PC",
                          "comment": "ADMIN-PC is a featured host"
                        },
                        {
                          "value": "CEO-PC"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "ADMIN-PC",
                          "comment": "ADMIN-PC is a featured host"
                        },
                        {
                          "value": "CEO-PC"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=host names successfully replaced"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/featured_fields/replace_users": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Replace Featured Users",
        "description": "Replace the featured users listed in your environment.\n\nNote: Running this API will delete all existing user names.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postReplaceUsers",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "description": "An array of users and comments.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "Defines the user name. Maximum length is 256 characters.",
                              "maxLength": 256
                            },
                            "comment": {
                              "type": "string",
                              "description": "Additional information regarding the featured alert field."
                            }
                          },
                          "required": [
                            "value"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "Administrator",
                          "comment": "Administrator is a featured user"
                        },
                        {
                          "value": "System"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "Administrator",
                          "comment": "Administrator is a featured user"
                        },
                        {
                          "value": "System"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true = User names successfully replaced."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/featured_fields/replace_ip_addresses": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Replace Featured IP Addresses",
        "description": "Replace the featured IP addresses listed in your environment.\n\nNote: Running this API will delete all existing IP addresses.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postReplaceIpAddresses",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "description": "An array of IP addresses and comments.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "Define the IP address. Maximum length is 256 characters, IP address can be a single IP address, range, or CIDR.",
                              "maxLength": 256
                            },
                            "comment": {
                              "type": "string",
                              "description": "String that represents additional information regarding the featured IP address."
                            }
                          },
                          "required": [
                            "value"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "1.2.3.4",
                          "comment": "A single featured IP"
                        },
                        {
                          "value": "192.111.1.0-192.111.1.255",
                          "comment": "Featured IP range"
                        },
                        {
                          "value": "7.7.7.7/16",
                          "comment": "Featured CIDR"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "1.2.3.4",
                          "comment": "A single featured IP"
                        },
                        {
                          "value": "192.111.1.0-192.111.1.255",
                          "comment": "Featured IP range"
                        },
                        {
                          "value": "7.7.7.7/16",
                          "comment": "Featured CIDR"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=IP addresses successfully replaced."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/featured_fields/replace_ad_groups": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Replace Featured Active Directory Groups",
        "description": "Replace the featured active directory groups and organizational units listed in your environment.\n\nNote: Running this API will delete all existing active directory groups.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postReplaceAdGroups",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "fields": {
                        "type": "array",
                        "description": "An array of active directory groups and organizational units and comments.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "value": {
                              "type": "string",
                              "description": "String value that defines the active directory or organizational unit name. Maximum length is 256 characters.\nAn active directory name must be formated as: DOMAIN/GROUPNAME"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "group",
                                "OU"
                              ],
                              "description": "Define whether you want to replace an active directory group or organizational unit.\nValid values are either `group` or `OU`.\nIf no value is defined, `group` is sent by default.",
                              "default": "group"
                            },
                            "comment": {
                              "type": "string",
                              "description": "String that represents additional information regarding the featured active directory group."
                            }
                          },
                          "required": [
                            "value"
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "domain/administrators-group",
                          "type": "group",
                          "comment": "Administrators-group is a featured AD group"
                        },
                        {
                          "value": "dev",
                          "type": "OU"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "fields": [
                        {
                          "value": "domain/administrators-group",
                          "type": "group",
                          "comment": "Administrators-group is a featured AD group"
                        },
                        {
                          "value": "dev",
                          "type": "OU"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=Active directory group successfully replaced."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/distributions/get_versions": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Distribution version",
        "description": "Get a list of all the agent versions to use for creating a distribution list.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetVersions",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "windows": {
                          "type": "array",
                          "description": "List of Windows agent versions.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "linux": {
                          "type": "array",
                          "description": "List of Linux agent versions.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "macos": {
                          "type": "array",
                          "description": "List of Mac agent versions.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "windows": [
                          "<version1>",
                          "<version2>",
                          "<version3>",
                          "<version4>"
                        ],
                        "linux": [
                          "<version1>",
                          "<version2>",
                          "<version3>",
                          "<version4>"
                        ],
                        "macos": [
                          "<version1>",
                          "<version2>",
                          "<version3>"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/get_endpoints": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get all Endpoints",
        "description": "Gets a list of all of your endpoints. The response is concatenated using AND condition (OR is not supported).\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetEndpoints",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_id": {
                            "type": "string"
                          },
                          "agent_status": {
                            "type": "string"
                          },
                          "operational_status": {
                            "type": "string"
                          },
                          "host_name": {
                            "type": "string"
                          },
                          "agent_type": {
                            "type": "string"
                          },
                          "ip": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "last_seen": {
                            "type": "integer"
                          },
                          "tags": {
                            "type": "object",
                            "properties": {
                              "server_tags": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "endpoint_tags": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "users": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        {
                          "agent_id": "<agent_id>",
                          "agent_status": "DISCONNECTED",
                          "operational_status": "PROTECTED",
                          "host_name": "<hostname>",
                          "agent_type": "Workstation",
                          "ip": [
                            "<ip_address>"
                          ],
                          "last_seen": 1678012587521,
                          "tags": {
                            "server_tags": [],
                            "endpoint_tags": []
                          },
                          "users": [
                            "user"
                          ]
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": [
                        {
                          "agent_id": "<agent_id>",
                          "agent_status": "DISCONNECTED",
                          "operational_status": "PROTECTED",
                          "host_name": "<hostname>",
                          "agent_type": "Workstation",
                          "ip": [
                            "<ip_address>"
                          ],
                          "last_seen": 1678012587521,
                          "tags": {
                            "server_tags": [],
                            "endpoint_tags": []
                          },
                          "users": [
                            "user"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/get_policy": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Policy",
        "description": "Get the policy name for a specific endpoint.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetPolicy",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "endpoint_id": {
                        "type": "string",
                        "description": "Endpoint ID."
                      }
                    },
                    "required": [
                      "endpoint_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "endpoint_id": "<endpoint ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "endpoint_id": "<endpoint ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "policy_name": {
                          "type": "string",
                          "description": "Name of the policy allocated with the endpoint."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "policy_name": "Windows Default"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "policy_name": "Windows Default"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/delete": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Delete Endpoints",
        "description": "Delete selected endpoints in the Cortex XDR app. You can delete up to 1000 endpoints.\n\nNote: Endpoints are deleted from the Cortex XDR app web interface, however they still exist in the database.\n\nWhen filtering by multiple fields:\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 1000.\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postDelete",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`: List of strings"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match. Valid keywords:\n- `endpoint_id_list`: List of strings",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/distributions/create": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Create distributions",
        "description": "Create an installation package. This is an async call that returns the distribution ID; it does not mean that the creation succeeded. To confirm the package has been created, check the status of the distribution by running the **Get Distribution Status** API.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postCreate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the installation package."
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "windows",
                          "linux",
                          "macos",
                          "android"
                        ],
                        "description": "The installation platform."
                      },
                      "package_type": {
                        "type": "string",
                        "description": "A string representing the type of package to create. Each JSON object must contain *one* of the following keywords:\n- `standalone`: Installation for a new agent. When using this, you must include the `platform` field with one of the following values: `windows`, `linux`, `macos`, `android`.\n- `upgrade`: Upgrade of an agent from ESM. When using this, you must include the `agent_version` field with  one of the following values: `windows_version`, `linux_version`, or `macos_version`."
                      },
                      "agent_version": {
                        "type": "string",
                        "enum": [
                          "windows_version",
                          "linux_version",
                          "macos_version"
                        ],
                        "description": "(Not required for Android platform)"
                      }
                    },
                    "required": [
                      "name",
                      "package_type"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "name": "<installation package name>",
                      "platform": "windows",
                      "package_type": "standalone",
                      "agent_version": "<agent version>"
                    }
                  }
                }
              },
              "examples": {
                "New Installation example": {
                  "value": {
                    "request_data": {
                      "name": "<installation package name>",
                      "platform": "windows",
                      "package_type": "standalone",
                      "agent_version": "windows_version"
                    }
                  }
                },
                "Upgrade example": {
                  "value": {
                    "request_data": {
                      "name": "<installation package name>",
                      "package_type": "upgrade",
                      "agent_version": "windows_version"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "distribution_id": {
                          "type": "string",
                          "description": "Installation package ID."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "distribution_id": "<distribution ID value>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/device_control/get_violations": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Violations",
        "description": "Gets a list of device control violations filtered by selected fields. You can retrieve up to 100 violations.\n\nWhen filtering by multiple fields:\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 100.\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetViolations",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "You can send a request to retrieve either *all* or *filtered* results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "An empty object returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Provides an array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list",
                                "type",
                                "timestamp",
                                "ip_list",
                                "vendor",
                                "vendor_id",
                                "product",
                                "product_id",
                                "serial",
                                "hostname",
                                "violation_id_list",
                                "username"
                              ],
                              "description": "String that identifies the violation field the filter is matching. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `type`: Type of violation.\n- `timestamp`: Timestamp of the violation.\n- `ip_list`: List of IP addresses.\n- `vendor`: Name of vendor.\n- `vendor_id`: Vendor ID.\n- `product`: Name of product.\n- `product_id`: Product ID.\n- `serial`: Serial number.\n- `hostname`: Hostname.\n- `violation_id_list`: List of violation IDs.\n- `username`: Username."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords are:\n`in`\n— Permitted for all fields except `timestamp`.\n`gte` / `lte`\n— Permitted only for `timestamp`."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the violation field that you specified for this filter:\n- `timestamp`: Integer, in UTC timezone epoch milliseconds\n- `violation_id_list`: List of integers\n- `ip_list`: Must contain an IP string\n- `type`: Must be either `cd-rom`, `disk drive`, `floppy disk`, `portable device`\n- All other fields need to be list of strings.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "Integer representing the starting offset within the query result set from which you want violations returned.\nViolations are returned as a zero-based list. Any violation indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end of offset within the result set after which you do not want violations returned.\nViolations in the violation list that are indexed higher than this value are not returned in the final results set. Defaults to zero, which returns all alerts to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "endpoint_id_list",
                              "type",
                              "timestamp",
                              "ip_list",
                              "vendor",
                              "vendor_id",
                              "product",
                              "product_id",
                              "serial",
                              "hostname",
                              "violation_id_list",
                              "username"
                            ],
                            "description": "The field you want to sort by."
                          },
                          "value": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Can be either `asc` (ascending) or `desc` (descending).",
                            "default": "desc"
                          }
                        },
                        "required": [
                          "field",
                          "value"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "type",
                          "operator": "in",
                          "value": [
                            "disk drivE"
                          ]
                        }
                      ],
                      "search_to": 1
                    }
                  }
                }
              },
              "examples": {
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "type",
                          "operator": "in",
                          "value": [
                            "disk drive"
                          ]
                        }
                      ],
                      "search_to": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of alerts actually returned as a result."
                        },
                        "violations": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/violation"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "total_count": 10,
                        "result_count": 1,
                        "violations": [
                          {
                            "hostname": "<host name>",
                            "username": "test",
                            "ip": "<IP address>",
                            "timestamp": 1576260019000,
                            "violation_id": 11,
                            "type": "Disk Drive",
                            "vendor_id": "<vendor ID>",
                            "vendor": "<vendor name>",
                            "product_id": "<product ID>",
                            "product": "<product name>",
                            "serial": "<serial number>",
                            "endpoint_id": "<endpoint ID>"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/distributions/get_status": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Distribution status",
        "description": "Check the status of the installation package.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "distribution_id": {
                        "type": "string",
                        "description": "The installation package ID."
                      }
                    },
                    "required": [
                      "distribution_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "distribution_id": "<distribution ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The status of the installation package."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "status": "Completed"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/distributions/get_dist_url": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Distribution URL",
        "description": "Get the distribution URL for downloading the installation package.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetDistUrl",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "distribution_id": {
                        "type": "string",
                        "description": "Installation package ID."
                      },
                      "package_type": {
                        "type": "string",
                        "description": "A string representing the type of installation package. Select *one* of the following valid keywords and values:\n- `upgrade`\nPackage type should match the distribution type or platform:\n- `sh`: x86_64 Linux SH installer\n- `rpm`: x86_64 Linux RPM installer\n- `deb`: x86_64 Linux DEB installer\n- `aarch64_sh`: aarch64 Linux SH installer\n- `aarch64_rpm`: aarch64 Linux RPM installer\n- `aarch64_deb`: aarch64 Linux DEB installer\n- `pkg`: Mac\n- `x86`: Windows\n- `x64`: Windows"
                      }
                    },
                    "required": [
                      "distribution_id",
                      "package_type"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "distribution_id": "<distribution ID>",
                      "package_type": "x86"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "distribution_id": "<distribution ID>",
                      "package_type": "x86"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "distribution_url": {
                          "type": "string",
                          "description": "URL for downloading the installation package."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "distribution_url": "<DOWNLOAD_URL>"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "distribution_url": "<DOWNLOAD_URL>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/update_agent_name": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Set an Endpoint Alias",
        "description": "Set or modify an Alias field for your endpoints.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postUpdateAgentName",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list",
                                "endpoint_status",
                                "dist_name",
                                "ip_list",
                                "group_name",
                                "platform",
                                "alias",
                                "isolate",
                                "hostname"
                              ],
                              "description": "String that identifies the field the filter is matching. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `endpoint_status`: Status of the endpoint ID.\n- `dist_name`: Distribution / Installation Package name.\n- `ip_list`: List of IP addresses.\n- `group_name`: Group name the agent belongs to.\n- `platform`: Platform name.\n- `alias`: Alias name.\n- `isolate`: If the endpoint was isolated.\n- `hostname`: Hostname."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`: List of strings.\n- `endpoint_status`: Permitted values are `connected` or `disconnected`\n- `ip_list`: List of strings, for example 192.168.5.12.\n- `platform`: Permitted values are `windows`, `linux`, `macos`, or `android`\n- `isolate`: Permitted values are `isolated` or `unisolated`.\n- `scan_status`: Permitted values are `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n`gte` / `lte`\n- `first_seen` and `last_seen`: Integer in timestamp epoch milliseconds."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the endpoint field that you specified for this filter:\n- `endpoint_id_list`, `dist_name`, `hostname`, `alias`, `group_name`: List of strings.\n- `endpoint_status`: Must contain only the following valid values: `connected` or `disconnected`\n- `ip_list`: String list of IP addresses.\n- `platform`: Must contain only the following valid values: `windows`, `linux`, `macos`, or `android`.\n- `isolate`: Must contain only the following valid values: `isolated` or `unisolated`.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "alias": {
                        "type": "string",
                        "description": "The alias name you want to set or modify.\n\nNote: If you send an empty field, the current alias name is deleted."
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "context": {
                      "lcaas_id": "<tenant_id>"
                    },
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id"
                          ]
                        }
                      ],
                      "alias": "<alias_name>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id>"
                          ]
                        }
                      ],
                      "alias": "<alias_name>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=The alias name was set or modified successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/tags/agents/assign": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Assign Tags",
        "description": "Assign one or more tags to one or more endpoints.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postAssign",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id",
                                "endpoint_id_list",
                                "last_seen",
                                "first_seen",
                                "dist_name",
                                "ip_list",
                                "platform",
                                "alias",
                                "hostname",
                                "isolate",
                                "username",
                                "scan_status",
                                "group_name",
                                "endpoint_status",
                                "operational_status",
                                "public_ip_list"
                              ],
                              "description": "String that identifies the field the filter is matching. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `last_seen`: When an endpoint was last seen.\n- `first_seen`: When an endpoint was first seen.\n- `dist_name`: Distribution / Installation Package name.\n- `ip_list`: List of IP addresses.\n- `platform`: Platform name.\n- `alias`: Alias name.\n- `hostname`: Hostname.\n- `isolate`: If the endpoint was isolated.\n- `username`: Name of user.\n- `scan_status`: Status of the scan.\n- `group_name`: Group name the agent belongs to.\n- `endpoint_status`: Status of the endpoint ID.\n- `operational_status`: Operational status.\n- `public_ip_list`: List of public IP addresses."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`, `operational_status`: List of strings.\n- `endpoint_status`: Permitted values are `connected`, `lost`, `disconnected`, `uninstalled`.\n- `ip_list`, `public_ip_list`: List of strings, for example \"192.168.5.12\".\n- `platform`: Permitted values are `windows`, `linux`, `macos`, `android`, `ios`.\n- `isolate`: Permitted values are `isolated` or `unisolated`.\n- `scan_status`: Permitted values are `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n- `operational_status`: Permitted values are `protected`, `partially_protected`, `unprotected`.\n`gte` / `lte`\n- `first_seen` and `last_seen`: Integer in timestamp epoch milliseconds."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the endpoint field that you specified for this filter:\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`, `operational_status`: List of strings.\n- `endpoint_status`: Must contain only the following valid values: `connected`, `disconnected`, `lost`, or `uninstalled`.\n- `operational_status`: Must contain only the following valid values: `protected`, `partially_protected`, `unprotected`.\n- `ip_list`, `public_ip_list`: String list of IP addresses.\n- `platform`: Must contain only the following valid values: `windows`, `linux`, `macos`, `android`, or `ios`.\n- `isolate`: Must contain only the following valid values: `isolated` or `unisolated`.\n- `scan_status`: Must contain only the following valid values: `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n- `first_seen` and `last_seen`: Integer in timestamp epoch milliseconds.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "tag": {
                        "type": "string",
                        "description": "The tag you want to assign."
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "context": {
                      "lcaas_id": "<tenant_id>"
                    },
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id"
                          ]
                        }
                      ],
                      "tag": "<tag_name>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id>"
                          ]
                        }
                      ],
                      "tag": "<tag_name>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=The tag name was assigned successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "x  Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/tags/agents/remove": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Remove Tags",
        "description": "Remove one or more tags from one or more endpoints.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postRemove",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the following API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list",
                                "endpoint_status",
                                "dist_name",
                                "ip_list",
                                "group_name",
                                "platform",
                                "alias",
                                "isolate",
                                "hostname"
                              ],
                              "description": "String that identifies the field the filter is matching. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `endpoint_status`: Status of the endpoint ID.\n- `dist_name`: Distribution / Installation Package name.\n- `ip_list`: List of IP addresses.\n- `group_name`: Group name the agent belongs to.\n- `platform`: Platform name.\n- `alias`: Alias name.\n- `isolate`: If the endpoint was isolated.\n- `hostname`: Hostname."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`: List of strings.\n- `endpoint_status`: Permitted values are `connected` or `disconnected`.\n- `ip_list`: List of strings, for example 192.168.5.12.\n- `platform`: Permitted values are `windows`, `linux`, `macos`, or `android`.\n- `isolate`: Permitted values are `isolated` or `unisolated`.\n- `scan_status`: Permitted values are `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n`gte` / `lte`\n- `first_seen` and `last_seen`: Integer in timestamp epoch milliseconds."
                            },
                            "value": {
                              "description": "Value that this filter must match. The contents of this field will differ depending on the endpoint field that you specified for this filter:\n- `endpoint_id_list`, `distribution_name`, `hostname`, `alias`, `group_name`: List of strings.\n- `endpoint_status`: Must contain only the following valid values: `connected` or `disconnected`\n- `ip_list`: String list of IP addresses.\n- `platform`: Must contain only the following valid values: `windows`, `linux`, `macos`, or `android`.\n- `isolate`: Must contain only the following valid values: `isolated` or `unisolated`.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "tag": {
                        "type": "string",
                        "description": "The tag you want to remove."
                      }
                    }
                  }
                },
                "x-examples": {
                  "example-1": {
                    "context": {
                      "lcaas_id": "<tenant_id>"
                    },
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id"
                          ]
                        }
                      ],
                      "tag": "<tag_name>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<distribution_id>"
                          ]
                        }
                      ],
                      "tag": "<tag_name>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=tag name removed successfully."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/restore": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Restore File",
        "description": "Restore a quarantined file on a requested endpoints.\nWhen filtering by multiple fields:\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 100.\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postRestore",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "file_hash": {
                        "type": "string",
                        "description": "String that represents the file in hash. Hash must be a valid SHA256."
                      },
                      "endpoint_id": {
                        "type": "string",
                        "description": "String that represents the endpoint ID.\nNote: if it is not specified, the request will run restore on all endpoints which relate to the quarantined file you defined."
                      },
                      "incident_id": {
                        "type": "integer",
                        "description": "String representing the incident ID.\nWhen included in the request, the Restore File action will appear in the Cortex XDR Incident View Timeline tab."
                      }
                    },
                    "required": [
                      "file_hash"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "file_hash": "<hash value>",
                      "incident_id": 302
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "file_hash": "<hash value>",
                      "incident_id": 302
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "action_id": {
                          "type": "string"
                        },
                        "endpoints_count": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "endpoints_count": "673"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": 1,
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/actions/file_retrieval_details": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "File Retrieval Details",
        "description": "View the API required to call in order to download the file retrieved by the **Retrieve File** API request according to the action ID.\n\nThe response contains a file hash you need to download and then unzip to view:\n1. Download the file.\n\n<!--\ntitle: \"Request Example\"\n-->\n``` curl\ncurl -XPOST \"https://api-{fqdn}/public_api/v1/download/<api_value>\" \n-H \"x-xdr-auth-id:{API_KEY_ID}\"  \n-H \"Authorization:{API_KEY}\" \n-H 'Content-Type:application/json' \n--output /tmp/file.zip\n```\n2. Unzip the file: `unzip /tmp/file.zip`\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postFileRetrievalDetails",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "group_action_id": {
                        "type": "string",
                        "description": "The action ID of the **Retrieve File** API response."
                      }
                    },
                    "required": [
                      "group_action_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "group_action_id": "<action ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "group_action_id": "<action ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "endpoint_ID": {
                              "type": "string",
                              "description": "API required to call in order to download the retrieved result."
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "data": {
                          "<endpoint_ID>": "https://api-{fqdn}/public_api/v1/download/<api_value>"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "data": {
                          "<endpoint_ID>": "https://api-{fqdn}/public_api/v1/download/<api_value>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/hash_exceptions/allowlist": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Allow List Files",
        "description": "Add files which do not exist in the allow or block lists to an allow list.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postAllowlist",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "hash_list": {
                        "type": "array",
                        "description": "A list of hashed files you want to add to the allow list. Hash must be a valid SH256.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "comment": {
                        "type": "string",
                        "description": "Additional information regarding the action."
                      },
                      "incident_id": {
                        "type": "integer",
                        "description": "The incident ID related to the hash.\nWhen included in the request, the **Allow List** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "hash_list"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "hash_list": [
                        "032196FB1A---DFCF69E5D553F0",
                        "365296EB1B---FCF29E5D553E4",
                        "365296EB1B---FCF69E3D553E4",
                        "365296EB1B---FCF69E5D553D4",
                        "365296EB1B---FCF79E5D553D4"
                      ],
                      "comment": "test",
                      "incident_id": 5
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "hash_list": [
                        "032196FB1A---DFCF69E5D553F0",
                        "365296EB1B---FCF29E5D553E4",
                        "365296EB1B---FCF69E3D553E4",
                        "365296EB1B---FCF69E5D553D4",
                        "365296EB1B---FCF79E5D553D4"
                      ],
                      "comment": "test",
                      "incident_id": 5
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=File successfully added to the allow list."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/quarantine/status": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Get Quarantine Status",
        "description": "Retrieve the quarantine status for specified files.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "files": {
                        "type": "array",
                        "description": "Array of endpoint IDs, filepaths, and file hash.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "endpoint_id": {
                              "type": "string",
                              "description": "Endpoint ID"
                            },
                            "file_path": {
                              "type": "string",
                              "description": "File hash. Must be a valid SHA256."
                            },
                            "file_hash": {
                              "type": "string",
                              "description": "File path."
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "files"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "files": [
                        {
                          "endpoint_id": "<endpoint ID>",
                          "file_path": "C:\\<file path>\\test_x64.msi",
                          "file_hash": "<hash value>"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "files": [
                        {
                          "endpoint_id": "<endpoint ID>",
                          "file_path": "C:\\<file path>\\test_x64.msi",
                          "file_hash": "<hash value>"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "endpoint_id": {
                            "type": "string",
                            "description": "Endpoint ID."
                          },
                          "file_path": {
                            "type": "string",
                            "description": "File path."
                          },
                          "file_hash": {
                            "type": "string",
                            "description": "File hash."
                          },
                          "status": {
                            "type": "boolean",
                            "description": "The file's status.\nTrue: The file is quarantined.\nFalse: The file is not quarantined."
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": [
                        {
                          "endpoint_id": "<endpoint ID>",
                          "file_path": "C:\\<file path>\\test_x64.msi",
                          "file_hash": "<hash value>",
                          "status": false
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": [
                        {
                          "endpoint_id": "<endpoint ID>",
                          "file_path": "C:\\<file path>\\test_x64.msi",
                          "file_hash": "<hash value>",
                          "status": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/quarantine": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Quarantine Files",
        "description": "Quarantine file on selected endpoints. You can select up to 1000 endpoints.\n\nNote: A success response means that the request reached the defined endpoints, however if the file was not found there, no quarantine action will take place. To ensure if the file has been quarantined, check the Cortex XDR Action Center.\n\nWhen filtering by multiple fields:\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 1000.\n- Offset is the zero-based number of incidents from the start of the result set.",
        "operationId": "postQuarantine",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`: List of strings"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match. Valid keywords:\n- `endpoint_id_list`: Array of strings",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "file_path": {
                        "type": "string",
                        "description": "The path of the file you want to quarantine. You must enter a proper path and not symbolic links."
                      },
                      "file_hash": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Quarantine File** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "filters",
                      "file_path",
                      "file_hash"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "file_path": "C:\\<file path>\\test_x64.msi",
                      "file_hash": "<hash value>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "file_path": "C:\\<file path>\\test_x64.msi",
                      "file_hash": "<hash value>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "ID of action to quarantine selected endpoints.\nResponse only indicates the request was successfully sent to the endpoint. To track if the file quarantine succeeded either:\n- In Cortex XDR console, navigate to **Response** > **Action Center** and search for the action ID. Make sure the **Action ID** field is selected in the table **Layout** settings.\n- Send a **Get Action Status** API request."
                        },
                        "status": {
                          "type": "string",
                          "description": "Integer representing whether the action:\n- 1: succeeded\n- 0: failed"
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "[ID value]",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "action_id": "[ID value]",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/hash_exceptions/blocklist": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Block List Files",
        "description": "Add files which do not exist in the allow or block lists to a block list.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postBlocklist",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "hash_list": {
                        "type": "array",
                        "description": "A list of hashed files you want add to a block list. Hash must be a valid SH256.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "comment": {
                        "type": "string",
                        "description": "Additional information regarding the action."
                      },
                      "incident_id": {
                        "type": "integer",
                        "description": "The incident ID related to the hash.\nWhen included in the request, the **Block List** action appears in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "hash_list"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "hash_list": [
                        "032196FB1A---DFCF69E5D553F0",
                        "365296EB1B---FCF69E7D553E4",
                        "365296EB1B---FCF69E5D523E4",
                        "365296EB1B---FCF69E5D553D4",
                        "365296EB1B---FCF63E5D553D4"
                      ],
                      "comment": "test",
                      "incident_id": 5
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "hash_list": [
                        "032196FB1A---DFCF69E5D553F0",
                        "365296EB1B---FCF69E7D553E4",
                        "365296EB1B---FCF69E5D523E4",
                        "365296EB1B---FCF69E5D553D4",
                        "365296EB1B---FCF63E5D553D4"
                      ],
                      "comment": "test",
                      "incident_id": 5
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "description": "true=File successfully added to block list."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/unisolate": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Unisolate Endpoints",
        "description": "Reverse the isolation of one or more endpoints in single request.\n\nNote: You can only send a request with either `endpoint_id` to unisolate one endpoint or with filters to unisolate more than one endpoint. An error is raised if you try to use both `endpoint_id` and the filters.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postUnisolate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "One of `endpoint_id` of `filters` is required, but not both.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields for unisolating a number of endpoints at once.\nNote: This field is only required if unisolating more than one endpoint.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`: List of strings"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match. Valid keywords:\n- `endpoint_id_list`: List of strings",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "endpoint_id": {
                        "type": "string",
                        "description": "The ID of the endpoint to unisolate.\n\nNote: this field is only required if unisolating one endpoint."
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Unisolate Endpoints** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "endpoint_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "dist_name",
                          "operator": "IN",
                          "value": [
                            "MG"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Unisolate one endpoint": {
                  "value": {
                    "request_data": {
                      "endpoint_id": "<endpoint ID>"
                    }
                  }
                },
                "Unisolate more than one endpoint": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "IN",
                          "value": [
                            "<endpoint_id_1>",
                            "<endpoint_id_2>",
                            "<endpoint_id_3>"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "ID of the action to unisolate selected endpoints.\nResponse only indicates the request was successfully sent to the endpoint. To track if the endpoint was restored either:\n- In the Cortex XDR console, navigate to **Response** > **Action Center** > **Isolation** and search for the action ID. Make sure the **Action ID** field is selected in the table **Layout** settings.\n- Send a **Get Action Status** API request."
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/abort_scan": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Cancel Scan Endpoints",
        "description": "Cancel the scan of selected endpoints. A scan can only be aborted if the selected endpoints are in **Pending** or in **Progress** status.\n\nWhen filtering by multiple fields:\n- Response is concatenated using AND condition (OR is not supported).\n- Offset is the zero-based number of endpoints from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postAbortScan",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "description": "An array of filter fields to filter which endpoints to cancel scanning.\nTo cancel scan of all endpoints, use the value \"all\".",
                        "oneOf": [
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "field": {
                                  "type": "string",
                                  "enum": [
                                    "endpoint_id_list",
                                    "dist_name",
                                    "first_seen",
                                    "last_seen",
                                    "ip_list",
                                    "group_name",
                                    "platform",
                                    "alias",
                                    "isolate",
                                    "hostname",
                                    "username"
                                  ],
                                  "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `dist_name`: Name of the distribution list.\n- `first_seen`: When an endpoint was first seen.\n- `last_seen`: When an endpoint was last seen.\n- `ip_list`: List of IP addresses.\n- `group_name`: Name of endpoint group.\n- `platform`: Type of operating system.\n- `alias`: Endpoint alias name.\n- `isolate`: If an endpoint has been isolated.\n- `hostname`: Name of host.\n- `username`: Name of user."
                                },
                                "operator": {
                                  "type": "string",
                                  "enum": [
                                    "in",
                                    "gte",
                                    "lte"
                                  ],
                                  "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`: List of strings\n- `ip_list`: List of strings, for example 192.168.5.12\n- `platform`: Permitted values are `windows`, `linux`, `macos`, `android`\n- `isolate`: Permitted values are `isolated` or `unisolated`\n- `scan_status`: Permitted values are `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`\n`gte` / `lte`\n- `first_seen` and `last_seen`:  Integer in timestamp epoch milliseconds."
                                },
                                "value": {
                                  "description": "Value that this filter must match. Valid keywords:\n- `first_seen`, `last_seen`: Integer in timestamp epoch milliseconds, UTC timezone\n- `endpoint_id_list`, `dist_name`, `hostname`, `alias`, `group_name`: List of strings\n- `ip_list`: List of strings, for example 192.168.5.12\n- `isolate`: Permitted values are `isolated` or `unisolated`.\n- `platform`: Permitted values are `windows`, `linux`, `macos`, or `android`.",
                                  "oneOf": [
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "field",
                                "operator",
                                "value"
                              ]
                            }
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Cancel Scan Endpoints** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "WinInstaller"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "To cancel scan of all endpoints": {
                  "value": {
                    "request_data": {
                      "filters": "all"
                    }
                  }
                },
                "To cancel scan of filtered endpoints": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "WinInstaller"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "ID of action to cancel scan selected endpoints.\nResponse only indicates the request was successfully sent to the endpoint. To track if the scan succeeded either:\n- In Cortex XDR console, navigate to **Response** > **Action Center** and search for the action ID. Make sure the **Action ID** field is selected in the table Layout settings.\n- Send a **Get Action Status** API request."
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "<action ID value>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/scan": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Scan Endpoints",
        "description": "Run a scan on selected endpoints.\n- Response is concatenated using AND condition (OR is not supported).\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postScan",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note: You can send a request to retrieve either **all** or **filtered** results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "string",
                        "enum": [
                          "all"
                        ],
                        "description": "An array of filter fields. To scan all endpoints, use the value `all`."
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Scan Endpoints** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "WinInstaller"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Scan all endpoints": {
                  "value": {
                    "request_data": {
                      "filters": "all"
                    }
                  }
                },
                "Scan filtered endpoints": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "WinInstaller"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test\""
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success"
                          ]
                        },
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "test"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "ID of action to scan selected endpoints.\nResponse only indicates the request was successfully sent to the endpoint. To track if the scan was successful either:\n- In Cortex XDR console, navigate to **Response** > **Action Center** > **All Actions** and search for the action ID. Make sure the **Action ID** field is selected in the table **Layout** settings.\n- Send a **Get Action Status** API request."
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/actions/get_action_status": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Get Action Status",
        "description": "Retrieve the status of the requested actions according to the action ID.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetActionStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "group_action_id": {
                        "type": "integer",
                        "description": "Action ID of the selected request."
                      }
                    },
                    "required": [
                      "group_action_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "group_action_id": "<action ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "group_action_id": 123456789
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "agent_id": {
                              "type": "string",
                              "enum": [
                                "PENDING",
                                "IN_PROGRESS",
                                "CANCELLED",
                                "PENDING_ABORT",
                                "ABORTED",
                                "EXPIRED",
                                "COMPLETED_PARTIAL",
                                "COMPLETED_SUCCESSFULLY",
                                "FAILED",
                                "TIMEOUT"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "data": {
                          "<agent ID>": "COMPLETED_SUCCESSFULLY"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "data": {
                          "<agent ID>": "COMPLETED_SUCCESSFULLY"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/run_snippet_code_script": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Run Snippet Code Script",
        "description": "Initiate a new endpoint script execution action using provided snippet code. Cortex XDR supports sending your request in Base64.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postRunSnippetCodeScript",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields for running the script on a number of endpoints at once.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`: List of strings"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "timeout": {
                        "type": "integer",
                        "description": "The timeout in seconds for this execution. Default value is 600.",
                        "default": 600
                      },
                      "snippet_code": {
                        "type": "string",
                        "description": "Section of a script you want to initiate on an endpoint."
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Run Snippet Code Script** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "filters",
                      "snippet_code"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "snippet_code": "print (\"7\")"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "snippet_code": "print (\"7\")"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": " ID of the action initiated. ID will be used as a reference to track in the action center."
                        },
                        "endpoints_count": {
                          "type": "integer",
                          "description": "Number of endpoints the action was initiated on."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "endpoints_count": 21
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "action_id": "<action ID>",
                        "endpoints_count": 21
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/run_script": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Run Script",
        "description": "Initiate a new endpoint script execution action using a script from the script library. The script can be run on up to 1000 endpoints.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postRunScript",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields for running the script on a number of endpoints at once.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "String that identifies a list the filters match. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`: List of strings",
                              "default": "in"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "script_uid": {
                        "type": "string",
                        "description": "GUID, unique identifier of the script, returned by the **Get Scripts** API per script."
                      },
                      "parameters_values": {
                        "type": "object",
                        "description": "Dictionary containing the parameter name, `key`, and its value for this execution, `value`.\n\nYou can obtain these values by running **Get Script Metadata** API.",
                        "properties": {
                          "x": {
                            "type": "string"
                          },
                          "y": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "x",
                          "y"
                        ]
                      },
                      "timeout": {
                        "type": "integer",
                        "description": "Timeout in seconds for this execution. Default value is 600.",
                        "default": 600
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID.\nWhen included in the request, the **Run Script** action will appear in the **Cortex XDR Incident View Timeline** tab."
                      }
                    },
                    "required": [
                      "filters",
                      "script_uid"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "script_uid": "<unique ID>",
                      "parameters_values": {
                        "x": "param input as returned in Get Script Metadata",
                        "y": 4
                      }
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID>"
                          ]
                        }
                      ],
                      "script_uid": "<unique ID>",
                      "parameters_values": {
                        "x": "param input as returned in Get Script Metadata",
                        "y": 4
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "integer",
                          "description": "ID of the action initiated. ID will be used as a reference to track in the action center."
                        },
                        "endpoints_count": {
                          "type": "integer",
                          "description": "Number of endpoints the action was initiated on."
                        },
                        "status": {
                          "type": "integer",
                          "description": "Integer representing whether the action:\n- 1: succeeded\n- 0: failed"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "action_id": 22519813685366,
                        "status": 1,
                        "endpoints_count": 1
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "action_id": 22519813685366,
                        "status": 1,
                        "endpoints_count": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_script_metadata": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Script Metadata",
        "description": "Get the full definitions of a specific script in the scripts library.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScriptMetadata",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "script_uid": {
                        "type": "string",
                        "description": "Unique identifier of the script, returned by the **Get Scripts** API per script."
                      }
                    },
                    "required": [
                      "script_uid"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "script_uid": "<unique ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "script_uid": "<unique ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "script_id": {
                          "type": "string",
                          "description": "Script ID."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of script."
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of script."
                        },
                        "modification_date": {
                          "type": "integer",
                          "description": "Timestamp of when the script was last modified."
                        },
                        "created_by": {
                          "type": "string",
                          "description": "Name of the user who created the script."
                        },
                        "is_high_risk": {
                          "type": "boolean",
                          "description": "Whether the script has a high-risk outcome."
                        },
                        "windows_supported": {
                          "type": "boolean",
                          "description": "Whether the script can be executed on Windows OS."
                        },
                        "linux_supported": {
                          "type": "boolean",
                          "description": "Whether the script can be executed on Linux OS."
                        },
                        "macos_supported": {
                          "type": "boolean",
                          "description": "Whether the script can be executed on macOS."
                        },
                        "script_uid": {
                          "type": "string",
                          "description": "GUID, global ID of the script, used toidentify the script when executing."
                        },
                        "entry_point": {
                          "type": "string",
                          "description": "name of the entry point selected for the script defined as `run`."
                        },
                        "script_input": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "friendly_name": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "script_output_type": {
                          "type": "string",
                          "enum": [
                            "auto_detect",
                            "dictionary",
                            "number_list",
                            "number",
                            "string",
                            "string_list",
                            "boolean_list",
                            "ip",
                            "ip_list",
                            "boolean"
                          ],
                          "description": "Type of output."
                        },
                        "script_output_dictionary_definitions": {
                          "type": "array",
                          "description": "When the `script_output_type` is a dictionary an array with `friendly_name`, `name`, and `type` for each output is returned.\nThe field is empty in all other cases.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "friendly_name": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "script_id": "<script ID>",
                        "name": "list_directories",
                        "description": "List all directories under path",
                        "modification_date": 1585074627259,
                        "created_by": "Palo Alto Networks",
                        "is_high_risk": false,
                        "windows_supported": true,
                        "linux_supported": true,
                        "macos_supported": true,
                        "script_uid": "<unique ID>",
                        "entry_point": "run",
                        "script_input": [
                          {
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "friendly_name": "Number of levels",
                            "name": "num_levels",
                            "type": "integer"
                          }
                        ],
                        "script_output_type": "dictionary",
                        "script_output_dictionary_definitions": [
                          {
                            "friendly_name": "Number Of Processes",
                            "name": "output_2",
                            "type": "integer"
                          },
                          {
                            "friendly_name": "Name",
                            "name": "output_1",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "When entry_point is returned as run": {
                    "value": {
                      "reply": {
                        "script_id": "<script ID>",
                        "name": "list_directories",
                        "description": "List all directories under path",
                        "modification_date": 1585074627259,
                        "created_by": "Palo Alto Networks",
                        "is_high_risk": false,
                        "windows_supported": true,
                        "linux_supported": true,
                        "macos_supported": true,
                        "script_uid": "<unique ID>",
                        "entry_point": "run",
                        "script_input": [
                          {
                            "name": "path",
                            "type": "string"
                          },
                          {
                            "friendly_name": "Number of levels",
                            "name": "num_levels",
                            "type": "integer"
                          }
                        ],
                        "script_output_type": "dictionary",
                        "script_output_dictionary_definitions": [
                          {
                            "friendly_name": "Number Of Processes",
                            "name": "output_2",
                            "type": "integer"
                          },
                          {
                            "friendly_name": "Name",
                            "name": "output_1",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  },
                  "When entry_point field is empty": {
                    "value": {
                      "reply": {
                        "script_id": "<script ID>",
                        "name": "list_directories",
                        "description": "List all directories under path",
                        "modification_date": 1585074627259,
                        "created_by": "Palo Alto Networks",
                        "is_high_risk": false,
                        "windows_supported": true,
                        "linux_supported": true,
                        "macos_supported": true,
                        "script_uid": "<unique ID>"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_script_execution_status": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Script Execution Status",
        "description": "Retrieve the status of a script execution action.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScriptExecutionStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "action_id": {
                        "type": "string",
                        "description": "Identifier of the action, can be found in Cortex XDR console **Response** > **Action Center** > **Action ID** field."
                      }
                    },
                    "required": [
                      "action_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "action_id": "<action ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "action_id": "<action ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "general_status": {
                          "type": "string",
                          "description": "General status of the action, considering the status of all the endpoints."
                        },
                        "endpoints_pending": {
                          "type": "integer",
                          "description": "Number of endpoints in pending status."
                        },
                        "endpoints_canceled": {
                          "type": "integer",
                          "description": "Number of endpoints in 'canceled' status."
                        },
                        "endpoints_in_progress": {
                          "type": "integer",
                          "description": "Number of endpoints in 'in progress' status."
                        },
                        "endpoints_timeout": {
                          "type": "integer",
                          "description": "Number of endpoints in 'timeout' status."
                        },
                        "endpoints_failed": {
                          "type": "integer",
                          "description": "Number of endpoints in 'failed' status."
                        },
                        "endpoints_completed_successfully": {
                          "type": "integer",
                          "description": "Number of endpoints in 'completed successfully' status."
                        },
                        "endpoints_pending_abort": {
                          "type": "integer",
                          "description": "Number of endpoints in 'pending abort' status."
                        },
                        "endpoints_aborted": {
                          "type": "integer",
                          "description": "Number of endpoints in 'aborted' status."
                        },
                        "endpoints_expired": {
                          "type": "integer",
                          "description": "Number of endpoints in 'expired' status."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "Error message regarding permissions for running APIs or stating that the action doesn’t exist."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "general_status": "PENDING",
                        "endpoints_pending": 1,
                        "endpoints_canceled": 0,
                        "endpoints_in_progress": 0,
                        "endpoints_timeout": 0,
                        "endpoints_failed": 0,
                        "endpoints_completed_successfully": 0,
                        "endpoints_pending_abort": 0,
                        "endpoints_aborted": 0,
                        "endpoints_expired": 0
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "general_status": "PENDING",
                        "endpoints_pending": 1,
                        "endpoints_canceled": 0,
                        "endpoints_in_progress": 0,
                        "endpoints_timeout": 0,
                        "endpoints_failed": 0,
                        "endpoints_completed_successfully": 0,
                        "endpoints_pending_abort": 0,
                        "endpoints_aborted": 0,
                        "endpoints_expired": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_scripts": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Scripts",
        "description": "Get a list of scripts available in the scripts library.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScripts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "You can send a request to retrieve either **all** or **filtered** results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "name",
                                "description",
                                "created_by",
                                "script_uid",
                                "modification_date",
                                "windows_supported",
                                "linux_supported",
                                "macos_supported",
                                "is_high_risk"
                              ],
                              "description": "Identifies a list the filters match. Filters are based on the following keywords:\n- `name`: String of the script name.\n- `description`: String of the script description.\n- `created_by`: String of the user name of who created the script.\n- `script_uid`: GUID, global ID of the script, used to identify the script when executing.\n- `modification_date`: Timestamp of when the script was last modified.\n- `windows_supported`: Whether the script can be executed on Windows operating system.\n- `linux_supported`: Whether the script can be executed on Linux operating system.\n- `macos_supported`: Whether the script can be executed on Mac operating system.\n- `is_high_risk`: Whether the script has a high-risk outcome."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `name`, `description`, `created_by`, `script_uid`, `windows_supported`, `linux_supported`, `macos_supported`, `is_high_risk`: List of strings.\n`gte` / `lte`\n- `modification_date`: Integer in timestamp epoch milliseconds."
                            },
                            "value": {
                              "description": "Value that this filter must match.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      }
                    },
                    "required": [
                      "filters"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "is_high_risk",
                          "operator": "in",
                          "value": [
                            "false"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "is_high_risk",
                          "operator": "in",
                          "value": [
                            "false"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of scripts returned as result."
                        },
                        "scripts": {
                          "type": "array",
                          "description": "An array of scripts.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "script_id": {
                                "type": "string",
                                "description": "Script ID."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of script."
                              },
                              "description": {
                                "type": "string",
                                "description": "Descrption of script."
                              },
                              "modification_date": {
                                "type": "integer",
                                "description": "Timestamp of when the script was last modified."
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Name of the user who created the script."
                              },
                              "is_high_risk": {
                                "type": "boolean",
                                "description": "Whether the script has a high-risk outcome."
                              },
                              "windows_supported": {
                                "type": "boolean",
                                "description": "Whether the script can be executed on Windows OS."
                              },
                              "linux_supported": {
                                "type": "boolean",
                                "description": "Whether the script can be executed on Linux OS."
                              },
                              "macos_supported": {
                                "type": "boolean",
                                "description": "Whether the script can be executed on macOS."
                              },
                              "script_uid": {
                                "type": "string",
                                "description": "GUID, global ID of the script, used to identify the script when executing."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "total_count": 129,
                        "result_count": 24,
                        "scripts": [
                          {
                            "script_id": "<script ID>",
                            "name": "list_directories",
                            "description": "List all directories under path",
                            "modification_date": 1585074627259,
                            "created_by": "Palo Alto Networks",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": true,
                            "macos_supported": true,
                            "script_uid": "<unique ID>"
                          },
                          {
                            "script_id": "<script ID>",
                            "name": "test 1",
                            "description": "test",
                            "modification_date": 1583052236449,
                            "created_by": "User 1",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": false,
                            "macos_supported": false,
                            "script_uid": "<unique ID>"
                          },
                          {
                            "script_id": "<script ID>",
                            "name": "test 2",
                            "description": "test 2",
                            "modification_date": 1582709343498,
                            "created_by": "User 2",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": true,
                            "macos_supported": true,
                            "script_uid": "<unique ID>"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "total_count": 129,
                        "result_count": 24,
                        "scripts": [
                          {
                            "script_id": "<script ID>",
                            "name": "list_directories",
                            "description": "List all directories under path",
                            "modification_date": 1585074627259,
                            "created_by": "Palo Alto Networks",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": true,
                            "macos_supported": true,
                            "script_uid": "<unique ID>"
                          },
                          {
                            "script_id": "<script ID>",
                            "name": "test 1",
                            "description": "test",
                            "modification_date": 1583052236449,
                            "created_by": "User 1",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": false,
                            "macos_supported": false,
                            "script_uid": "<unique ID>"
                          },
                          {
                            "script_id": "<script ID>",
                            "name": "test 2",
                            "description": "test 2",
                            "modification_date": 1582709343498,
                            "created_by": "User 2",
                            "is_high_risk": false,
                            "windows_supported": true,
                            "linux_supported": true,
                            "macos_supported": true,
                            "script_uid": "<unique ID>"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_script_execution_results": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Script Execution Results",
        "description": "Retrieve the results of a script execution action.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScriptExecutionResults",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "action_id": {
                        "type": "string",
                        "description": "Action ID. This can be found in the Cortex XDR console **Response** > **Action Center** > **Action ID** field."
                      }
                    },
                    "required": [
                      "action_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "action_id": "<action ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "action_id": "<action_id>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "script_name": {
                          "type": "string",
                          "description": "Name of the script executed."
                        },
                        "script_description": {
                          "type": "string",
                          "description": "Description of the script executed."
                        },
                        "script_parameters": {
                          "type": "array",
                          "description": "For each input parameter used in this execution, an array of `name` and `value`.",
                          "items": {
                            "type": "object"
                          }
                        },
                        "date_created": {
                          "type": "string",
                          "description": "Timestamp in which the action was initiated."
                        },
                        "scope": {
                          "type": "string",
                          "description": "Number of endpoints included in this action according to the filter used to select them."
                        },
                        "error_message": {
                          "type": "string",
                          "description": "Error message regarding permissions for running APIs."
                        },
                        "results": {
                          "type": "array",
                          "description": "For each endpoint Cortex XDR displays any returned value by the script. The number of the results and their name are dynamic per script.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "endpoint_name": {
                                "type": "string",
                                "description": "Endpoint name."
                              },
                              "endpoint_ip_address": {
                                "type": "array",
                                "description": "Endpoint IP address.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "endpoint_status": {
                                "type": "string",
                                "description": "Endpoint status."
                              },
                              "domain": {
                                "type": "string",
                                "description": "Domain to which the endpoint belongs."
                              },
                              "endpoint_id": {
                                "type": "string",
                                "description": "Endpoint ID."
                              },
                              "execution_status": {
                                "type": "string",
                                "description": "Execution status of this endpoint."
                              },
                              "standard_output": {
                                "description": "The STDOUT + STDERR logged by the script during this execution."
                              },
                              "retrieved_files": {
                                "type": "integer",
                                "description": "Number of successfully retrieved files."
                              },
                              "failed_files": {
                                "type": "integer",
                                "description": "Number of files failed to retrieve."
                              },
                              "retention_date": {
                                "description": "Timestamp of when the retrieved files will be deleted from the server."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "script_name": "snippet script",
                        "script_description": null,
                        "script_parameters": [],
                        "date_created": "2020-03-29 13:21:59",
                        "scope": "win_10and 21 other endpoints",
                        "error_message": "",
                        "results": [
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "LOST",
                            "domain": "aaaa",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          },
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "LOST",
                            "domain": "<domain name>",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          },
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "DISCONNECTED",
                            "domain": "WORKGROUP",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "script_name": "snippet script",
                        "script_description": "",
                        "script_parameters": [],
                        "date_created": "2020-03-29 13:21:59",
                        "scope": "win_10and 21 other endpoints",
                        "error_message": "",
                        "results": [
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "LOST",
                            "domain": "aaaa",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          },
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "LOST",
                            "domain": "<domain name>",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          },
                          {
                            "endpoint_name": "<name>",
                            "endpoint_ip_address": [
                              "<IP address>"
                            ],
                            "endpoint_status": "DISCONNECTED",
                            "domain": "WORKGROUP",
                            "endpoint_id": "<endpoint ID>",
                            "execution_status": "PENDING",
                            "standard_output": null,
                            "retrieved_files": 0,
                            "failed_files": 0,
                            "retention_date": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_script_execution_results_files": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Script Execution Result Files",
        "description": "Get the files retrieved from a specific endpoint during a script execution.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScriptExecutionResultsFiles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "action_id": {
                        "type": "string",
                        "description": "Identifier of the action, can be found in Cortex XDR console **Response** > **Action Center** > **Action ID** field."
                      },
                      "endpoint_id": {
                        "type": "string",
                        "description": "Endpoint ID."
                      }
                    },
                    "required": [
                      "action_id",
                      "endpoint_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "action_id": "<action ID>",
                      "endpoint_id": "<endpoint ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "data": {
                          "type": "string",
                          "description": "A signed public link to a zip file containing the retrieved files. Link expires after 10 minutes."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": {
                        "DATA": "https://example-link"
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "DATA": "https://example-link"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/scripts/get_script_code": {
      "post": {
        "tags": [
          "Script Execution"
        ],
        "summary": "Get Script Code",
        "description": "Get the code of a specific script in the script library.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postGetScriptCode",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "script_uid": {
                        "type": "string",
                        "description": "Unique identifier of the script, returned by the **Get Scripts** API per script."
                      }
                    },
                    "required": [
                      "script_uid"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "example-1": {
                    "request_data": {
                      "script_uid": "<unique ID>"
                    }
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": {
                      "script_uid": "<unique ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "string",
                      "description": "JSON object containing the query result."
                    }
                  },
                  "x-examples": {
                    "example-1": {
                      "reply": "import os\nimport sys\nimport traceback\n\n\ndef run(path, num_levels):\n\tpath = os.path.expanduser(path)\n\tpath = os.path.expandvars(path)\n\treturn scan_directory_recursive(path, num_levels)\n\n\ndef scan_directory_recursive(directory, level):\n\tif level == 0:\n\t\treturn []\n\n\tsubfolders = []\n\ttry:\n\t\twith os.scandir(directory) as entries:\n\t\t\tfor f in entries:\n\t\t\t\ttry:\n\t\t\t\t\tif f.is_dir():\n\t\t\t\t\t\tsubfolders.append(f.path)\n\t\t\t\texcept (OSError,PermissionError):\n\t\t\t\t\tsys.stderr.write(f\"Failed access <{f.path}>\\n\")\n\n\t\tfor folder in list(subfolders):\n\t\t    subfolders.extend(scan_directory_recursive(folder, level-1))\n\texcept Exception:\n\t\tsys.stderr.write(f\"Failed scanning directory: <{directory}>, error: {traceback.format_exc()}\")\n\n\treturn subfolders\n"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": "import os\nimport sys\nimport traceback\n\n\ndef run(path, num_levels):\n\tpath = os.path.expanduser(path)\n\tpath = os.path.expandvars(path)\n\treturn scan_directory_recursive(path, num_levels)\n\n\ndef scan_directory_recursive(directory, level):\n\tif level == 0:\n\t\treturn []\n\n\tsubfolders = []\n\ttry:\n\t\twith os.scandir(directory) as entries:\n\t\t\tfor f in entries:\n\t\t\t\ttry:\n\t\t\t\t\tif f.is_dir():\n\t\t\t\t\t\tsubfolders.append(f.path)\n\t\t\t\texcept (OSError,PermissionError):\n\t\t\t\t\tsys.stderr.write(f\"Failed access <{f.path}>\\n\")\n\n\t\tfor folder in list(subfolders):\n\t\t    subfolders.extend(scan_directory_recursive(folder, level-1))\n\texcept Exception:\n\t\tsys.stderr.write(f\"Failed scanning directory: <{directory}>, error: {traceback.format_exc()}\")\n\n\treturn subfolders\n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/indicators/insert_csv": {
      "post": {
        "tags": [
          "Rules"
        ],
        "summary": "Insert Simple Indicators, CSV",
        "description": "Upload IOCs in CSV format that you retrieved from external threat intelligence sources. \n\nNote: Cortex XDR does not scan historic data, but rather only new incoming data.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postInsertCsv",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "string",
                    "description": "The body of this request contains a JSON object with a single field: `request_data`. This field is required. Its value is as string containing two or more comma-separated lines. The first line must contain the CSV header. All subsequent lines must represent IOC data. Each line must include at a minimum the required CSV fields, which are identified below. To help you validate the upload, you can send a separate validate field to view an array of errors with an unsuccessful call.\r\n\r\n| Field | Description |\r\n| ----------- | ----------- |\r\n| indicator | (Required) String that identifies the indicator you want to insert into Cortex XDR. |\r\n| type | (Required) Keyword identifying the type of indicator. Valid values are: `HASH`, `IP`, `PATH`, `DOMAIN_NAME`, or `FILENAME` |\r\n| severity | (Required) Keyword identifying the indicator's severity. Valid values are: `INFO`, `LOW`, `MEDIUM`, `HIGH`, or `CRITICAL` |\r\n| expiration_date | Integer representing the indicator's expiration timestamp. This is a Unix epoch timestamp value, in milliseconds. If this indicator has no expiration, use `Never`. If this value is NULL, the indicator receives the indicator's type value with the default expiration date. Valid values are: 7 days, 30 days, 90 days, or 180 days |\r\n| comment | Comment string. |\r\n| reputation | Keyword representing the indicator's reputation. Valid values are: `GOOD`, `BAD`, `SUSPICIOUS`, or `UNKNOWN` |\r\n| reliability | Character representing the indicator's reliability rating. Valid values are A-F. A is the most reliable, F is the least. |\r\n| class | String representing the indicator class (for example, \"Malware\") |\r\n| vendor.name | String representing the name of the vendor who reported this indicator. |\r\n| vendor.reputation | Keyword representing the vendor's reputation. Valid values are: `GOOD`, `BAD`, `SUSPICIOUS`, or `UNKNOWN` |\r\n| vendor.reliability | Character representing the vendor's reliability rating. Valid values are A-F. A is the most reliable, F is the least. |"
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Indicates whether to return an array of errors in the case of an unsuccessful update indicator API request."
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": "indicator,type,severity,expiration_date, comment,reputation,reliability,class,vendor.name,vendor.reputation, vendor.reliability\n B2c74bf609159f27dd89a829501ec34d6596d8b39a2cce7add73a8207088817a, HASH,HIGH,1587054895000,This is an example IOC,BAD,D,Malware,IBM, GOOD,B\n A2c74bf609159f27dd89a829501ec34d6596d8b39a2cce7add73a8207088817a, HASH,LOW,1587054895000,This is an example IOC,GOOD,D,Malware,PANW, BAD,A\n"
                  }
                }
              },
              "examples": {
                "Request filtered results": {
                  "value": {
                    "request_data": "indicator,type,severity,expiration_date, comment,reputation,reliability,class,vendor.name,vendor.reputation, vendor.reliability\n B2c74bf609159f27dd89a829501ec34d6596d8b39a2cce7add73a8207088817a, HASH,HIGH,1587054895000,This is an example IOC,BAD,D,Malware,IBM, GOOD,B\n A2c74bf609159f27dd89a829501ec34d6596d8b39a2cce7add73a8207088817a, HASH,LOW,1587054895000,This is an example IOC,GOOD,D,Malware,PANW, BAD,A\n"
                  }
                },
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SUCCESS",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "true=upload successful"
                        },
                        "validation_errors": {
                          "type": "array",
                          "description": "Array of the following fields:\n- indicator: Name of the indicator that failed to upload.\n- error: Description of the error that caused the indicator to upload.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "indicator": {
                                "type": "string"
                              },
                              "error": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "success": false,
                        "validation_errors": [
                          {
                            "indicator": "testtest.com",
                            "error": "Got type: HASH, Indicator: testtest.com mismatch"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "success": false,
                        "validation_errors": [
                          {
                            "indicator": "testtest.com",
                            "error": "Got type: HASH, Indicator: testtest.com mismatch"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/indicators/insert_jsons": {
      "post": {
        "tags": [
          "Rules"
        ],
        "summary": "Insert Simple Indicators, JSON",
        "description": "Upload IOCs as JSON objects that you retrieved from external threat intelligence sources.\n\nNote: Cortex XSIAM does not scan historic data, rather only new incoming data.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "postInsertJsons",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The body of this request contains a JSON object with a single field: `request_data`. This field is required. Its value is an array of JSON objects, each element of which represents IOC data. Each object must include at a minimum the required fields, which are identified below.\n\nNote: Cortex XSIAM recommends you send the validate field in your request call to view the API validation errors. Without sending the validate field, the API may return a reply of 'true' without any information of why the IOC failed to upload.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "indicator": {
                          "type": "string",
                          "description": "String that identifies the indicator you want to insert into Cortex XDR."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "HASH",
                            "IP",
                            "DOMAIN_NAME",
                            "FILENAME"
                          ],
                          "description": "The type of indicator."
                        },
                        "severity": {
                          "type": "string",
                          "enum": [
                            "LOW",
                            "MEDIUM",
                            "HIGH",
                            "CRITICAL",
                            "INFO"
                          ],
                          "description": "The indicator's severity."
                        },
                        "expiration_date": {
                          "type": "integer",
                          "description": "Integer representing the indicator's expiration timestamp. This is a Unix epoch timestamp value, in milliseconds. If this indicator has no expiration, use `Never`. If this value is `NULL`, the indicator\nreceives the indicator's type value with the default expirationdate. Valid values are:\n- 7 days\n- 30 days\n- 90 days\n- 180 days"
                        },
                        "comment": {
                          "type": "string",
                          "description": "A descriptive comment."
                        },
                        "reputation": {
                          "type": "string",
                          "enum": [
                            "GOOD",
                            "BAD",
                            "SUSPICIOUS",
                            "UNKNOWN",
                            "NO_REPUTATION"
                          ],
                          "description": "Keyword representing the indicator's reputation."
                        },
                        "reliability": {
                          "type": "string",
                          "enum": [
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G"
                          ],
                          "description": "Character representing the indicator's reliability rating. Valid values are A - F. A is the most reliable, F is the least."
                        },
                        "vendors": {
                          "type": "array",
                          "description": "A list of vendors including vendor name, reliability, and reputation.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "vendor_name": {
                                "type": "string",
                                "description": "Vendor name."
                              },
                              "reliability": {
                                "type": "string",
                                "description": "Vendor reliability."
                              },
                              "reputation": {
                                "type": "string",
                                "description": "Vendor reputation."
                              }
                            }
                          }
                        },
                        "class": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "indicator",
                        "type",
                        "severity"
                      ]
                    }
                  },
                  "validate": {
                    "type": "boolean",
                    "description": "Whether to return an array of errors in the case of an unsuccessful update indicator API request."
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": [
                      {
                        "indicator": "<hash_value>",
                        "type": "HASH",
                        "comment": "test",
                        "reputation": "GOOD",
                        "reliability": "D",
                        "vendors": [
                          {
                            "vendor_name": "V1",
                            "reliability": "A",
                            "reputation": "GOOD"
                          },
                          {
                            "vendor_name": "V2",
                            "reliability": "A",
                            "reputation": "SUSPICIOUS"
                          }
                        ],
                        "class": "Malware"
                      }
                    ],
                    "validate": true
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "request_data": [
                      {
                        "indicator": "<hash_value>",
                        "type": "HASH",
                        "severity": "MEDIUM",
                        "comment": "test",
                        "reputation": "GOOD",
                        "reliability": "D",
                        "vendors": [
                          {
                            "vendor_name": "V1",
                            "reliability": "A",
                            "reputation": "GOOD"
                          },
                          {
                            "vendor_name": "V2",
                            "reliability": "A",
                            "reputation": "SUSPICIOUS"
                          }
                        ],
                        "class": "Malware"
                      }
                    ],
                    "validate": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing a query result.",
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Indicates if any of the IOCs were upload successfully."
                        },
                        "validation_errors": {
                          "type": "array",
                          "description": "Array of the IOCs that did not upload.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "indicator": {
                                "type": "string",
                                "description": "Name of the indicator that failed to upload."
                              },
                              "error": {
                                "type": "string",
                                "description": "Description of the error that caused the indicator to fail upload."
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "success": true,
                        "validation_errors": [
                          {
                            "indicator": "testtest.com",
                            "error": "Got type: HASH, Indicator: testtest.com mismatch"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "success": true,
                        "validation_errors": [
                          {
                            "indicator": "testtest.com",
                            "error": "Got type: HASH, Indicator: testtest.com mismatch"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/audits/management_logs": {
      "post": {
        "tags": [
          "Audit Log"
        ],
        "summary": "Get Audit Management Log",
        "description": "Get audit management logs.\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 100.\n- Offset is the zero-based number of incidents from the start of the result set.",
        "operationId": "postManagementLogs",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "To retrieve all of the results, you need to iterate over the `total_count` in increments of 100 using `search_from` and `search_to` fields in the request.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "email",
                                "type",
                                "sub_type",
                                "result",
                                "timestamp"
                              ],
                              "description": "Filter is based on the following keywords:\n- `email`: User's email address.\n- `type`: Type of audit log.\n- `sub_type`: Subtype of audit log.\n- `result`: Result type.\n- `timestamp`: Log timestamp."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `email`, `type`, `sub_type`, `result`: List of strings\n`gte` / `lte`\n- `timestamp`: Integer in timestamp epoch milliseconds\n"
                            },
                            "value": {
                              "description": "Value that this filter must match.\n- `timestamp`: Integer representing the number of milliseconds after the Unix epoch, UTC timezone.\n- All other fields require a string value. In the case of `in` operator, the value is an array.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the starting offset within the query result set from which you want management logs returned.\nManagement logs are returned as a zero-based list. Any log indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end offset within the result set after which you do not want management logs returned.\nLogs in the management log list that are indexed higher than this value are not returned in the final results set. Defaults to 100, which returns all logs to the end of the list.",
                        "default": 100
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set. By default the sort is defined as creation-time and desc.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "type",
                              "sub-type",
                              "result"
                            ],
                            "description": "The field you want to sort by."
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Whether to sort in ascending or descending order.",
                            "default": "desc"
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "search_from": 0,
                      "search_to": 19,
                      "sort": {
                        "field": "email",
                        "keyword": "ASC"
                      },
                      "filters": [
                        {
                          "field": "type",
                          "operator": "in",
                          "value": [
                            "AUTH"
                          ]
                        },
                        {
                          "field": "sub_type",
                          "operator": "in",
                          "value": [
                            "login"
                          ]
                        },
                        {
                          "field": "result",
                          "operator": "in",
                          "value": [
                            "SUCCESS"
                          ]
                        },
                        {
                          "field": "timestamp",
                          "operator": "lte",
                          "value": 1565074114053
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Request all management logs from older to newer": {
                  "value": {
                    "request_data": {
                      "search_from": 0,
                      "search_to": 100,
                      "sort": {
                        "field": "timestamp",
                        "keyword": "asc"
                      }
                    }
                  }
                },
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request all successful login events after 06-Aug-19, sorted by timestamp oldest to newest": {
                  "value": {
                    "request_data": {
                      "search_from": 0,
                      "search_to": 100,
                      "sort": {
                        "field": "timestamp",
                        "keyword": "asc"
                      },
                      "filters": [
                        {
                          "field": "type",
                          "operator": "in",
                          "value": [
                            "AUTH"
                          ]
                        },
                        {
                          "field": "sub_type",
                          "operator": "in",
                          "value": [
                            "login"
                          ]
                        },
                        {
                          "field": "result",
                          "operator": "in",
                          "value": [
                            "SUCCESS"
                          ]
                        },
                        {
                          "field": "timestamp",
                          "operator": "gte",
                          "value": 1565074114053
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of returned items."
                        },
                        "data": {
                          "type": "array",
                          "description": "List of audit items.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "AUDIT_ID": {
                                "type": "integer"
                              },
                              "AUDIT_OWNER_NAME": {
                                "type": "string"
                              },
                              "AUDIT_OWNER_EMAIL": {
                                "type": "string"
                              },
                              "AUDIT_ASSET_JSON": {
                                "type": "string"
                              },
                              "AUDIT_ASSET_NAMES": {
                                "type": "string"
                              },
                              "AUDIT_HOSTNAME": {
                                "type": "string"
                              },
                              "AUDIT_RESULT": {
                                "type": "string"
                              },
                              "AUDIT_REASON": {
                                "type": "string"
                              },
                              "AUDIT_DESCRIPTION": {
                                "type": "string"
                              },
                              "AUDIT_ENTITY": {
                                "type": "string",
                                "enum": [
                                  "LIVE_TERMINAL",
                                  "RULES",
                                  "RULES_EXCEPTIONS",
                                  "AUTH",
                                  "RESPONSE",
                                  "INCIDENT_MANAGEMENT",
                                  "ALERT_MANAGEMENT",
                                  "INCIDENT_TIMELINE_EVENT",
                                  "ENDPOINT_MANAGEMENT",
                                  "ENDPOINT_GROUPS",
                                  "ALERT_WHITELIST",
                                  "PUBLIC_API",
                                  "DISTRIBUTIONS",
                                  "STARRED_INCIDENTS",
                                  "POLICY_PROFILES",
                                  "DEVICE_CONTROL_PROFILES",
                                  "DEVICE_CONTROL_POLICY",
                                  "PROTECTION_PROFILES",
                                  "DEVICE_CONTROL_PROFILE",
                                  "HOST_FIREWALL_PROFILE",
                                  "HOST_DISK_ENCRYPTION_PROFILE",
                                  "POLICY_RULES",
                                  "PROTECTION_POLICY",
                                  "DEVICE_CONTROL_TEMP_EXCEPTIONS",
                                  "DEVICE_CONTROL_GLOBAL_EXCEPTIONS",
                                  "DEVICE_CONTROL_CUSTOM_DEVICE",
                                  "GLOBAL_EXCEPTIONS",
                                  "MSSP",
                                  "REPORTING",
                                  "DASHBOARD",
                                  "BROKER_API",
                                  "BROKER_VM",
                                  "MTH",
                                  "MDR",
                                  "ALERT_NOTIFICATIONS",
                                  "INTEGRATIONS",
                                  "QUERY",
                                  "SCRIPT_EXECUTION",
                                  "ALERT_RULES",
                                  "COLLECTION",
                                  "API_KEY",
                                  "EDL",
                                  "VA_RESCAN_ENDPOINT",
                                  "HI_RESCAN_ENDPOINT",
                                  "REMEDIATION",
                                  "INGEST_DATA",
                                  "LICENSING",
                                  "AGENT_CONFIGURATION",
                                  "PERMISSIONS",
                                  "SCORING_RULES",
                                  "LAYOUT_RULES",
                                  "PLAYBOOK_TRIGGERS",
                                  "FEATURED_ALERT_FIELDS",
                                  "SYSTEM",
                                  "TENANT_TAKEOVER",
                                  "SCOUTER_POLICY",
                                  "SCOUTER_PROFILE",
                                  "SCOUTER_GROUPS",
                                  "ALLOWED_DOMAINS",
                                  "QUERY_LIBRARY",
                                  "TENANT_CONFIGURATION",
                                  "SCOUTER_CONFIGURATION",
                                  "HOST_FIREWALL",
                                  "XIF",
                                  "XDM",
                                  "ACTION_CENTER",
                                  "XCLOUD_INTEGRATION",
                                  "DATASETS",
                                  "XSOAR",
                                  "SECURITY_SETTINGS",
                                  "ALERT_EXCLUSION",
                                  "INDICATOR_RULES",
                                  "EVENT_FORWARDING",
                                  "ASSET_INVENTORY",
                                  "SERVER_SETTINGS",
                                  "ASSET_ROLES",
                                  "CUSTOM_FIELDS",
                                  "AUTOMATION_RULES",
                                  "AGENT_EXCEPTION_RULES",
                                  "REMEDIATION_PATH_RULES"
                                ]
                              },
                              "AUDIT_ENTITY_SUBTYPE": {
                                "type": "string"
                              },
                              "AUDIT_SESSION_ID": {
                                "type": "integer"
                              },
                              "AUDIT_CASE_ID": {
                                "type": "integer"
                              },
                              "AUDIT_INSERT_TIME": {
                                "type": "integer"
                              },
                              "AUDIT_SEVERITY": {
                                "type": "string"
                              },
                              "AUDIT_LINK": {
                                "type": "string"
                              },
                              "AUDIT_SOURCE_IP": {
                                "type": "string"
                              },
                              "AUDIT_USER_AGENT": {
                                "type": "string"
                              },
                              "AUDIT_USER_ROLES": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "AUDIT_ADDITIONAL_INFORMATION": {
                                "type": "object",
                                "properties": {
                                  "endpoint_names": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "endpoint_count": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "data": [
                          {
                            "AUDIT_ID": 1,
                            "AUDIT_OWNER_NAME": "User Name",
                            "AUDIT_OWNER_EMAIL": "username@paloaltonetworks.com",
                            "AUDIT_ASSET_JSON": "{}",
                            "AUDIT_ASSET_NAMES": "",
                            "AUDIT_HOSTNAME": null,
                            "AUDIT_RESULT": "SUCCESS",
                            "AUDIT_REASON": null,
                            "AUDIT_DESCRIPTION": null,
                            "AUDIT_ENTITY": null,
                            "AUDIT_ENTITY_SUBTYPE": "Login",
                            "AUDIT_SESSION_ID": null,
                            "AUDIT_CASE_ID": null,
                            "AUDIT_INSERT_TIME": 1565074114053
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "data": [
                          {
                            "AUDIT_ID": 1,
                            "AUDIT_OWNER_NAME": "User Name",
                            "AUDIT_OWNER_EMAIL": "username@paloaltonetworks.com",
                            "AUDIT_ASSET_JSON": "{}",
                            "AUDIT_ASSET_NAMES": "",
                            "AUDIT_HOSTNAME": "",
                            "AUDIT_RESULT": "SUCCESS",
                            "AUDIT_REASON": "",
                            "AUDIT_DESCRIPTION": "",
                            "AUDIT_ENTITY": "AUTH",
                            "AUDIT_ENTITY_SUBTYPE": "Login",
                            "AUDIT_SESSION_ID": 382303947890,
                            "AUDIT_CASE_ID": 473829372,
                            "AUDIT_INSERT_TIME": 1565074114053,
                            "AUDIT_SEVERITY": "SEV_020_LOW",
                            "AUDIT_LINK": null,
                            "AUDIT_SOURCE_IP": "31.174.156.148",
                            "AUDIT_USER_AGENT": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36",
                            "AUDIT_USER_ROLES": [
                              "Account Admin"
                            ],
                            "AUDIT_ADDITIONAL_INFORMATION": {
                              "endpoint_names": [
                                "WIN-fgo6762G"
                              ],
                              "endpoint_count": 1
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/healthcheck": {
      "get": {
        "tags": [
          "System Management"
        ],
        "summary": "System Health Check",
        "description": "Perform a health check of your Cortex XSIAM environment.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "getHealthcheck",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "The condition of your Cortex environment."
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "status": "available"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/system/get_tenant_info": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Tenant Info",
        "description": "Get your tenant license information.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-system-get_tenant_info",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "List of available licenses, number of devices, and purchased add-ons on your tenant.",
                      "properties": {
                        "xsiam_premium_expiration": {
                          "type": "integer"
                        },
                        "purchased_xsiam_premium": {
                          "type": "object",
                          "properties": {
                            "users": {
                              "type": "integer"
                            },
                            "gb": {
                              "type": "integer"
                            },
                            "agents": {
                              "type": "integer"
                            }
                          }
                        },
                        "pro_per_endpoint_expiration": {
                          "type": "integer"
                        },
                        "purchased_pro_per_endpoint": {
                          "type": "object",
                          "properties": {
                            "agents": {
                              "type": "integer"
                            }
                          }
                        },
                        "data_enabled_pro_per_endpoint": {
                          "type": "integer"
                        },
                        "prevent_expiration": {
                          "type": "integer"
                        },
                        "purchased_prevent": {
                          "type": "integer"
                        },
                        "installed_prevent": {
                          "type": "integer"
                        },
                        "pro_gb_expiration": {
                          "type": "integer"
                        },
                        "purchased_pro_gb": {
                          "type": "object",
                          "properties": {
                            "gb": {
                              "type": "integer"
                            }
                          }
                        },
                        "installed_pro_gb": {
                          "type": "integer"
                        },
                        "compute_unit_expiration": {
                          "type": "integer"
                        },
                        "purchased_compute_unit": {
                          "type": "integer"
                        },
                        "host_insights_expiration": {
                          "type": "integer"
                        },
                        "enabled_host_insights": {
                          "type": "integer"
                        },
                        "purchased_host_insights": {
                          "type": "integer"
                        },
                        "forensics_expiration": {
                          "type": "integer"
                        },
                        "enabled_forensics": {
                          "type": "integer"
                        },
                        "pro_cloud_expiration": {
                          "type": "integer"
                        },
                        "purchased_pro_cloud": {
                          "type": "object",
                          "properties": {
                            "agents": {
                              "type": "integer"
                            }
                          }
                        },
                        "installed_pro_cloud": {
                          "type": "integer"
                        },
                        "data_enabled_pro_cloud": {
                          "type": "integer"
                        },
                        "identity_threat_expiration": {
                          "type": "integer"
                        },
                        "xth_expiration": {
                          "type": "integer"
                        },
                        "purchased_xth": {
                          "type": "integer"
                        },
                        "threat_intelligence_management_expiration": {
                          "type": "integer"
                        },
                        "purchased_threat_intelligence_management": {
                          "type": "integer"
                        },
                        "attack_surface_management_expiration": {
                          "type": "integer"
                        },
                        "purchased_attack_surface_management": {
                          "type": "integer"
                        },
                        "xsiam_ep_hot_expiration": {
                          "type": "string"
                        },
                        "purchased_xsiam_ep_hot": {
                          "type": "integer"
                        },
                        "xsiam_ep_cold_expiration": {
                          "type": "string"
                        },
                        "purchased_xsiam_ep_cold": {
                          "type": "integer"
                        },
                        "xsiam_gb_hot_expiration": {
                          "type": "string"
                        },
                        "purchased_xsiam_gb_hot": {
                          "type": "integer"
                        },
                        "xsiam_gb_cold_expiration": {
                          "type": "string"
                        },
                        "purchased_xsiam_gb_cold": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "xsiam_premium_expiration": 12478046378,
                        "purchased_xsiam_premium": {
                          "users": 100,
                          "gb": 100,
                          "agents": 500
                        },
                        "pro_per_endpoint_expiration": 12478046378,
                        "purchased_pro_per_endpoint": {
                          "agents": 200
                        },
                        "data_enabled_pro_per_endpoint": 26,
                        "prevent_expiration": 0,
                        "purchased_prevent": 0,
                        "installed_prevent": 27,
                        "pro_tb_expiration": 12478046378,
                        "purchased_pro_tb": {
                          "tb": 1
                        },
                        "installed_pro_tb": 0,
                        "compute_unit_expiration": 0,
                        "purchased_compute_unit": 16,
                        "host_insights_expiration": 12478046378,
                        "enabled_host_insights": 26,
                        "purchased_host_insights": 400,
                        "forensics_expiration": 0,
                        "enabled_forensics": 12
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "xsiam_premium_expiration": 12478046378,
                        "purchased_xsiam_premium": {
                          "users": 100,
                          "gb": 100,
                          "agents": 500
                        },
                        "pro_per_endpoint_expiration": 12478046378,
                        "purchased_pro_per_endpoint": {
                          "agents": 200
                        },
                        "data_enabled_pro_per_endpoint": 26,
                        "prevent_expiration": 0,
                        "purchased_prevent": 0,
                        "installed_prevent": 27,
                        "pro_tb_expiration": 12478046378,
                        "purchased_pro_gb": {
                          "gb": 1
                        },
                        "installed_pro_tb": 0,
                        "compute_unit_expiration": 0,
                        "purchased_compute_unit": 16,
                        "host_insights_expiration": 12478046378,
                        "enabled_host_insights": 26,
                        "purchased_host_insights": 400,
                        "forensics_expiration": 0,
                        "enabled_forensics": 12
                      }
                    }
                  },
                  "Example 2": {
                    "value": {
                      "reply": {
                        "pro_cloud_expiration": 0,
                        "purchased_pro_cloud": 0,
                        "installed_pro_cloud": 4,
                        "data_enabled_pro_cloud": 4,
                        "pro_per_endpoint_expiration": "Nov 7th 2025 07:59:59",
                        "purchased_pro_per_endpoint": {
                          "agents": 200
                        },
                        "data_enabled_pro_per_endpoint": 4,
                        "prevent_expiration": 0,
                        "purchased_prevent": 0,
                        "installed_prevent": 4,
                        "pro_gb_expiration": "Nov 8th 2027 07:59:59",
                        "purchased_pro_gb": {
                          "gb": 33
                        },
                        "identity_threat_expiration": "Aug 13th 2023 11:03:41",
                        "compute_unit_expiration": "Nov 7th 2025 07:59:59",
                        "purchased_compute_unit": 50,
                        "host_insights_expiration": "Nov 8th 2027 07:59:59",
                        "enabled_host_insights": 8,
                        "purchased_host_insights": 250,
                        "forensics_expiration": 0,
                        "enabled_forensics": 4,
                        "xsiam_ep_hot_expiration": "Jan 2nd 2024 23:59:59",
                        "purchased_xsiam_ep_hot": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/incidents/get_incident_extra_data": {
      "post": {
        "tags": [
          "Incidents"
        ],
        "summary": "Get Extra Incident Data",
        "description": "Get extra data fields of a specific incident including alerts and key artifacts.\n\n- Cortex XDR displays in the APIs response whether a PAN NGFW type alert contains a PCAP triggering packet.\nUse the **Retrieve PCAP Packet** API to retrieve a list of alert IDs and their associated PCAP data.\n\nNote: The API includes a limit rate of 10 API requests per minute.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-incidents-get_incident_extra_data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "incident_id": {
                        "type": "string",
                        "description": "The ID of the incident for which you want to retrieve extra data."
                      },
                      "alerts_limit": {
                        "type": "integer",
                        "description": "The maximum number of related alerts in the incident that you want to retrieve.",
                        "default": 1000
                      }
                    },
                    "required": [
                      "incident_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "incident_id": "<incident ID>",
                      "alerts_limit": 5
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "incident_id": "<incident ID>",
                      "alerts_limit": 5
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "incident": {
                          "type": "object",
                          "properties": {
                            "incident_id": {
                              "type": "string"
                            },
                            "incident_name": {
                              "type": "string"
                            },
                            "creation_time": {
                              "type": "integer"
                            },
                            "modification_time": {
                              "type": "integer"
                            },
                            "detection_time": {
                              "type": "integer",
                              "nullable": true
                            },
                            "status": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "assigned_user_mail": {
                              "nullable": true
                            },
                            "assigned_user_pretty_name": {
                              "nullable": true
                            },
                            "alert_count": {
                              "type": "integer"
                            },
                            "low_severity_alert_count": {
                              "type": "integer"
                            },
                            "med_severity_alert_count": {
                              "type": "integer"
                            },
                            "high_severity_alert_count": {
                              "type": "integer"
                            },
                            "critical_severity_alert_count": {
                              "type": "integer"
                            },
                            "user_count": {
                              "type": "integer"
                            },
                            "host_count": {
                              "type": "integer"
                            },
                            "notes": {
                              "nullable": true
                            },
                            "resolve_comment": {
                              "nullable": true
                            },
                            "manual_severity": {
                              "nullable": true
                            },
                            "manual_description": {
                              "nullable": true
                            },
                            "xdr_url": {
                              "type": "string"
                            },
                            "starred": {
                              "type": "boolean"
                            },
                            "hosts": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "users": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            },
                            "incident_sources": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "rule_based_score": {
                              "type": "integer"
                            },
                            "manual_score": {
                              "nullable": true
                            },
                            "wildfire_hits": {
                              "type": "integer"
                            },
                            "alerts_grouping_status": {
                              "type": "string"
                            },
                            "mitre_techniques_ids_and_names": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "mitre_tactics_ids_and_names": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "alert_categories": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "alerts": {
                          "type": "object",
                          "properties": {
                            "total_count": {
                              "type": "integer"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "external_id": {
                                    "type": "string"
                                  },
                                  "severity": {
                                    "type": "string"
                                  },
                                  "matching_status": {
                                    "type": "string"
                                  },
                                  "end_match_attempt_ts": {
                                    "nullable": true
                                  },
                                  "local_insert_ts": {
                                    "type": "integer"
                                  },
                                  "bioc_indicator": {
                                    "nullable": true
                                  },
                                  "matching_service_rule_id": {
                                    "nullable": true
                                  },
                                  "attempt_counter": {
                                    "nullable": true
                                  },
                                  "bioc_category_enum_key": {
                                    "nullable": true
                                  },
                                  "case_id": {
                                    "type": "integer"
                                  },
                                  "is_whitelisted": {
                                    "type": "boolean"
                                  },
                                  "starred": {
                                    "type": "boolean"
                                  },
                                  "deduplicate_tokens": {
                                    "type": "string"
                                  },
                                  "filter_rule_id": {
                                    "nullable": true
                                  },
                                  "mitre_technique_id_and_name": {
                                    "nullable": true
                                  },
                                  "mitre_tactic_id_and_name": {
                                    "nullable": true
                                  },
                                  "agent_version": {
                                    "nullable": true
                                  },
                                  "agent_device_domain": {
                                    "nullable": true
                                  },
                                  "agent_fqdn": {
                                    "nullable": true
                                  },
                                  "agent_os_type": {
                                    "type": "string"
                                  },
                                  "agent_os_sub_type": {
                                    "nullable": true
                                  },
                                  "agent_data_collection_status": {
                                    "nullable": true
                                  },
                                  "mac": {
                                    "nullable": true
                                  },
                                  "mac_addresses": {
                                    "nullable": true
                                  },
                                  "agent_is_vdi": {
                                    "nullable": true
                                  },
                                  "agent_install_type": {
                                    "type": "string"
                                  },
                                  "agent_host_boot_time": {
                                    "nullable": true
                                  },
                                  "event_sub_type": {
                                    "nullable": true
                                  },
                                  "module_id": {
                                    "nullable": true
                                  },
                                  "association_strength": {
                                    "nullable": true
                                  },
                                  "dst_association_strength": {
                                    "nullable": true
                                  },
                                  "story_id": {
                                    "nullable": true
                                  },
                                  "event_id": {
                                    "nullable": true
                                  },
                                  "event_type": {
                                    "type": "string"
                                  },
                                  "events_length": {
                                    "type": "integer"
                                  },
                                  "event_timestamp": {
                                    "nullable": true
                                  },
                                  "actor_process_instance_id": {
                                    "nullable": true
                                  },
                                  "actor_process_image_path": {
                                    "nullable": true
                                  },
                                  "actor_process_image_name": {
                                    "nullable": true
                                  },
                                  "actor_process_command_line": {
                                    "nullable": true
                                  },
                                  "actor_process_signature_status": {
                                    "type": "string"
                                  },
                                  "actor_process_signature_vendor": {
                                    "nullable": true
                                  },
                                  "actor_process_image_sha256": {
                                    "nullable": true
                                  },
                                  "actor_process_image_md5": {
                                    "nullable": true
                                  },
                                  "actor_process_causality_id": {
                                    "nullable": true
                                  },
                                  "actor_causality_id": {
                                    "nullable": true
                                  },
                                  "actor_process_os_pid": {
                                    "nullable": true
                                  },
                                  "actor_thread_thread_id": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_image_name": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_command_line": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_image_path": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_signature_vendor": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_signature_status": {
                                    "type": "string"
                                  },
                                  "causality_actor_causality_id": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_execution_time": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_image_md5": {
                                    "nullable": true
                                  },
                                  "causality_actor_process_image_sha256": {
                                    "nullable": true
                                  },
                                  "action_file_path": {
                                    "nullable": true
                                  },
                                  "action_file_name": {
                                    "nullable": true
                                  },
                                  "action_file_md5": {
                                    "nullable": true
                                  },
                                  "action_file_sha256": {
                                    "nullable": true
                                  },
                                  "action_file_macro_sha256": {
                                    "nullable": true
                                  },
                                  "action_registry_data": {
                                    "nullable": true
                                  },
                                  "action_registry_key_name": {
                                    "nullable": true
                                  },
                                  "action_registry_value_name": {
                                    "nullable": true
                                  },
                                  "action_registry_full_key": {
                                    "nullable": true
                                  },
                                  "action_local_ip": {
                                    "type": "string"
                                  },
                                  "action_local_port": {
                                    "type": "string"
                                  },
                                  "action_remote_ip": {
                                    "type": "string"
                                  },
                                  "action_remote_port": {
                                    "type": "string"
                                  },
                                  "action_external_hostname": {
                                    "type": "string"
                                  },
                                  "action_country": {
                                    "type": "string"
                                  },
                                  "action_process_instance_id": {
                                    "nullable": true
                                  },
                                  "action_process_causality_id": {
                                    "nullable": true
                                  },
                                  "action_process_image_name": {
                                    "nullable": true
                                  },
                                  "action_process_image_sha256": {
                                    "nullable": true
                                  },
                                  "action_process_image_command_line": {
                                    "nullable": true
                                  },
                                  "action_process_signature_status": {
                                    "type": "string"
                                  },
                                  "action_process_signature_vendor": {
                                    "nullable": true
                                  },
                                  "os_actor_effective_username": {
                                    "nullable": true
                                  },
                                  "os_actor_process_instance_id": {
                                    "nullable": true
                                  },
                                  "os_actor_process_image_path": {
                                    "nullable": true
                                  },
                                  "os_actor_process_image_name": {
                                    "nullable": true
                                  },
                                  "os_actor_process_command_line": {
                                    "nullable": true
                                  },
                                  "os_actor_process_signature_status": {
                                    "type": "string"
                                  },
                                  "os_actor_process_signature_vendor": {
                                    "nullable": true
                                  },
                                  "os_actor_process_image_sha256": {
                                    "nullable": true
                                  },
                                  "os_actor_process_causality_id": {
                                    "nullable": true
                                  },
                                  "os_actor_causality_id": {
                                    "nullable": true
                                  },
                                  "os_actor_process_os_pid": {
                                    "nullable": true
                                  },
                                  "os_actor_thread_thread_id": {
                                    "nullable": true
                                  },
                                  "fw_app_id": {
                                    "nullable": true
                                  },
                                  "fw_interface_from": {
                                    "nullable": true
                                  },
                                  "fw_interface_to": {
                                    "nullable": true
                                  },
                                  "fw_rule": {
                                    "nullable": true
                                  },
                                  "fw_rule_id": {
                                    "nullable": true
                                  },
                                  "fw_device_name": {
                                    "nullable": true
                                  },
                                  "fw_serial_number": {
                                    "type": "string"
                                  },
                                  "fw_url_domain": {
                                    "nullable": true
                                  },
                                  "fw_email_subject": {
                                    "type": "string"
                                  },
                                  "fw_email_sender": {
                                    "nullable": true
                                  },
                                  "fw_email_recipient": {
                                    "nullable": true
                                  },
                                  "fw_app_subcategory": {
                                    "nullable": true
                                  },
                                  "fw_app_category": {
                                    "nullable": true
                                  },
                                  "fw_app_technology": {
                                    "nullable": true
                                  },
                                  "fw_vsys": {
                                    "nullable": true
                                  },
                                  "fw_xff": {
                                    "nullable": true
                                  },
                                  "fw_misc": {
                                    "nullable": true
                                  },
                                  "fw_is_phishing": {
                                    "type": "string"
                                  },
                                  "dst_agent_id": {
                                    "nullable": true
                                  },
                                  "dst_causality_actor_process_execution_time": {
                                    "nullable": true
                                  },
                                  "dns_query_name": {
                                    "nullable": true
                                  },
                                  "dst_action_external_hostname": {
                                    "nullable": true
                                  },
                                  "dst_action_country": {
                                    "nullable": true
                                  },
                                  "dst_action_external_port": {
                                    "nullable": true
                                  },
                                  "alert_id": {
                                    "type": "string"
                                  },
                                  "detection_timestamp": {
                                    "type": "integer"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "category": {
                                    "type": "string"
                                  },
                                  "endpoint_id": {
                                    "nullable": true
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "host_ip": {
                                    "type": "string"
                                  },
                                  "host_name": {
                                    "type": "string"
                                  },
                                  "source": {
                                    "type": "string"
                                  },
                                  "action": {
                                    "type": "string"
                                  },
                                  "action_pretty": {
                                    "type": "string"
                                  },
                                  "user_name": {
                                    "nullable": true
                                  },
                                  "contains_featured_host": {
                                    "type": "string"
                                  },
                                  "contains_featured_user": {
                                    "type": "string"
                                  },
                                  "contains_featured_ip_address": {
                                    "type": "string"
                                  },
                                  "tags": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "original_tags": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "network_artifacts": {
                          "type": "object",
                          "properties": {
                            "total_count": {
                              "type": "integer"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "alert_count": {
                                    "type": "integer"
                                  },
                                  "is_manual": {
                                    "type": "boolean"
                                  },
                                  "network_domain": {
                                    "type": "string"
                                  },
                                  "network_remote_ip": {
                                    "type": "string"
                                  },
                                  "network_remote_port": {
                                    "type": "string"
                                  },
                                  "network_country": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "file_artifacts": {
                          "type": "object",
                          "properties": {
                            "total_count": {
                              "type": "integer"
                            },
                            "data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "alert_count": {
                                    "type": "integer"
                                  },
                                  "file_name": {
                                    "type": "string"
                                  },
                                  "File_sha256": {
                                    "type": "string"
                                  },
                                  "file_signature_status": {
                                    "type": "string"
                                  },
                                  "file_wildfire_verdict": {
                                    "type": "string"
                                  },
                                  "is_malicous": {
                                    "type": "boolean"
                                  },
                                  "is_manual": {
                                    "type": "boolean"
                                  },
                                  "is_process": {
                                    "type": "boolean"
                                  },
                                  "low_confidence": {
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "incident": {
                          "incident_id": "<incient ID>",
                          "incident_name": "test",
                          "creation_time": 1603184209710,
                          "modification_time": 1603184209710,
                          "detection_time": null,
                          "status": "new",
                          "severity": "high",
                          "description": "generated by PAN NGFW",
                          "assigned_user_mail": null,
                          "assigned_user_pretty_name": null,
                          "alert_count": 1,
                          "low_severity_alert_count": 0,
                          "med_severity_alert_count": 0,
                          "high_severity_alert_count": 1,
                          "critical_severity_alert_count": 0,
                          "user_count": 0,
                          "host_count": 0,
                          "notes": null,
                          "resolve_comment": null,
                          "manual_severity": null,
                          "manual_description": null,
                          "xdr_url": "https://test.xdr.us.paloaltonetworks.com/incident-view/1",
                          "starred": false,
                          "hosts": [
                            "host1:agent_id1",
                            "host2:agent_id2"
                          ],
                          "users": [],
                          "incident_sources": [
                            "PAN NGFW"
                          ],
                          "rule_based_score": 342,
                          "manual_score": null,
                          "wildfire_hits": 0,
                          "alerts_grouping_status": "Enabled",
                          "mitre_techniques_ids_and_names": [
                            "TA0004 - Privilege Escalation",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access"
                          ],
                          "mitre_tactics_ids_and_names": [
                            "T1001.001 - Data Obfuscation: Junk Data",
                            "T1001.002 - Data Obfuscation: Steganography",
                            "T1001.003 - Data Obfuscation: Protocol Impersonation"
                          ],
                          "alert_categories": [
                            "Collection",
                            "Credential Access",
                            "File Name"
                          ]
                        },
                        "alerts": {
                          "total_count": 1,
                          "data": [
                            {
                              "external_id": "<external ID>",
                              "severity": "high",
                              "matching_status": "UNMATCHABLE",
                              "end_match_attempt_ts": null,
                              "local_insert_ts": 1603175431,
                              "bioc_indicator": null,
                              "matching_service_rule_id": null,
                              "attempt_counter": null,
                              "bioc_category_enum_key": null,
                              "case_id": 1,
                              "is_whitelisted": false,
                              "starred": false,
                              "deduplicate_tokens": "<token value>",
                              "filter_rule_id": null,
                              "mitre_technique_id_and_name": null,
                              "mitre_tactic_id_and_name": null,
                              "agent_version": null,
                              "agent_device_domain": null,
                              "agent_fqdn": null,
                              "agent_os_type": "NO_HOST",
                              "agent_os_sub_type": null,
                              "agent_data_collection_status": null,
                              "mac": null,
                              "mac_addresses": null,
                              "agent_is_vdi": null,
                              "agent_install_type": "NA",
                              "agent_host_boot_time": null,
                              "event_sub_type": null,
                              "module_id": null,
                              "association_strength": null,
                              "dst_association_strength": null,
                              "story_id": null,
                              "event_id": null,
                              "event_type": "Network Event",
                              "events_length": 1,
                              "event_timestamp": null,
                              "actor_process_instance_id": null,
                              "actor_process_image_path": null,
                              "actor_process_image_name": null,
                              "actor_process_command_line": null,
                              "actor_process_signature_status": "N/A",
                              "actor_process_signature_vendor": null,
                              "actor_process_image_sha256": null,
                              "actor_process_image_md5": null,
                              "actor_process_causality_id": null,
                              "actor_causality_id": null,
                              "actor_process_os_pid": null,
                              "actor_thread_thread_id": null,
                              "causality_actor_process_image_name": null,
                              "causality_actor_process_command_line": null,
                              "causality_actor_process_image_path": null,
                              "causality_actor_process_signature_vendor": null,
                              "causality_actor_process_signature_status": "N/A",
                              "causality_actor_causality_id": null,
                              "causality_actor_process_execution_time": null,
                              "causality_actor_process_image_md5": null,
                              "causality_actor_process_image_sha256": null,
                              "action_file_path": null,
                              "action_file_name": null,
                              "action_file_md5": null,
                              "action_file_sha256": null,
                              "action_file_macro_sha256": null,
                              "action_registry_data": null,
                              "action_registry_key_name": null,
                              "action_registry_value_name": null,
                              "action_registry_full_key": null,
                              "action_local_ip": "<IP address>",
                              "action_local_port": "<port>",
                              "action_remote_ip": "<IP address>",
                              "action_remote_port": "<port>",
                              "action_external_hostname": "<hostname>",
                              "action_country": "UNKNOWN",
                              "action_process_instance_id": null,
                              "action_process_causality_id": null,
                              "action_process_image_name": null,
                              "action_process_image_sha256": null,
                              "action_process_image_command_line": null,
                              "action_process_signature_status": "N/A",
                              "action_process_signature_vendor": null,
                              "os_actor_effective_username": null,
                              "os_actor_process_instance_id": null,
                              "os_actor_process_image_path": null,
                              "os_actor_process_image_name": null,
                              "os_actor_process_command_line": null,
                              "os_actor_process_signature_status": "N/A",
                              "os_actor_process_signature_vendor": null,
                              "os_actor_process_image_sha256": null,
                              "os_actor_process_causality_id": null,
                              "os_actor_causality_id": null,
                              "os_actor_process_os_pid": null,
                              "os_actor_thread_thread_id": null,
                              "fw_app_id": null,
                              "fw_interface_from": null,
                              "fw_interface_to": null,
                              "fw_rule": null,
                              "fw_rule_id": null,
                              "fw_device_name": null,
                              "fw_serial_number": "<serial number>",
                              "fw_url_domain": null,
                              "fw_email_subject": "",
                              "fw_email_sender": null,
                              "fw_email_recipient": null,
                              "fw_app_subcategory": null,
                              "fw_app_category": null,
                              "fw_app_technology": null,
                              "fw_vsys": null,
                              "fw_xff": null,
                              "fw_misc": null,
                              "fw_is_phishing": "N/A",
                              "dst_agent_id": null,
                              "dst_causality_actor_process_execution_time": null,
                              "dns_query_name": null,
                              "dst_action_external_hostname": null,
                              "dst_action_country": null,
                              "dst_action_external_port": null,
                              "alert_id": "1",
                              "detection_timestamp": 1603184109000,
                              "name": "sagcalun",
                              "category": "Spyware Detected via Anti-Spyware profile",
                              "endpoint_id": null,
                              "description": "Spyware Phone Home Detection",
                              "host_ip": "<IP address>",
                              "host_name": "<hostname>",
                              "source": "PAN NGFW",
                              "action": "DETECTED_4",
                              "action_pretty": "Detected (Raised An Alert)",
                              "user_name": null,
                              "contains_featured_host": true,
                              "contains_featured_user": true,
                              "contains_featured_ip_address": true,
                              "tags": [
                                "XDR Agent",
                                "EG:Windows"
                              ],
                              "original_tags": "None"
                            }
                          ]
                        },
                        "network_artifacts": {
                          "total_count": 2,
                          "data": [
                            {
                              "type": "DOMAIN",
                              "alert_count": 1,
                              "is_manual": false,
                              "network_domain": "<domain name>",
                              "network_remote_ip": "<IP address>",
                              "network_remote_port": "<port>",
                              "network_country": "UNKNOWN"
                            },
                            {
                              "type": "IP",
                              "alert_count": 1,
                              "is_manual": false,
                              "network_domain": "<domain name>",
                              "network_remote_ip": "<IP address>",
                              "network_remote_port": "<port>",
                              "network_country": "UNKNOWN"
                            }
                          ]
                        },
                        "file_artifacts": {
                          "total_count": 2,
                          "data": [
                            {
                              "alert_count": 2,
                              "file_name": "Test",
                              "File_sha256": "1111",
                              "file_signature_status": "SIGNATURE_UNAVAILABLE",
                              "file_wildfire_verdict": "BENIGN",
                              "is_malicous": false,
                              "is_manual": false,
                              "is_process": false,
                              "low_confidence": true,
                              "type": "HASH"
                            },
                            {
                              "alert_count": 43,
                              "file_name": "Test1",
                              "File_sha256": "2222",
                              "file_signature_status": "SIGNATURE_UNAVAILABLE",
                              "file_wildfire_verdict": "MALWARE",
                              "is_malicous": true,
                              "is_manual": false,
                              "is_process": false,
                              "low_confidence": true,
                              "type": "HASH"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "incident": {
                          "incident_id": "<incient ID>",
                          "incident_name": "test",
                          "creation_time": 1603184209710,
                          "modification_time": 1603184209710,
                          "detection_time": null,
                          "status": "new",
                          "severity": "high",
                          "description": "generated by PAN NGFW",
                          "assigned_user_mail": null,
                          "assigned_user_pretty_name": null,
                          "alert_count": 1,
                          "low_severity_alert_count": 0,
                          "med_severity_alert_count": 0,
                          "high_severity_alert_count": 1,
                          "critical_severity_alert_count": 0,
                          "user_count": 0,
                          "host_count": 0,
                          "notes": null,
                          "resolve_comment": null,
                          "manual_severity": null,
                          "manual_description": null,
                          "xdr_url": "https://test.xdr.us.paloaltonetworks.com/incident-view/1",
                          "starred": false,
                          "hosts": [
                            "<host1>:<agent_id1>",
                            "<host2>:<agent_id2>"
                          ],
                          "users": [],
                          "incident_sources": [
                            "PAN NGFW"
                          ],
                          "rule_based_score": 342,
                          "manual_score": null,
                          "wildfire_hits": 0,
                          "alerts_grouping_status": "Enabled",
                          "mitre_techniques_ids_and_names": [
                            "TA0004 - Privilege Escalation",
                            "TA0005 - Defense Evasion",
                            "TA0006 - Credential Access"
                          ],
                          "mitre_tactics_ids_and_names": [
                            "T1001.001 - Data Obfuscation: Junk Data",
                            "T1001.002 - Data Obfuscation: Steganography",
                            "T1001.003 - Data Obfuscation: Protocol Impersonation"
                          ],
                          "alert_categories": [
                            "Collection",
                            "Credential Access",
                            "File Name"
                          ]
                        },
                        "alerts": {
                          "total_count": 1,
                          "data": [
                            {
                              "external_id": "<external ID>",
                              "severity": "high",
                              "matching_status": "UNMATCHABLE",
                              "end_match_attempt_ts": null,
                              "local_insert_ts": 1603175431,
                              "bioc_indicator": null,
                              "matching_service_rule_id": null,
                              "attempt_counter": null,
                              "bioc_category_enum_key": null,
                              "case_id": 1,
                              "is_whitelisted": false,
                              "starred": false,
                              "deduplicate_tokens": "<token value>",
                              "filter_rule_id": null,
                              "mitre_technique_id_and_name": null,
                              "mitre_tactic_id_and_name": null,
                              "agent_version": null,
                              "agent_device_domain": null,
                              "agent_fqdn": null,
                              "agent_os_type": "NO_HOST",
                              "agent_os_sub_type": null,
                              "agent_data_collection_status": null,
                              "mac": null,
                              "mac_addresses": null,
                              "agent_is_vdi": null,
                              "agent_install_type": "NA",
                              "agent_host_boot_time": null,
                              "event_sub_type": null,
                              "module_id": null,
                              "association_strength": null,
                              "dst_association_strength": null,
                              "story_id": null,
                              "event_id": null,
                              "event_type": "Network Event",
                              "events_length": 1,
                              "event_timestamp": null,
                              "actor_process_instance_id": null,
                              "actor_process_image_path": null,
                              "actor_process_image_name": null,
                              "actor_process_command_line": null,
                              "actor_process_signature_status": "N/A",
                              "actor_process_signature_vendor": null,
                              "actor_process_image_sha256": null,
                              "actor_process_image_md5": null,
                              "actor_process_causality_id": null,
                              "actor_causality_id": null,
                              "actor_process_os_pid": null,
                              "actor_thread_thread_id": null,
                              "causality_actor_process_image_name": null,
                              "causality_actor_process_command_line": null,
                              "causality_actor_process_image_path": null,
                              "causality_actor_process_signature_vendor": null,
                              "causality_actor_process_signature_status": "N/A",
                              "causality_actor_causality_id": null,
                              "causality_actor_process_execution_time": null,
                              "causality_actor_process_image_md5": null,
                              "causality_actor_process_image_sha256": null,
                              "action_file_path": null,
                              "action_file_name": null,
                              "action_file_md5": null,
                              "action_file_sha256": null,
                              "action_file_macro_sha256": null,
                              "action_registry_data": null,
                              "action_registry_key_name": null,
                              "action_registry_value_name": null,
                              "action_registry_full_key": null,
                              "action_local_ip": "<IP address>",
                              "action_local_port": "<port>",
                              "action_remote_ip": "<IP address>",
                              "action_remote_port": "<port>",
                              "action_external_hostname": "<hostname>",
                              "action_country": "UNKNOWN",
                              "action_process_instance_id": null,
                              "action_process_causality_id": null,
                              "action_process_image_name": null,
                              "action_process_image_sha256": null,
                              "action_process_image_command_line": null,
                              "action_process_signature_status": "N/A",
                              "action_process_signature_vendor": null,
                              "os_actor_effective_username": null,
                              "os_actor_process_instance_id": null,
                              "os_actor_process_image_path": null,
                              "os_actor_process_image_name": null,
                              "os_actor_process_command_line": null,
                              "os_actor_process_signature_status": "N/A",
                              "os_actor_process_signature_vendor": null,
                              "os_actor_process_image_sha256": null,
                              "os_actor_process_causality_id": null,
                              "os_actor_causality_id": null,
                              "os_actor_process_os_pid": null,
                              "os_actor_thread_thread_id": null,
                              "fw_app_id": null,
                              "fw_interface_from": null,
                              "fw_interface_to": null,
                              "fw_rule": null,
                              "fw_rule_id": null,
                              "fw_device_name": null,
                              "fw_serial_number": "<serial number>",
                              "fw_url_domain": null,
                              "fw_email_subject": "",
                              "fw_email_sender": null,
                              "fw_email_recipient": null,
                              "fw_app_subcategory": null,
                              "fw_app_category": null,
                              "fw_app_technology": null,
                              "fw_vsys": null,
                              "fw_xff": null,
                              "fw_misc": null,
                              "fw_is_phishing": "N/A",
                              "dst_agent_id": null,
                              "dst_causality_actor_process_execution_time": null,
                              "dns_query_name": null,
                              "dst_action_external_hostname": null,
                              "dst_action_country": null,
                              "dst_action_external_port": null,
                              "alert_id": "1",
                              "detection_timestamp": 1603184109000,
                              "name": "sagcalun",
                              "category": "Spyware Detected via Anti-Spyware profile",
                              "endpoint_id": null,
                              "description": "Spyware Phone Home Detection",
                              "host_ip": "<IP address>",
                              "host_name": "<hostname>",
                              "source": "PAN NGFW",
                              "action": "DETECTED_4",
                              "action_pretty": "Detected (Raised An Alert)",
                              "user_name": null,
                              "contains_featured_host": true,
                              "contains_featured_user": true,
                              "contains_featured_ip_address": true,
                              "tags": [
                                "XDR Agent",
                                "EG:Windows"
                              ],
                              "original_tags": "None"
                            }
                          ]
                        },
                        "network_artifacts": {
                          "total_count": 2,
                          "data": [
                            {
                              "type": "DOMAIN",
                              "alert_count": 1,
                              "is_manual": false,
                              "network_domain": "<domain name>",
                              "network_remote_ip": "<IP address>",
                              "network_remote_port": "<port>",
                              "network_country": "UNKNOWN"
                            },
                            {
                              "type": "IP",
                              "alert_count": 1,
                              "is_manual": false,
                              "network_domain": "<domain name>",
                              "network_remote_ip": "<IP address>",
                              "network_remote_port": "<port>",
                              "network_country": "UNKNOWN"
                            }
                          ]
                        },
                        "file_artifacts": {
                          "total_count": 2,
                          "data": [
                            {
                              "alert_count": 2,
                              "file_name": "Test",
                              "File_sha256": "1111",
                              "file_signature_status": "SIGNATURE_UNAVAILABLE",
                              "file_wildfire_verdict": "BENIGN",
                              "is_malicous": false,
                              "is_manual": false,
                              "is_process": false,
                              "low_confidence": true,
                              "type": "HASH"
                            },
                            {
                              "alert_count": 43,
                              "file_name": "Test1",
                              "File_sha256": "2222",
                              "file_signature_status": "SIGNATURE_UNAVAILABLE",
                              "file_wildfire_verdict": "MALWARE",
                              "is_malicous": true,
                              "is_manual": false,
                              "is_process": false,
                              "low_confidence": true,
                              "type": "HASH"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "404": {
            "description": "An error occurred while processing XDR public API - Incidents - update_incident.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/rbac/get_users": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Users",
        "description": "Retrieve a list of the current users in your environment.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-rbac-get_users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "description": "JSON object containing the query result.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_email": {
                            "type": "string",
                            "description": "Email address of the user."
                          },
                          "user_first_name": {
                            "type": "string",
                            "description": "First name of the user."
                          },
                          "user_last_name": {
                            "type": "string",
                            "description": "Last name of the user."
                          },
                          "role_name": {
                            "type": "string",
                            "description": "Role name associated with the user."
                          },
                          "last_logged_in": {
                            "type": "integer",
                            "nullable": true,
                            "description": "Timestamp of when the user last logged in."
                          },
                          "user_type": {
                            "type": "string",
                            "description": "Type of user."
                          },
                          "groups": {
                            "type": "array",
                            "description": "Name of user groups associated with the user, if applicable.",
                            "items": {
                              "type": "object"
                            }
                          },
                          "scope": {
                            "type": "array",
                            "description": "Name of scope associated with the user, if applicable.",
                            "items": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        {
                          "user_email": "user1@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Account Admin",
                          "last_logged_in": 1640024700241,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        },
                        {
                          "user_email": "user2@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Account Admin",
                          "last_logged_in": null,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        },
                        {
                          "user_email": "user3@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Investigator",
                          "last_logged_in": null,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        {
                          "user_email": "user1@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Account Admin",
                          "last_logged_in": 1640024700241,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        },
                        {
                          "user_email": "user2@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Account Admin",
                          "last_logged_in": null,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        },
                        {
                          "user_email": "user3@acme.com",
                          "user_first_name": "<first name>",
                          "user_last_name": "<last name>",
                          "role_name": "Investigator",
                          "last_logged_in": null,
                          "user_type": "CSP",
                          "groups": [],
                          "scope": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/rbac/get_roles": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Roles",
        "description": "Retrieve information about one or more roles created in your environment.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-rbac-get_roles",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "role_names": {
                        "type": "array",
                        "description": "List of one or more role names in your environment for which you want detailed information.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "role_names": [
                        "Role1",
                        "Role2"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "role_names": [
                        "Role1",
                        "Role2"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "description": "JSON object containing the query result.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pretty_name": {
                            "type": "string",
                            "description": "Name of the role as it appears in the Management Console."
                          },
                          "permissions": {
                            "type": "array",
                            "description": "List of permissions associated with this role.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "insert_time": {
                            "type": "integer",
                            "description": "Timestamp of when the Role was created."
                          },
                          "update_time": {
                            "type": "integer",
                            "description": "Timestamp of when the Role was last updated."
                          },
                          "created_by": {
                            "type": "string",
                            "description": "Email of the user who created the Role."
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the Role, if available."
                          },
                          "groups": {
                            "type": "array",
                            "description": "Group names associated with the Role.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "users": {
                            "type": "array",
                            "description": "Email addresses of users associated with the Role.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        [
                          {
                            "pretty_name": "Role1",
                            "permissions": [
                              "Reports",
                              "Playbooks",
                              "Datasets Access Control",
                              "Dashboards",
                              "Scripts"
                            ],
                            "insert_time": 1658315576844,
                            "update_time": null,
                            "created_by": "user1@acme.com",
                            "description": "",
                            "groups": [
                              "group1",
                              "group2"
                            ],
                            "users": []
                          }
                        ],
                        [
                          {
                            "pretty_name": "Role2",
                            "permissions": [
                              "Dashboards",
                              "Datasets Access Control"
                            ],
                            "insert_time": 1661435660656,
                            "update_time": null,
                            "created_by": "user1@acme.com",
                            "description": "",
                            "groups": [],
                            "users": []
                          }
                        ]
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        [
                          {
                            "pretty_name": "Role1",
                            "permissions": [
                              "Reports",
                              "Playbooks",
                              "Datasets Access Control",
                              "Dashboards",
                              "Scripts"
                            ],
                            "insert_time": 1658315576844,
                            "update_time": null,
                            "created_by": "user1@acme.com",
                            "description": "",
                            "groups": [
                              "group1",
                              "group2"
                            ],
                            "users": []
                          }
                        ],
                        [
                          {
                            "pretty_name": "Role2",
                            "permissions": [
                              "Dashboards",
                              "Datasets Access Control"
                            ],
                            "insert_time": 1661435660656,
                            "update_time": null,
                            "created_by": "user1@acme.com",
                            "description": "",
                            "groups": [],
                            "users": []
                          }
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/rbac/get_user_group": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get User Groups",
        "description": "Retrieve a list of the current user emails associated with one or more user groups in your environment.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-rbac-get_user_group",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "group_names": {
                        "type": "array",
                        "description": "List of one or more user group names for which you want the associated users.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "group_names": [
                        "Group1",
                        "Group2"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "group_names": [
                        "Group1",
                        "Group2"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "description": "JSON object containing the query result.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "group_name": {
                            "type": "string",
                            "description": "Name of the User Group."
                          },
                          "description": {
                            "nullable": true,
                            "description": "Description of the User Group, if available."
                          },
                          "pretty_name": {
                            "type": "string",
                            "description": "Name of the User Group as it appears in the Management Console."
                          },
                          "insert_time": {
                            "type": "integer",
                            "description": "Timestamp of when the User Group was created."
                          },
                          "update_time": {
                            "type": "integer",
                            "description": "Timestamp of when the User Group was last updated."
                          },
                          "user_email": {
                            "type": "array",
                            "description": "List of email addresses belonging to the users associated with the User Group.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "source": {
                            "type": "string",
                            "description": "Type of User Group."
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        {
                          "group_name": "Group1",
                          "description": null,
                          "pretty_name": "Investigator",
                          "insert_time": 1661170832341,
                          "update_time": 1661171650679,
                          "user_email": [
                            "user1@acme.com",
                            "user2@pacme.com",
                            "user3@acme.com",
                            "user4@acme.com",
                            "user5@acme.com"
                          ],
                          "source": "Custom"
                        },
                        {
                          "group_name": "Group2",
                          "description": null,
                          "pretty_name": "Instance Administrator",
                          "insert_time": 1660830450590,
                          "update_time": 1661171631589,
                          "user_email": [
                            "user1@acme.com",
                            "user2@acme.com",
                            "user3@acme.com",
                            "user4@acme.com"
                          ],
                          "source": "Custom"
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        {
                          "group_name": "Group1",
                          "description": null,
                          "pretty_name": "Investigator",
                          "insert_time": 1661170832341,
                          "update_time": 1661171650679,
                          "user_email": [
                            "user1@acme.com",
                            "user2@pacme.com",
                            "user3@acme.com",
                            "user4@acme.com",
                            "user5@acme.com"
                          ],
                          "source": "Custom"
                        },
                        {
                          "group_name": "Group2",
                          "description": null,
                          "pretty_name": "Instance Administrator",
                          "insert_time": 1660830450590,
                          "update_time": 1661171631589,
                          "user_email": [
                            "user1@acme.com",
                            "user2@acme.com",
                            "user3@acme.com",
                            "user4@acme.com"
                          ],
                          "source": "Custom"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors."
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/rbac/set_user_role": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Set a User Role",
        "description": "Add or remove one or more users from a role.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-rbac-set_user_role",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "user_emails": {
                        "type": "array",
                        "description": "List of one or more user emails of users you want to add to or remove from a role.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "role_name": {
                        "type": "string",
                        "description": "Name of the role you want to add a user to. Send an empty field to remove the user."
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "user_emails": [
                        "user1@acme.com",
                        "user2@acme.com"
                      ],
                      "role_name": "Role1"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "user_emails": [
                        "user1@acme.com",
                        "user2@acme.com"
                      ],
                      "role_name": "Role1"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "update_count": {
                          "type": "string",
                          "description": "Number of updated users."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "update_count": "2"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "update_count": "2"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/get_endpoint": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Get Endpoint",
        "description": "Gets a list of filtered endpoints.\n- The response is concatenated using AND condition (OR is not supported).\n- The maximum result set size is 100.\n- Offset is the zero-based number of endpoints from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-endpoints-get_endpoint",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "You can send a request to retrieve either all or filtered results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\n\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list",
                                "endpoint_status",
                                "dist_name",
                                "first_seen",
                                "last_seen",
                                "ip_list",
                                "group_name",
                                "platform",
                                "alias",
                                "isolate",
                                "hostname",
                                "public_ip_list"
                              ],
                              "description": "Identifies the field the filter is matching. Filters are based on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs.\n- `endpoint_status`: Status of the endpoint ID.\n- `dist_name`: Distribution / Installation Package name.\n- `first_seen`: When the agent was first seen.\n- `last_seen`: When the agent was last seen.\n- `ip_list`: List of IP addresses.\n- `group_name`: Group name the agent belongs to.\n- `platform`: Platform name.\n- `alias`: Alias name.\n- `isolate`: If the endpoint was isolated.\n- `hostname`: Host name.\n- `public_ip_list`: Public IP addresses that correlate to the last IPv4 address from which the XDR agent connected (know as `Last Origin IP`)."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`, `public_ip_list`: List of strings.\n- `endpoint_status`: Permitted values are: `connected`, `disconnected`, `lost`, or `uninstalled`\n- `ip_list`: List of strings. For example: \"192.168.5.12\".\n- `platform`: Permitted values are: `windows`, `linux`, `macos`, `android`.\n- `isolate`: Permitted values are: `isolated` or `unisolated`.\n- `scan_status`: Permitted values are: `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n`gte` / `lte`\n- `first_seen` and `last_seen`: Timestamp epoch milliseconds."
                            },
                            "value": {
                              "description": "Value that this filter must match. Valid keywords:\n- `endpoint_id_list`, `dist_name`, `group_name`, `alias`, `hostname`, `username`, `public_ip_list`: List of strings.\n- `endpoint_status`: String. Permitted values are: `connected`, `disconnected`, `lost`, or `uninstalled`\n- `ip_list`: List of strings.\n- `platform`: String. Permitted values are: `windows`, `linux`, `macos`, `android`.\n- `isolate`: String. Permitted values are: `isolated` or `unisolated`.\n- `scan_status`: String. Permitted values are: `none`, `pending`, `in_progress`, `canceled`, `aborted`, `pending_cancellation`, `success`, or `error`.\n- `first_seen` and `last_seen`: Integer. Timestamp epoch milliseconds.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "Represents the start offset within the query result set from which you want endpoints returned.\n\nEndpoints are returned as a zero-based list. Any endpoint indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "Represents the end offset within the result set after which you do not want endpoints returned.\n\nEndpoint in the endpoint list that is indexed higher than this value is not returned in the final results set. Defaults to 100, which returns all endpoints to the end of the list."
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "endpoint_id",
                              "first_seen",
                              "last_seen"
                            ],
                            "description": "Identifies the field you want to sort by. Case-sensitive.",
                            "default": "first_seen"
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "ASC",
                              "DESC"
                            ],
                            "description": "Whether you want to sort in ascending (`ASC`) or descending (`DESC`) order. Case-sensitive.",
                            "default": "DESC"
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "search_from": 0,
                      "search_to": 1,
                      "sort": {
                        "field": "endpoint_id",
                        "keyword": "ASC"
                      },
                      "filters": [
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "Test-Group-01"
                          ]
                        },
                        {
                          "field": "endpoint_status",
                          "operator": "in",
                          "value": [
                            "disconnected"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "papi-test"
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success",
                            "canceled",
                            "error"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "search_from": 0,
                      "search_to": 1,
                      "sort": {
                        "field": "endpoint_id",
                        "keyword": "asc"
                      },
                      "filters": [
                        {
                          "field": "group_name",
                          "operator": "in",
                          "value": [
                            "Test-Group-01"
                          ]
                        },
                        {
                          "field": "endpoint_status",
                          "operator": "in",
                          "value": [
                            "disconnected"
                          ]
                        },
                        {
                          "field": "dist_name",
                          "operator": "in",
                          "value": [
                            "papi-test"
                          ]
                        },
                        {
                          "field": "scan_status",
                          "operator": "in",
                          "value": [
                            "none",
                            "pending",
                            "in_progress",
                            "pending_cancellation",
                            "aborted",
                            "success",
                            "canceled",
                            "error"
                          ]
                        }
                      ]
                    }
                  }
                },
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of endpoints actually returned as result."
                        },
                        "endpoints": {
                          "type": "array",
                          "description": "A list of endpoints.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "endpoint_id": {
                                "type": "string"
                              },
                              "endpoint_name": {
                                "type": "string"
                              },
                              "endpointTags": {
                                "type": "string"
                              },
                              "endpoint_type": {
                                "type": "string"
                              },
                              "endpoint_status": {
                                "type": "string"
                              },
                              "operational_status_details": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "title": {
                                      "type": "string"
                                    },
                                    "reason": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "os_type": {
                                "type": "string"
                              },
                              "os_version": {
                                "type": "string"
                              },
                              "ip": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ipv6": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "public_ip": {
                                "type": "string"
                              },
                              "users": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "domain": {
                                "type": "string"
                              },
                              "alias": {
                                "type": "string"
                              },
                              "first_seen": {
                                "type": "integer"
                              },
                              "last_seen": {
                                "type": "integer"
                              },
                              "content_version": {
                                "type": "string"
                              },
                              "installation_package": {
                                "type": "string"
                              },
                              "active_directory": {
                                "nullable": true
                              },
                              "install_date": {
                                "type": "integer"
                              },
                              "endpoint_version": {
                                "type": "string"
                              },
                              "is_isolated": {
                                "type": "string"
                              },
                              "isolated_date": {
                                "nullable": true
                              },
                              "group_name": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "operational_status": {
                                "type": "string"
                              },
                              "operational_status_description": {
                                "type": "string"
                              },
                              "scan_status": {
                                "type": "string"
                              },
                              "content_release_timestamp": {
                                "type": "integer"
                              },
                              "last_content_update_time": {
                                "type": "integer"
                              },
                              "content_status": {
                                "type": "string"
                              },
                              "operating_system": {
                                "type": "string"
                              },
                              "mac_address": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "assigned_prevention_policy": {
                                "type": "string"
                              },
                              "assigned_extensions_policy": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "endpoints": [
                          {
                            "endpoint_id": "<endpoint ID>",
                            "endpoint_name": "<endpoint name>",
                            "endpointTags": "<tag name>",
                            "endpoint_type": "<endpoint type>",
                            "endpoint_status": "CONNECTED",
                            "operational_status_details": [
                              {
                                "title": "XDR Data Collection not running or not sent",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "BTP not working",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "Antimalware flow is asynchronous",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "Local privilege escalation",
                                "reason": "Linux kernel version is not supported"
                              }
                            ],
                            "os_type": "AGENT_OS_WINDOWS",
                            "os_version": "8.0.xxx",
                            "ip": [
                              "<IP address>"
                            ],
                            "ipv6": [],
                            "public_ip": "<IP address>",
                            "users": [
                              "XDR"
                            ],
                            "domain": "WORKGROUP",
                            "alias": "",
                            "first_seen": 1606218761377,
                            "last_seen": 1606218769163,
                            "content_version": "",
                            "installation_package": "XDR",
                            "active_directory": null,
                            "install_date": 1606218762089,
                            "endpoint_version": "<version>",
                            "is_isolated": "AGENT_UNISOLATED",
                            "isolated_date": null,
                            "group_name": [],
                            "operational_status": "PARTIALLY_PROTECTED",
                            "scan_status": "SCAN_STATUS_NONE",
                            "content_release_timestamp": 1636285746000,
                            "last_content_update_time": 1636381954285,
                            "content_status": "up_to_date",
                            "operating_system": "Debian 10.11",
                            "mac_address": [
                              "42:00:00:00:00:00"
                            ],
                            "assigned_prevention_policy": "Linux Default",
                            "assigned_extensions_policy": ""
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "endpoints": [
                          {
                            "endpoint_id": "<endpoint ID>",
                            "endpoint_name": "<endpoint name>",
                            "endpointTags": "<tag name>",
                            "endpoint_type": "<endpoint type>",
                            "endpoint_status": "CONNECTED",
                            "operational_status_details": [
                              {
                                "title": "XDR Data Collection not running or not sent",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "BTP not working",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "Antimalware flow is asynchronous",
                                "reason": "Linux kernel version is not supported"
                              },
                              {
                                "title": "Local privilege escalation",
                                "reason": "Linux kernel version is not supported"
                              }
                            ],
                            "os_type": "AGENT_OS_WINDOWS",
                            "os_version": "8.0.xxx",
                            "ip": [
                              "<IP address>"
                            ],
                            "ipv6": [],
                            "public_ip": "<IP address>",
                            "users": [
                              "XDR"
                            ],
                            "domain": "WORKGROUP",
                            "alias": "",
                            "first_seen": 1606218761377,
                            "last_seen": 1606218769163,
                            "content_version": "",
                            "installation_package": "XDR",
                            "active_directory": null,
                            "install_date": 1606218762089,
                            "endpoint_version": "<version>",
                            "is_isolated": "AGENT_UNISOLATED",
                            "isolated_date": null,
                            "group_name": [],
                            "operational_status": "PARTIALLY_PROTECTED",
                            "scan_status": "SCAN_STATUS_NONE",
                            "content_release_timestamp": 1636285746000,
                            "last_content_update_time": 1636381954285,
                            "content_status": "up_to_date",
                            "operating_system": "Debian 10.11",
                            "mac_address": [
                              "42:00:00:00:00:00"
                            ],
                            "assigned_prevention_policy": "Linux Default",
                            "assigned_extensions_policy": ""
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/get_risk_score": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Risk Score",
        "description": "Retrieve the risk score of a specific user or endpoint in your environment, along with the reason for the score.\n\nRequired license: **Identity Threat Module**",
        "operationId": "post-public_api-v1-get_risk_score",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique ID of a specific user or endpoint.\n\n- User ID should be in the following format: `netBIOS/samAccount`\n- Endpoint ID is the Cortex Agent ID.\n\nYou can only request one ID at a time."
                      }
                    },
                    "required": [
                      "id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "id": "<user or endpoint ID>"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "id": "<user or endpoint ID>"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Form of identification element.\n"
                        },
                        "id": {
                          "type": "string",
                          "description": "Identification value of the type field."
                        },
                        "score": {
                          "type": "integer",
                          "description": "The score assigned to the type."
                        },
                        "norm_risk_score": {
                          "type": "integer",
                          "description": "Normalization of the risk score.",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "risk_level": {
                          "type": "string",
                          "enum": [
                            "LOW",
                            "MED",
                            "HIGH"
                          ],
                          "description": "The risk level."
                        },
                        "reasons": {
                          "type": "array",
                          "description": "Details describing when and which incident name affected the score.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date created": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "severity": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "points": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "Email address."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "type": "user",
                        "id": "user2_9fa235",
                        "score": 95,
                        "reasons": [
                          {
                            "date created": "2023-01-31",
                            "description": "'Encoded VBScript executed' generated by XDR BIOC detected on host acme3 involving user user2_9fa235",
                            "severity": "SEV_050_CRITICAL",
                            "status": "STATUS_010_NEW",
                            "points": 95
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "type": "user",
                        "id": "user2_9fa235",
                        "score": 100,
                        "norm_risk_score": 800,
                        "risk_level": "HIGH",
                        "reasons": [
                          {
                            "date created": "2023-01-31",
                            "description": "'Encoded VBScript executed' generated by XDR BIOC detected on host acme3 involving user user2_9fa235",
                            "severity": "SEV_050_CRITICAL",
                            "status": "STATUS_010_NEW",
                            "points": 95
                          }
                        ],
                        "email": "user@company.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/get_risky_users": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Risky Users",
        "description": "Retrieve a list of users with the highest risk score in your environment along with the reason affecting each score.\n\nRequired license: **Identity Threat Module**",
        "operationId": "post-public_api-v1-get_risky_users",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "description": "JSON object containing the query result.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Form of identification element."
                          },
                          "id": {
                            "type": "string",
                            "description": "Identification value of the type field."
                          },
                          "score": {
                            "type": "integer",
                            "description": "The score assigned to the user."
                          },
                          "norm_risk_score": {
                            "type": "integer",
                            "description": "Normalization of the risk score.",
                            "minimum": 0,
                            "maximum": 1000,
                            "example": 20
                          },
                          "risk_level": {
                            "type": "string",
                            "enum": [
                              "LOW",
                              "MED",
                              "HIGH"
                            ],
                            "description": "The risk level.",
                            "example": "LOW"
                          },
                          "reasons": {
                            "type": "array",
                            "description": "Details describing when and which incident name affected the user score.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date created": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "points": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "Email address."
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        {
                          "type": "user",
                          "id": "acme1_9fa235",
                          "score": 95,
                          "reasons": [
                            {
                              "date created": "2023-01-31",
                              "description": "'Encoded VBScript executed' generated by XDR BIOC detected on host acme_agent-6a7b involving user acme1_9fa235",
                              "severity": "SEV_050_CRITICAL",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "user",
                          "id": "acme2_d40b59",
                          "score": 95,
                          "reasons": [
                            {
                              "date created": "2023-01-26",
                              "description": "'Kernel Privilege Escalation' along with 4 other alerts generated by XDR Analytics BIOC, XDR Analytics and XDR Agent detected on 3 hosts involving 3 users",
                              "severity": "SEV_040_HIGH",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "user",
                          "id": "acme3_3a509d",
                          "score": 15,
                          "reasons": [
                            {
                              "date created": "2023-02-13",
                              "description": "'First successful SSO connection from a country in organization' generated by XDR Analytics BIOC involving user acme3",
                              "severity": "SEV_020_LOW",
                              "status": "STATUS_010_NEW",
                              "points": 15
                            }
                          ]
                        },
                        {
                          "type": "user",
                          "id": "acme4_207a4e",
                          "score": 0,
                          "reasons": []
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        {
                          "type": "user",
                          "id": "acme1_9fa235",
                          "score": 100,
                          "norm_risk_score": 800,
                          "risk_level": "HIGH",
                          "reasons": [
                            {
                              "date created": "2023-01-31",
                              "description": "'Encoded VBScript executed' generated by XDR BIOC detected on host acme_agent-6a7b involving user acme1_9fa235",
                              "severity": "SEV_050_CRITICAL",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ],
                          "email": "user@company.com"
                        },
                        {
                          "type": "user",
                          "id": "acme2_d40b59",
                          "score": 100,
                          "norm_risk_score": 800,
                          "risk_level": "HIGH",
                          "reasons": [
                            {
                              "date created": "2023-01-26",
                              "description": "'Kernel Privilege Escalation' along with 4 other alerts generated by XDR Analytics BIOC, XDR Analytics and XDR Agent detected on 3 hosts involving 3 users",
                              "severity": "SEV_040_HIGH",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "user",
                          "id": "acme3_3a509d",
                          "score": 15,
                          "norm_risk_score": 100,
                          "risk_level": "LOW",
                          "reasons": [
                            {
                              "date created": "2023-02-13",
                              "description": "'First successful SSO connection from a country in organization' generated by XDR Analytics BIOC involving user acme3",
                              "severity": "SEV_020_LOW",
                              "status": "STATUS_010_NEW",
                              "points": 15
                            }
                          ],
                          "email": "user@company.com"
                        },
                        {
                          "type": "user",
                          "id": "acme4_207a4e",
                          "score": 0,
                          "norm_risk_score": 0,
                          "risk_level": "LOW",
                          "reasons": [],
                          "email": "user@company.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "404": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/get_risky_hosts": {
      "post": {
        "tags": [
          "System Management"
        ],
        "summary": "Get Risky Hosts",
        "description": "Retrieve a list of endpoints with the highest risk score in your environment along with the reason for each score.\n\nRequired license: **Identity Threat Module**",
        "operationId": "post-public_api-v1-get_risky_hosts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "description": "JSON object containing the query result.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Form of identification element."
                          },
                          "id": {
                            "type": "string",
                            "description": "Identification value of the type field."
                          },
                          "score": {
                            "type": "integer",
                            "description": "The score assigned to the endpoint."
                          },
                          "norm_risk_score": {
                            "type": "integer",
                            "description": "Normalization of the risk score.",
                            "minimum": 0,
                            "maximum": 1000,
                            "example": 20
                          },
                          "risk_level": {
                            "type": "string",
                            "enum": [
                              "LOW",
                              "MED",
                              "HIGH"
                            ],
                            "description": "The risk level.",
                            "example": "LOW"
                          },
                          "reasons": {
                            "type": "array",
                            "description": "Details describing when and which incident name affected the endpoint score.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "date created": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "points": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": [
                        {
                          "type": "host",
                          "id": "host1",
                          "score": 95,
                          "reasons": [
                            {
                              "date created": "2023-01-26",
                              "description": "'Kernel Privilege Escalation' along with 4 other alerts generated by XDR Analytics BIOC, XDR Analytics and XDR Agent detected on 3 hosts involving 3 users",
                              "severity": "SEV_040_HIGH",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "host",
                          "id": "host4",
                          "score": 95,
                          "reasons": [
                            {
                              "date created": "2023-01-26",
                              "description": "'Kernel Privilege Escalation' along with 4 other alerts generated by XDR Analytics BIOC, XDR Analytics and XDR Agent detected on 3 hosts involving 3 users",
                              "severity": "SEV_040_HIGH",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "host",
                          "id": "host3",
                          "score": 95,
                          "reasons": [
                            {
                              "date created": "2023-01-31",
                              "description": "'Encoded VBScript executed' generated by XDR BIOC detected on host host3 involving user acme1_9fa235",
                              "severity": "SEV_050_CRITICAL",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        },
                        {
                          "type": "host",
                          "id": "host6",
                          "score": 0,
                          "reasons": []
                        }
                      ]
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        {
                          "type": "host",
                          "id": "host1",
                          "score": 100,
                          "norm_risk_score": 800,
                          "risk_level": "HIGH",
                          "reasons": [
                            {
                              "date created": "2023-01-26",
                              "description": "'Kernel Privilege Escalation' along with 4 other alerts generated by XDR Analytics BIOC, XDR Analytics and XDR Agent detected on 3 hosts involving 3 users",
                              "severity": "SEV_040_HIGH",
                              "status": "STATUS_010_NEW",
                              "points": 95
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/file_retrieval": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Retrieve File",
        "description": "Retrieve files from selected endpoints. You can retrieve up to 20 files, from no more than 10 endpoints.\n- Response is concatenated using AND condition (OR is not supported).\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-endpoints-file_retrieval",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "Identifies the field the filter must match:\n- `endpoint_id_list`"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- 'endpoint_id_list'"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match. Valid keywords:\n- 'endpoint_id_list': List of strings.",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "files": {
                        "type": "object",
                        "description": "One of the operating system types must be included.",
                        "properties": {
                          "windows": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "linux": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "macos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "Incident ID. When included in the request, the Retrieve File action will appear in the Cortex XDR Incident View Timeline tab."
                      }
                    },
                    "required": [
                      "filters",
                      "files"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID 1>",
                            "<endpoint ID 2>",
                            "<endpoint ID 3>"
                          ]
                        }
                      ],
                      "files": {
                        "windows": [
                          "C:\\<file path>\\test.txt"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "ID of action to retrieve files from selected endpoints.\nResponse only indicates the request was successfully sent to the endpoint. To track if the file was retrieved successfully either: in the Cortex XDR console, navigate to Response > Action Center > Isolation and search for the action ID. Make sure the Action ID field is selected in the table Layout settings by selecting the three vertical dots.\nTo view the file, send a File Retrieval Details request."
                        },
                        "status": {
                          "type": "string"
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters."
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API."
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API."
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors."
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/endpoints/isolate": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Isolate Endpoints",
        "description": "Isolate one or more endpoints in a single request. Request is limited to 1000 endpoints.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-endpoints-isolate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Note: You can send a request with either `endpoint_id` for isolating one endpoint or `filters` for isolating more than one endpoint. You cannot use both parameters in the same call.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filtered fields for isolating a number of endpoints at once.\nNote: Only required if isolating more than one endpoint.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id_list"
                              ],
                              "description": "Identifies a list the filters match. Filters are\nbased on the following keywords:\n- `endpoint_id_list`: List of endpoint IDs."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id_list` —List of strings"
                            },
                            "value": {
                              "type": "array",
                              "description": "Value that this filter must match. Valid keywords:\n- `endpoint_id_list`: List of strings",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "endpoint_id": {
                        "type": "string",
                        "description": "Identifies the endpoint to isolate.\nNote: Only required if isolating one endpoint."
                      },
                      "incident_id": {
                        "type": "string",
                        "description": "The incident ID.\nWhen included in the request, the **Isolate Endpoints action** will appear in the Cortex XDR Incident ViewTimeline tab."
                      }
                    },
                    "required": [
                      "endpoint_id"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID 1>",
                            "<endpoint ID 2>",
                            "<endpoint ID 3>"
                          ]
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Isolate one endpoint": {
                  "value": {
                    "request_data": {
                      "endpoint_id": "<endpoint ID>"
                    }
                  }
                },
                "Isolate more than one endpoint": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "endpoint_id_list",
                          "operator": "in",
                          "value": [
                            "<endpoint ID 1>",
                            "<endpoint ID 2>",
                            "<endpoint ID 3>"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "action_id": {
                          "type": "string",
                          "description": "Action ID to scan selected endpoints.\nThe response only indicates the request was successfully sent to the endpoint. To track if the isolation succeeded either:\n- In the Cortex XDR console, navigate to **Response** > **Action Center** > **Isolation** and search for\nthe action ID. Make sure the Action ID field is\nselected in the table Layout settings by selecting\nthe vertical elipses.\n- Send a **Get Action Status** request."
                        },
                        "endpoints_count": {
                          "type": "string",
                          "description": "Number of endpoints included in the request."
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "action_id": "<action ID>",
                        "status": "1",
                        "endpoints_count": "673"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON."
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, ID, or other invalid authentication parameters."
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API."
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API."
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors."
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/audits/agents_reports": {
      "post": {
        "tags": [
          "Audit Log"
        ],
        "summary": "Get Audit Agent Report",
        "description": "Get agent event reports.\n- Response is concatenated using AND condition (OR is not supported).\n- Maximum result set size is 100.\n- Offset is the zero-based number of incidents from the start of the result set.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-audits-agents_reports",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "You can send a request to retrieve either all or filtered results.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "endpoint_id",
                                "endpoint_name",
                                "type",
                                "sub_type",
                                "result",
                                "timestamp",
                                "domain",
                                "xdr_version",
                                "category",
                                "trapsversion"
                              ],
                              "description": "Identifies a list. Filters are based on the\nfollowing keywords:\n- `endpoint_id`: The endpoint ID.\n- `endpoint_name`: The endpoint name.\n- `type`: Type of report.\n- `sub_type`: Subtype of report.\n- `result`: Result type.\n- `timestamp`: Report timestamp.\n- `domain`: Domain of the agent.\n- `xdr_version`: XDR version.\n- `category`: Type of event category.\n- `timestamp`: Integer in timestamp epoch\nmilliseconds"
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "in",
                                "gte",
                                "lte"
                              ],
                              "description": "identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`in`\n- `endpoint_id`, `endpoint_name`, `type`, `sub_type`, `result`, `domain`, `xdr_version`, `category`: List of strings\n`gte` / `lte`\n- `timestamp`"
                            },
                            "value": {
                              "description": "Value that this filter must match:\n- `timestamp`: Integer representing the number of milliseconds after the Unix epoch, UTC timezone.\n- All other fields require a string value. In the case of `in` operator, the value is a list of possible values enclosed in square brackets.\n- `category`: Permitted values are: `status`, `monitoring`, or `audit`.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the starting offset within the query result set from which you want agent reports returned.\nReports are returned as a zero-based list. Any report indexed less than this value is not returned in the final result set and defaults to zero."
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the end offset within the result set after which you do not want agent reports returned.\nReports in the agent report list that are indexed higher than this value are not returned in the final results set. Defaults to 100, which returns all reports to the end ofthe list.",
                        "default": 100
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "type",
                              "category",
                              "trapsversion",
                              "timestamp",
                              "domain"
                            ],
                            "description": "The field you want to sort by."
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "Whether to sort in ascending or descending order.",
                            "default": "desc"
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "trapsversion",
                          "operator": "in",
                          "value": [
                            "<version value>",
                            "<version value>"
                          ]
                        },
                        {
                          "field": "timestamp",
                          "operator": "gte",
                          "value": 0
                        },
                        {
                          "field": "domain",
                          "operator": "in",
                          "value": [
                            "WORKGROUP"
                          ]
                        }
                      ],
                      "sort": {
                        "field": "timestamp",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Request all results": {
                  "value": {
                    "request_data": {}
                  }
                },
                "Request filtered results": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "trapsversion",
                          "operator": "in",
                          "value": [
                            "<version value>",
                            "<version value>"
                          ]
                        },
                        {
                          "field": "timestamp",
                          "operator": "gte",
                          "value": 0
                        },
                        {
                          "field": "domain",
                          "operator": "in",
                          "value": [
                            "WORKGROUP"
                          ]
                        }
                      ],
                      "sort": {
                        "field": "timestamp",
                        "keyword": "asc"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Number of total results of this filter without paging."
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "Number of returned items."
                        },
                        "data": {
                          "type": "array",
                          "description": "List of audit items.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "TIMESTAMP": {
                                "type": "number",
                                "description": "Epoch time in milliseconds, UTC timezone.",
                                "format": "float"
                              },
                              "RECEIVEDTIME": {
                                "type": "number",
                                "description": "Epoch time in milliseconds, UTC timezone."
                              },
                              "ENDPOINTID": {
                                "type": "string"
                              },
                              "ENDPOINTNAME": {
                                "type": "string"
                              },
                              "DOMAIN": {
                                "type": "string"
                              },
                              "TRAPSVERSION": {
                                "type": "string"
                              },
                              "CATEGORY": {
                                "type": "string"
                              },
                              "TYPE": {
                                "type": "string"
                              },
                              "SUBTYPE": {
                                "type": "string"
                              },
                              "RESULT": {
                                "type": "string"
                              },
                              "REASON": {
                                "type": "string"
                              },
                              "DESCRIPTION": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 10,
                        "result_count": 1,
                        "data": [
                          {
                            "TIMESTAMP": 1572427859369.953,
                            "RECEIVEDTIME": 1572427936626.636,
                            "ENDPOINTID": "<endpoint ID>",
                            "ENDPOINTNAME": "<endpoint name>",
                            "DOMAIN": "WORKGROUP",
                            "TRAPSVERSION": "<version>",
                            "CATEGORY": "Status",
                            "TYPE": "Agent Status",
                            "SUBTYPE": "Fully Protected",
                            "RESULT": null,
                            "REASON": null,
                            "DESCRIPTION": "DESKTOP-4LC01UI is fully protected"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, ID, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not\nhave the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_external_service": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get External Service",
        "description": "Get service details according to the service ID. You can send up to 20 IDs.\n\nRequired license: **Cortex XSIAM Enterprise**, **Cortex XSIAM Enterprise Plus** or **Cortex XSIAM Premium**",
        "operationId": "post-public_api-v1-assets-get_external_service",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "service_id_list": {
                        "type": "array",
                        "description": "Represents the service ID you want to get details for.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "service_id_list": [
                        "<service_ID>"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "JSON object containing the query result.",
                      "properties": {
                        "details": {
                          "type": "array",
                          "description": "Service details according to the service ID.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "service_id": {
                                "type": "string"
                              },
                              "service_name": {
                                "type": "string"
                              },
                              "service_type": {
                                "type": "string"
                              },
                              "ip_address": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "domain": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "externally_detected_providers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "is_active": {
                                "type": "string"
                              },
                              "first_observed": {
                                "type": "integer"
                              },
                              "last_observed": {
                                "type": "integer"
                              },
                              "port": {
                                "type": "integer"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "active_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "inactive_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "discovery_type": {
                                "type": "string"
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "externally_inferred_vulnerability_score": {
                                "nullable": true
                              },
                              "externally_inferred_cves": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "details": {
                                "type": "object",
                                "properties": {
                                  "serviceKey": {
                                    "type": "string"
                                  },
                                  "serviceKeyType": {
                                    "type": "string"
                                  },
                                  "businessUnits": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "providerDetails": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "firstObserved": {
                                          "type": "integer"
                                        },
                                        "lastObserved": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "certificates": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "certificate": {
                                          "type": "object",
                                          "properties": {
                                            "issuer": {
                                              "type": "string"
                                            },
                                            "issuerAlternativeNames": {
                                              "type": "string"
                                            },
                                            "issuerCountry": {
                                              "type": "string"
                                            },
                                            "issuerEmail": {
                                              "nullable": true
                                            },
                                            "issuerLocality": {
                                              "type": "string"
                                            },
                                            "issuerName": {
                                              "type": "string"
                                            },
                                            "issuerOrg": {
                                              "type": "string"
                                            },
                                            "formattedIssuerOrg": {
                                              "type": "string"
                                            },
                                            "issuerOrgUnit": {
                                              "type": "string"
                                            },
                                            "issuerState": {
                                              "type": "string"
                                            },
                                            "publicKey": {
                                              "type": "string"
                                            },
                                            "publicKeyAlgorithm": {
                                              "type": "string"
                                            },
                                            "publicKeyRsaExponent": {
                                              "type": "integer"
                                            },
                                            "signatureAlgorithm": {
                                              "type": "string"
                                            },
                                            "subject": {
                                              "type": "string"
                                            },
                                            "subjectAlternativeNames": {
                                              "type": "string"
                                            },
                                            "subjectCountry": {
                                              "type": "string"
                                            },
                                            "subjectEmail": {
                                              "type": "string"
                                            },
                                            "subjectLocality": {
                                              "type": "string"
                                            },
                                            "subjectName": {
                                              "type": "string"
                                            },
                                            "subjectOrg": {
                                              "type": "string"
                                            },
                                            "subjectOrgUnit": {
                                              "type": "string"
                                            },
                                            "subjectState": {
                                              "type": "string"
                                            },
                                            "serialNumber": {
                                              "type": "string"
                                            },
                                            "validNotBefore": {
                                              "type": "integer"
                                            },
                                            "validNotAfter": {
                                              "type": "integer"
                                            },
                                            "version": {
                                              "type": "string"
                                            },
                                            "publicKeyBits": {
                                              "type": "integer"
                                            },
                                            "publicKeyModulus": {
                                              "type": "string"
                                            },
                                            "publicKeySpki": {
                                              "type": "string"
                                            },
                                            "sha1Fingerprint": {
                                              "type": "string"
                                            },
                                            "sha256Fingerprint": {
                                              "type": "string"
                                            },
                                            "md5Fingerprint": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "activityStatus": {
                                          "type": "string"
                                        },
                                        "lastObserved": {
                                          "type": "integer"
                                        },
                                        "firstObserved": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "domains": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "ips": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "ip": {
                                          "type": "string"
                                        },
                                        "protocol": {
                                          "type": "string"
                                        },
                                        "provider": {
                                          "type": "string"
                                        },
                                        "geolocation": {
                                          "type": "object",
                                          "properties": {
                                            "latitude": {
                                              "type": "integer"
                                            },
                                            "longitude": {
                                              "type": "integer"
                                            },
                                            "countryCode": {
                                              "type": "string"
                                            },
                                            "city": {
                                              "type": "string"
                                            },
                                            "regionCode": {
                                              "type": "string"
                                            },
                                            "timeZone": {
                                              "nullable": true
                                            }
                                          }
                                        },
                                        "activityStatus": {
                                          "type": "string"
                                        },
                                        "lastObserved": {
                                          "type": "integer"
                                        },
                                        "firstObserved": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "classifications": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "activityStatus": {
                                          "type": "string"
                                        },
                                        "values": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "jsonValue": {
                                                "type": "string"
                                              },
                                              "firstObserved": {
                                                "type": "integer"
                                              },
                                              "lastObserved": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "firstObserved": {
                                          "type": "integer"
                                        },
                                        "lastObserved": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "tlsVersions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "tlsVersion": {
                                          "type": "string"
                                        },
                                        "cipherSuite": {
                                          "type": "string"
                                        },
                                        "firstObserved": {
                                          "type": "integer"
                                        },
                                        "lastObserved": {
                                          "type": "integer"
                                        },
                                        "activityStatus": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "inferredCvesObserved": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "enrichedObservationSource": {
                                    "type": "string"
                                  },
                                  "ip_ranges": {
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "details": [
                          {
                            "service_id": "<service_id>",
                            "service_name": "HTTP Server",
                            "service_type": "HttpServer",
                            "ip_address": [
                              "<ip_address>"
                            ],
                            "domain": [],
                            "externally_detected_providers": [
                              "Other"
                            ],
                            "is_active": "Active",
                            "first_observed": 1646698500000,
                            "last_observed": 1649500560000,
                            "port": 9443,
                            "protocol": "TCP",
                            "active_classifications": [
                              "LongExpirationCertificate",
                              "HttpServer",
                              "ShortKeyCertificate",
                              "InsecureSignatureCertificate",
                              "ServerSoftware"
                            ],
                            "inactive_classifications": [],
                            "discovery_type": "ColocatedOnIp",
                            "business_units": [
                              "Test"
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": [],
                            "details": {
                              "serviceKey": "<service_key>",
                              "serviceKeyType": "IP",
                              "businessUnits": [
                                {
                                  "name": "Test"
                                }
                              ],
                              "providerDetails": [
                                {
                                  "name": "Other",
                                  "firstObserved": 1646698531000,
                                  "lastObserved": 1649500589000
                                }
                              ],
                              "certificates": [
                                {
                                  "certificate": {
                                    "issuer": "<issuer>",
                                    "issuerAlternativeNames": "",
                                    "issuerCountry": "<country>",
                                    "issuerEmail": null,
                                    "issuerLocality": "<locality>",
                                    "issuerName": "<name>",
                                    "issuerOrg": "<org>",
                                    "formattedIssuerOrg": "S<formatted_org>",
                                    "issuerOrgUnit": "IT Department",
                                    "issuerState": "<state>",
                                    "publicKey": "<public_key",
                                    "publicKeyAlgorithm": "RSA",
                                    "publicKeyRsaExponent": 65537,
                                    "signatureAlgorithm": "<algorithm>",
                                    "subject": "<subject>",
                                    "subjectAlternativeNames": "",
                                    "subjectCountry": "<country>",
                                    "subjectEmail": "test@test.com,test1@test.com",
                                    "subjectLocality": "<locality>",
                                    "subjectName": "<name>",
                                    "subjectOrg": "<org>",
                                    "subjectOrgUnit": "IT Department",
                                    "subjectState": "<state>",
                                    "serialNumber": "<serial_number>",
                                    "validNotBefore": 1516280668000,
                                    "validNotAfter": 1668924913000,
                                    "version": "3",
                                    "publicKeyBits": 2048,
                                    "publicKeyModulus": "<public_key>",
                                    "publicKeySpki": "<key>",
                                    "sha1Fingerprint": "<fingerprint>",
                                    "sha256Fingerprint": "<fingerprint>",
                                    "md5Fingerprint": "<fingerprint>"
                                  },
                                  "activityStatus": "Active",
                                  "lastObserved": 1649500589000,
                                  "firstObserved": 1646698531000
                                }
                              ],
                              "domains": [],
                              "ips": [
                                {
                                  "ip": "192.158.1.38",
                                  "protocol": "TCP",
                                  "provider": "Other",
                                  "geolocation": {
                                    "latitude": 37.4419,
                                    "longitude": 122.143,
                                    "countryCode": "<country>",
                                    "city": "<city>",
                                    "regionCode": "<region>",
                                    "timeZone": null
                                  },
                                  "activityStatus": "Active",
                                  "lastObserved": 1649500589000,
                                  "firstObserved": 1646698531000
                                }
                              ],
                              "classifications": [
                                {
                                  "name": "ShortKeyCertificate",
                                  "activityStatus": "Active",
                                  "values": [
                                    {
                                      "jsonValue": "{\"validWhenScanned\":true}",
                                      "firstObserved": 1646698531000,
                                      "lastObserved": 1649500589000
                                    }
                                  ],
                                  "firstObserved": 1646698500000,
                                  "lastObserved": 1649500560000
                                },
                                {
                                  "name": "LongExpirationCertificate",
                                  "activityStatus": "Active",
                                  "values": [
                                    {
                                      "jsonValue": "{\"validWhenScanned\":true}",
                                      "firstObserved": 1646698531000,
                                      "lastObserved": 1649500589000
                                    }
                                  ],
                                  "firstObserved": 1646698500000,
                                  "lastObserved": 1649500560000
                                },
                                {
                                  "name": "HttpServer",
                                  "activityStatus": "Active",
                                  "values": [
                                    {
                                      "jsonValue": "{<value>}",
                                      "firstObserved": 1649500589000,
                                      "lastObserved": 1649500589000
                                    }
                                  ],
                                  "firstObserved": 1646698500000,
                                  "lastObserved": 1649500560000
                                },
                                {
                                  "name": "InsecureSignatureCertificate",
                                  "activityStatus": "Active",
                                  "values": [
                                    {
                                      "jsonValue": "{\"validWhenScanned\":true}",
                                      "firstObserved": 1646698531000,
                                      "lastObserved": 1649500589000
                                    }
                                  ],
                                  "firstObserved": 1646698500000,
                                  "lastObserved": 1649500560000
                                },
                                {
                                  "name": "ServerSoftware",
                                  "activityStatus": "Active",
                                  "values": [
                                    {
                                      "jsonValue": "{\"serverSoftware\":\"HTTP_Server\"}",
                                      "firstObserved": 1646698531000,
                                      "lastObserved": 1649500589000
                                    }
                                  ],
                                  "firstObserved": 1646698500000,
                                  "lastObserved": 1649500560000
                                }
                              ],
                              "tlsVersions": [
                                {
                                  "tlsVersion": "TLSv1",
                                  "cipherSuite": "TLS_RSA",
                                  "firstObserved": 1646698531000,
                                  "lastObserved": 1649500589000,
                                  "activityStatus": "Active"
                                }
                              ],
                              "inferredCvesObserved": [],
                              "enrichedObservationSource": "CLOUD",
                              "ip_ranges": {}
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_external_services": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get All Services",
        "description": "Get a complete or filtered list of all your external services.\n\nThe maximum result limit is 500.\n\nRequired License: **Cortex XSIAM Enterprise**, **Cortex XSIAM Enterprise Plus** or **Cortex XSIAM Premium**",
        "operationId": "post-public_api-v1-assets-get_external_services",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "api-key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "api-key-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "object",
                        "description": "An array of filter fields. ",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "active_classifications",
                              "business_units_list",
                              "discovery_type",
                              "domain",
                              "externally_detected_providers",
                              "externally_inferred_cves",
                              "inactive_classifications",
                              "ip_address",
                              "ipv6_address",
                              "is_active",
                              "protocol",
                              "service_name",
                              "service_type",
                              "service_type_list",
                              "tags"
                            ],
                            "description": "String that identifies the service field the filter is matching. Filters are based on the following case-sensitive keywords:\r\n\r\n- active_classifications\r\n- business_units_list\r\n- discovery_type\r\n- domain\r\n- externally_detected_providers\r\n- externally_inferred_cves\r\n- inactive_classifications\r\n- ip_address\r\n- ipv6_address\r\n- is_active\r\n- protocol\r\n- service_name\r\n- service_type\r\n- service_type_list\r\n- tags"
                          },
                          "operator": {
                            "type": "string",
                            "enum": [
                              "contains",
                              "not_contains",
                              "eq",
                              "neq",
                              "in"
                            ],
                            "description": "String that identifies the comparison operator you want to use for this filter. Valid keywords and values are:\r\n- **contains** / **not_contains**— use with `externally_detected_providers`, `domain`, `externally_inferred_cves`, `active_classifications`, `inactive_classifications`, service_name, `service_type`, `protocol`\r\n- **eq** / **neq**—  use with `service_name`, `service_type`, `protocol`, `ip_address`\r\n- **in** — use with `is_active`, `discovery_type`, `business_units_list`, `tags` "
                          },
                          "value": {
                            "description": "Value that this filter must match. The contents of this field will differ depending on the services field that you specified for this filter:\r\n- active_classifications — String\r\n- business_units_list — String or list of strings in the format \"BU name\" or \"BU:BU name\", for example “Acme & Co, Inc.” or “BU:Acme & Co, Inc.”\r\n- discovery_type — String. Values are: `colocated_on_ip`, `directly_discovered`, `unknown`.\r\n- domain —  String\r\n- externally_detected_providers — String \r\n- externally_inferred_cves — String\r\n- inactive_classifications — String\r\n- ip_address — String\r\n- ipv6_address— String\r\n- is_active — String. Values are:`yes`, `no`\r\n- protocol — string \r\n- service_name —  String\r\n- service_type —  String\r\n- service_type_list —  String\r\n- tags — List of strings indicating the tags to filter on in the format `\"tag-family:tag-name\"`, for example `\"AR:registered to you\"`.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        }
                      },
                      "vulnerability_test_results": {
                        "type": "boolean",
                        "enum": [
                          true
                        ],
                        "description": "Use this field with the value `true` to get vulnerability test results for the last 14 days for each service.\r\nUsing this field will slow down the endpoint."
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "An integer representing the start offset index of results.",
                        "default": 0
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "An integer representing the start offset index of results. Use this field to specify the number of results on a page when using page token pagination.",
                        "default": 5000
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "keyword": {
                            "type": "string",
                            "description": "Can be either ASC (ascending order) or DESC (descending order). Default is ASC. Values are case sensitive."
                          },
                          "field": {
                            "type": "string",
                            "description": "Values are: \r\n- service_name \r\n- first_observed \r\n- last_observed \r\nBy default, case-sensitive, sort is defined as service_name.\r\n"
                          }
                        }
                      },
                      "use_page_token": {
                        "type": "boolean",
                        "description": "Use `\"use_page_token\":true` in the initial request to paginate the response data.</br> \r\nSort is not supported when using the `use_page_token`/`next_page_token` fields."
                      },
                      "next_page_token": {
                        "type": "string",
                        "description": "If `\"use_page_token\":true` was included in the initial request, the response for that request will include a page token. \r\nUse `\"next_page_token\":\"string\"` to pass that page token into the next request to paginate the next set of data."
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "discovery_type",
                          "operator": "in",
                          "value": [
                            "colocated_on_ip"
                          ]
                        }
                      ],
                      "use_page_token": true
                    }
                  }
                }
              },
              "examples": {
                "Example with page token": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "string",
                          "operator": "string",
                          "value": "string"
                        }
                      ],
                      "use_page_token": true
                    }
                  }
                },
                "Example with sorted resulted": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "discovery_type",
                          "operator": "in",
                          "value": [
                            "colocated_on_ip",
                            "directly_discovery"
                          ]
                        },
                        {
                          "field": "service_name",
                          "operator": "contains",
                          "value": "apache"
                        }
                      ],
                      "search_from": 0,
                      "search_to": 500
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "result_count": {
                          "type": "integer"
                        },
                        "external_services": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "service_id": {
                                "type": "string"
                              },
                              "service_name": {
                                "type": "string"
                              },
                              "service_type": {
                                "type": "string"
                              },
                              "ip_address": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "domain": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "externally_detected_providers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "is_active": {
                                "type": "string"
                              },
                              "first_observed": {
                                "type": "integer"
                              },
                              "last_observed": {
                                "type": "integer"
                              },
                              "port": {
                                "type": "integer"
                              },
                              "protocol": {
                                "type": "string"
                              },
                              "active_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "inactive_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "discovery_type": {
                                "type": "string"
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "externally_inferred_vulnerability_score": {
                                "type": "string"
                              },
                              "externally_inferred_cves": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "tls_versions": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "inferred_cves_observed": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "cloud_management_status": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 2,
                        "result_count": 2,
                        "external_services": [
                          {
                            "service_id": "<service_id>",
                            "service_name": "Server",
                            "service_type": "AServer",
                            "ip_address": [
                              "<ip_address>"
                            ],
                            "domain": [],
                            "externally_detected_providers": [
                              "On Prem"
                            ],
                            "is_active": "Active",
                            "first_observed": 1647152340000,
                            "last_observed": 1649499420000,
                            "port": 8009,
                            "protocol": "TCP",
                            "active_classifications": [
                              "AServer"
                            ],
                            "inactive_classifications": [],
                            "discovery_type": "DirectlyDiscovered",
                            "business_units": [
                              [
                                {
                                  "creation_time": 1684197662636,
                                  "family": "business_units",
                                  "family_alias": "BU",
                                  "id": "BU:<id>",
                                  "name": "Business Unit 1",
                                  "parent_id": null,
                                  "update_time": 1684197662636
                                }
                              ]
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": [],
                            "tls_versions": [],
                            "inferred_cves_observed": []
                          },
                          {
                            "service_id": "<service_id>",
                            "service_name": "HTTP Server",
                            "service_type": "HttpServer",
                            "ip_address": [
                              "<ip_address>"
                            ],
                            "domain": [
                              "email.test.org"
                            ],
                            "externally_detected_providers": [
                              "Demo"
                            ],
                            "is_active": "Inactive",
                            "first_observed": 1647087420000,
                            "last_observed": 1647087420000,
                            "port": 80,
                            "protocol": "TCP",
                            "active_classifications": [],
                            "inactive_classifications": [
                              "HttpServer",
                              "NginxWebServer",
                              "ServerSoftware"
                            ],
                            "discovery_type": "ColocatedOnIp",
                            "business_units": [
                              "Test - Import-Export"
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": [],
                            "cloud_management_status": null
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "total_count": 0,
                        "result_count": 0,
                        "external_services": [
                          {
                            "service_id": "string",
                            "service_name": "string",
                            "service_type": "string",
                            "ip_address": [
                              "string"
                            ],
                            "domain": [
                              "string"
                            ],
                            "externally_detected_providers": [
                              "string"
                            ],
                            "is_active": "string",
                            "first_observed": 0,
                            "last_observed": 0,
                            "port": 0,
                            "protocol": "string",
                            "active_classifications": [
                              "string"
                            ],
                            "inactive_classifications": [
                              "string"
                            ],
                            "discovery_type": "string",
                            "business_units": [
                              "string"
                            ],
                            "externally_inferred_vulnerability_score": "null",
                            "externally_inferred_cves": [
                              {}
                            ],
                            "tls_versions": [
                              {}
                            ],
                            "inferred_cves_observed": [
                              {}
                            ],
                            "cloud_management_status": null
                          }
                        ]
                      }
                    }
                  },
                  "Example 2": {
                    "value": {
                      "reply": {
                        "total_count": 2,
                        "result_count": 2,
                        "external_services": [
                          {
                            "service_id": "<service_id>",
                            "service_name": "Server",
                            "service_type": "AServer",
                            "ip_address": [
                              "<ip_address>"
                            ],
                            "domain": [],
                            "externally_detected_providers": [
                              "On Prem"
                            ],
                            "is_active": "Active",
                            "first_observed": 1647152340000,
                            "last_observed": 1649499420000,
                            "port": 8009,
                            "protocol": "TCP",
                            "active_classifications": [
                              "AServer"
                            ],
                            "inactive_classifications": [],
                            "discovery_type": "DirectlyDiscovered",
                            "business_units": [
                              [
                                {
                                  "creation_time": 1684197662636,
                                  "family": "business_units",
                                  "family_alias": "BU",
                                  "id": "BU:<id>",
                                  "name": "Business Unit 1",
                                  "parent_id": null,
                                  "update_time": 1684197662636
                                }
                              ]
                            ],
                            "externally_inferred_vulnerability_score": "null",
                            "externally_inferred_cves": [],
                            "tls_versions": [],
                            "inferred_cves_observed": []
                          },
                          {
                            "service_id": "<service_id>",
                            "service_name": "HTTP Server",
                            "service_type": "HttpServer",
                            "ip_address": "ip_address",
                            "domain": [
                              "email.test.org"
                            ],
                            "externally_detected_providers": [
                              "Demo"
                            ],
                            "is_active": "Inactive",
                            "first_observed": 1647087420000,
                            "last_observed": 1647087420000,
                            "port": 80,
                            "protocol": "TCP",
                            "active_classifications": [],
                            "inactive_classifications": [
                              "HttpServer",
                              "NginxWebServer",
                              "ServerSoftware"
                            ],
                            "discovery_type": "ColocatedOnIp",
                            "business_units": [
                              "Test - Import-Export"
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": [],
                            "cloud_management_status": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters."
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_assets_internet_exposure": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get all Internet Exposures",
        "description": "Get a list of all your Internet exposure filtered by business units, externally detected providers, externally inferred CVEs, mac addresses, names, IP addresses, whether it has an XDR agent, whether it has active external services, and type.\n\nThe maximum result limit is 500 assets.\n\nNote: You can send a request to retrieve either all or filtered results.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-assets-get_assets_internet_exposure",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\n\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "business_units",
                                "externally_detected_providers",
                                "externally_inferred_cves",
                                "mac_addresses",
                                "name",
                                "ip_address",
                                "has_xdr_agent",
                                "has_active_external_services",
                                "type"
                              ],
                              "description": "Identifies the assets field the filter is matching."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "contains",
                                "not_contains",
                                "eq",
                                "neq",
                                "in"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter. Valid keywords and values are:\n`contains` / `not_contains`\n- `business_units`, `externally_detected_providers`, `externally_inferred_cves`, `mac_address`, `name`: String\n`eq` / `neq`\n- `name`, `ip_address`: String\n`in`\n- `has_xdr_agent`: List of strings. Permitted values are: `yes`, `no`, `unknown`, `n/a`.\n- `has_active_external_services`: List of strings. Permitted values are: `yes`, `no`, `unknown`.\n- `type`: List of strings. Permitted values are: `certificate`, `cloud_compute_instance`, `on_prem`, `domain`, `unassociated_responsive_ip`."
                            },
                            "value": {
                              "description": "Value that this filter must match. Valid keywords:\n- `business_units`, `externally_detected_providers`, `externally_inferred_cves`, `mac_address`, `name`, `ip_address`: String\n- `has_xdr_agent`: List of strings. Permitted values are: `yes`, `no`, `unknown`, `n/a`.\n- `has_active_external_services`: List of strings. Permitted values are: `yes`, `no`, `unknown`.\n- `type`: List of strings. Permitted values are: `certificate`, `cloud_compute_instance`, `on_prem`, `domain`, `unassociated_responsive_ip`.",
                              "oneOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                {
                                  "type": "string"
                                }
                              ]
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "Represents the start offset index of results.",
                        "default": 0
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "Represents the end offset index of results.",
                        "default": 500
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "name",
                              "first_observed",
                              "last_observed"
                            ],
                            "description": "The field you want to sort by. Case-sensitive.",
                            "default": "name"
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "ASC",
                              "DESC"
                            ],
                            "description": "Whether you want to sort in ascending or descending order.",
                            "default": "ASC"
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "has_xdr_agent",
                          "operator": "in",
                          "value": [
                            "n/a",
                            false,
                            true
                          ]
                        },
                        {
                          "field": "has_active_external_services",
                          "operator": "in",
                          "value": [
                            false
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 500,
                      "sort": {
                        "field": "last_observed",
                        "keyword": "desc"
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "has_xdr_agent",
                          "operator": "in",
                          "value": [
                            "n/a",
                            "false",
                            "true"
                          ]
                        },
                        {
                          "field": "has_active_external_services",
                          "operator": "in",
                          "value": [
                            "false"
                          ]
                        }
                      ],
                      "search_from": 0,
                      "search_to": 500,
                      "sort": {
                        "field": "last_observed",
                        "keyword": "DESC"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "Total number of possible results.\nNote: The `total_count` value is limited to 9,999. If the filter returns 10,000 results or more, the value will be 9,999, but you can still use paging until the data finishes.",
                          "maximum": 9999
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "The number of Internet exposure assets actually returned as results."
                        },
                        "assets_internet_exposure": {
                          "type": "array",
                          "description": "A list of Internet exposure assets.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "asm_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "asset_type": {
                                "type": "string"
                              },
                              "cloud_provider": {
                                "nullable": true
                              },
                              "externally_detected_providers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "region": {
                                "nullable": true
                              },
                              "ips": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "management_status": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "iot_model": {
                                "nullable": true
                              },
                              "iot_category": {
                                "nullable": true
                              },
                              "iot_profile": {
                                "nullable": true
                              },
                              "sensor": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "service_type": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "last_observed": {
                                "type": "integer"
                              },
                              "first_observed": {
                                "type": "integer"
                              },
                              "has_active_externally_services": {
                                "type": "boolean"
                              },
                              "has_xdr_agent": {
                                "type": "string"
                              },
                              "certificate_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "certificate_issuer": {
                                "nullable": true
                              },
                              "certificate_algorithm": {
                                "nullable": true
                              },
                              "mac_addresses": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "cloud_id": {
                                "nullable": true
                              },
                              "ip_ranges": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "domain_resolves": {
                                "type": "boolean"
                              },
                              "operation_system": {
                                "nullable": true
                              },
                              "asm_va_score": {
                                "nullable": true
                              },
                              "externally_inferred_cves": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "agent_id": {
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 2,
                        "result_count": 2,
                        "assets_internet_exposure": [
                          {
                            "asm_ids": [
                              "<id>"
                            ],
                            "name": "acme.com",
                            "asset_type": "DOMAIN",
                            "cloud_provider": null,
                            "externally_detected_providers": [
                              "Other"
                            ],
                            "region": null,
                            "ips": [],
                            "business_units": [
                              "Test"
                            ],
                            "management_status": [],
                            "iot_model": null,
                            "iot_category": null,
                            "iot_profile": null,
                            "sensor": [
                              "XPANSE"
                            ],
                            "service_type": [],
                            "last_observed": 1649588579189,
                            "first_observed": 1642047685969,
                            "has_active_externally_services": false,
                            "has_xdr_agent": "NA",
                            "certificate_classifications": [],
                            "certificate_issuer": null,
                            "certificate_algorithm": null,
                            "mac_addresses": [],
                            "cloud_id": null,
                            "ip_ranges": [],
                            "domain_resolves": true,
                            "operation_system": null,
                            "asm_va_score": null,
                            "externally_inferred_cves": [],
                            "agent_id": null
                          },
                          {
                            "asm_ids": [
                              "<id>"
                            ],
                            "name": "test.acme.com",
                            "asset_type": "DOMAIN",
                            "cloud_provider": null,
                            "externally_detected_providers": [
                              "Other"
                            ],
                            "region": null,
                            "ips": [],
                            "business_units": [
                              "Test"
                            ],
                            "management_status": [],
                            "iot_model": null,
                            "iot_category": null,
                            "iot_profile": null,
                            "sensor": [
                              "XPANSE"
                            ],
                            "service_type": [],
                            "last_observed": 1649587797490,
                            "first_observed": 1641981118397,
                            "has_active_externally_services": false,
                            "has_xdr_agent": "NA",
                            "certificate_classifications": [],
                            "certificate_issuer": null,
                            "certificate_algorithm": null,
                            "mac_addresses": [],
                            "cloud_id": null,
                            "ip_ranges": [],
                            "domain_resolves": true,
                            "operation_system": null,
                            "asm_va_score": null,
                            "externally_inferred_cves": [],
                            "agent_id": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_asset_internet_exposure": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Internet Exposure",
        "description": "Get Internet exposure asset details according to the asset ID. You can send up to 20 IDs.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-assets-get_asset_internet_exposure",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "asm_id_list": {
                        "type": "array",
                        "description": "Represents the asset ID for which you want to get the details.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "asm_id_list": [
                        "<asset_ID>"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "JSON object containing the query result.",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "description": "Asset details according to the asset ID.",
                      "properties": {
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "asm_ids": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "last_observed": {
                                "type": "integer"
                              },
                              "first_observed": {
                                "type": "integer"
                              },
                              "externally_detected_providers": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "created": {
                                "type": "integer"
                              },
                              "ips": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "active_service_ids": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "all_service_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "active_external_services_types": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "domain": {
                                "nullable": true
                              },
                              "certificate_issuer": {
                                "nullable": true
                              },
                              "certificate_algorithm": {
                                "nullable": true
                              },
                              "certificate_classifications": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "resolves": {
                                "type": "boolean"
                              },
                              "details": {
                                "type": "object",
                                "properties": {
                                  "providerDetails": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "displayName": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "domain": {
                                    "nullable": true
                                  },
                                  "topLevelAssetMapperDomain": {
                                    "nullable": true
                                  },
                                  "domainAssetType": {
                                    "nullable": true
                                  },
                                  "isPaidLevelDomain": {
                                    "type": "boolean"
                                  },
                                  "domainDetails": {
                                    "nullable": true
                                  },
                                  "dnsZone": {
                                    "nullable": true
                                  },
                                  "latestSampledIp": {
                                    "nullable": true
                                  },
                                  "subdomainMetadata": {
                                    "nullable": true
                                  },
                                  "recentIps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "businessUnits": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "certificateDetails": {
                                    "nullable": true
                                  },
                                  "inferredCvesObserved": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "ip_ranges": {
                                    "type": "object",
                                    "properties": {
                                      "<ip_address>": {
                                        "type": "object",
                                        "properties": {
                                          "IP_RANGE_ID": {
                                            "type": "string"
                                          },
                                          "FIRST_IP": {
                                            "type": "string"
                                          },
                                          "LAST_IP": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "external_services": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "serviceType": {
                                      "type": "string"
                                    },
                                    "serviceKey": {
                                      "type": "string"
                                    },
                                    "activityStatus": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "externally_inferred_vulnerability_score": {
                                "nullable": true
                              },
                              "externally_inferred_cves": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "details": [
                          {
                            "asm_ids": "<id>",
                            "name": "<name>",
                            "type": "ResponsiveIP",
                            "last_observed": 1648590706000,
                            "first_observed": 1646738134000,
                            "externally_detected_providers": [
                              "On Prem"
                            ],
                            "created": 1646959543881,
                            "ips": [],
                            "business_units": [
                              "Test"
                            ],
                            "active_service_ids": [],
                            "all_service_ids": [
                              "<id>"
                            ],
                            "active_external_services_types": [],
                            "domain": null,
                            "certificate_issuer": null,
                            "certificate_algorithm": null,
                            "certificate_classifications": [],
                            "resolves": false,
                            "details": {
                              "providerDetails": [
                                {
                                  "name": "OnPrem",
                                  "displayName": "On Prem"
                                }
                              ],
                              "domain": null,
                              "topLevelAssetMapperDomain": null,
                              "domainAssetType": null,
                              "isPaidLevelDomain": false,
                              "domainDetails": null,
                              "dnsZone": null,
                              "latestSampledIp": null,
                              "subdomainMetadata": null,
                              "recentIps": [],
                              "businessUnits": [
                                {
                                  "name": "Test"
                                }
                              ],
                              "certificateDetails": null,
                              "inferredCvesObserved": [],
                              "ip_ranges": {
                                "52.14.147.179": {
                                  "IP_RANGE_ID": "<range>",
                                  "FIRST_IP": "<ip_address>",
                                  "LAST_IP": "<ip_address>"
                                }
                              }
                            },
                            "external_services": [
                              {
                                "serviceType": "SshServer",
                                "serviceKey": "<key>",
                                "activityStatus": "Inactive"
                              }
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": []
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "details": [
                          {
                            "asm_ids": "<id>",
                            "name": "<name>",
                            "type": "ResponsiveIP",
                            "last_observed": 1648590706000,
                            "first_observed": 1646738134000,
                            "externally_detected_providers": [
                              "On Prem"
                            ],
                            "created": 1646959543881,
                            "ips": [],
                            "business_units": [
                              "Test"
                            ],
                            "active_service_ids": [],
                            "all_service_ids": [
                              "<id>"
                            ],
                            "active_external_services_types": [],
                            "domain": null,
                            "certificate_issuer": null,
                            "certificate_algorithm": null,
                            "certificate_classifications": [],
                            "resolves": false,
                            "details": {
                              "providerDetails": [
                                {
                                  "name": "OnPrem",
                                  "displayName": "On Prem"
                                }
                              ],
                              "domain": null,
                              "topLevelAssetMapperDomain": null,
                              "domainAssetType": null,
                              "isPaidLevelDomain": false,
                              "domainDetails": null,
                              "dnsZone": null,
                              "latestSampledIp": null,
                              "subdomainMetadata": null,
                              "recentIps": [],
                              "businessUnits": [
                                {
                                  "name": "Test"
                                }
                              ],
                              "certificateDetails": null,
                              "inferredCvesObserved": [],
                              "ip_ranges": {
                                "52.14.147.179": {
                                  "IP_RANGE_ID": "<range>",
                                  "FIRST_IP": "<ip_address>",
                                  "LAST_IP": "<ip_address>"
                                }
                              }
                            },
                            "external_services": [
                              {
                                "serviceType": "SshServer",
                                "serviceKey": "<key>",
                                "activityStatus": "Inactive"
                              }
                            ],
                            "externally_inferred_vulnerability_score": null,
                            "externally_inferred_cves": []
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_external_ip_address_ranges": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get all External IP Address Ranges",
        "description": "Get a list of all your Internet exposure filtered by business units and organization handles.\n\nThe maximum result limit is 1000 ranges.\n\nNote: You can send a request to retrieve either **all** or **filtered** results.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-assets-get_external_ip_address_ranges",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.\n\nAn empty dictionary returns all results.",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "Array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "business_units",
                                "organization_handles"
                              ],
                              "description": "Identifies the external IP ranges field the filter is matching."
                            },
                            "operator": {
                              "type": "string",
                              "enum": [
                                "contains",
                                "not_contains"
                              ],
                              "description": "Identifies the comparison operator you want to use for this filter."
                            },
                            "value": {
                              "type": "string",
                              "description": "Value that this filter must match."
                            }
                          },
                          "required": [
                            "field",
                            "operator",
                            "value"
                          ]
                        }
                      },
                      "search_from": {
                        "type": "integer",
                        "description": "Represents the start offset index of results.",
                        "default": 0
                      },
                      "search_to": {
                        "type": "integer",
                        "description": "Represents the end offset index of results.",
                        "default": 1000
                      },
                      "sort": {
                        "type": "object",
                        "description": "Identifies the sort order for the result set.",
                        "properties": {
                          "field": {
                            "type": "string",
                            "enum": [
                              "Id",
                              "first_ip",
                              "last_ip"
                            ],
                            "description": "Identifies the field you want to sort by. Case-sensitive.",
                            "default": "first_ip"
                          },
                          "keyword": {
                            "type": "string",
                            "enum": [
                              "ASC",
                              "DESC"
                            ],
                            "description": "Whether you want to sort in ascending (`ASC`) or descending (`DESC`) order. Case-sensitive.",
                            "default": "DESC"
                          }
                        },
                        "required": [
                          "field",
                          "keyword"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "organization_handles",
                          "operator": "contains",
                          "value": "irt"
                        }
                      ],
                      "search_from": 0,
                      "search_to": 500
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "organization_handles",
                          "operator": "contains",
                          "value": "irt"
                        }
                      ],
                      "search_from": 0,
                      "search_to": 500
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer",
                          "description": "The total number of possible results, value is limited to 9,999.\nNote: `total_count` value is limited. If the filter returns 10,000 results or more, the value will be 9,999, but you still can use paging until the data is finished.",
                          "maximum": 9999
                        },
                        "result_count": {
                          "type": "integer",
                          "description": "The number of external IP ranges actually returned as result."
                        },
                        "external_ip_address_ranges": {
                          "type": "array",
                          "description": "A list of external IP address ranges (list).\nEach IP address range is JSON.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "range_id": {
                                "type": "string"
                              },
                              "first_ip": {
                                "type": "string"
                              },
                              "last_ip": {
                                "type": "string"
                              },
                              "ips_count": {
                                "type": "integer"
                              },
                              "active_responsive_ips_count": {
                                "type": "integer"
                              },
                              "date_added": {
                                "type": "integer"
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "organization_handles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 2,
                        "result_count": 2,
                        "external_ip_address_ranges": [
                          {
                            "range_id": "<range_id>",
                            "first_ip": "<ip_address>",
                            "last_ip": "<ip_address>",
                            "ips_count": 8,
                            "active_responsive_ips_count": 0,
                            "date_added": 1649644918955,
                            "business_units": [
                              "Test - Acme Supply"
                            ],
                            "organization_handles": [
                              "MAINT-YY",
                              "IRT-PCCW",
                              "BNA2-YY",
                              "AP-AP",
                              "TA-AP"
                            ]
                          },
                          {
                            "range_id": "<range_id>",
                            "first_ip": "<ip_address>",
                            "last_ip": "<ip_address>",
                            "ips_count": 32768,
                            "active_responsive_ips_count": 0,
                            "date_added": 1649644918955,
                            "business_units": [
                              "Test - Acme Supply"
                            ],
                            "organization_handles": [
                              "IA-AP",
                              "IRT-P",
                              "AP-AP",
                              "MAINT-HK",
                              "NIC-HM",
                              "ORG-AP"
                            ]
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "total_count": 2,
                        "result_count": 2,
                        "external_ip_address_ranges": [
                          {
                            "range_id": "<range_id>",
                            "first_ip": "<ip_address>",
                            "last_ip": "<ip_address>",
                            "ips_count": 8,
                            "active_responsive_ips_count": 0,
                            "date_added": 1649644918955,
                            "business_units": [
                              "Test - Acme Supply"
                            ],
                            "organization_handles": [
                              "MAINT-YY",
                              "IRT-PCCW",
                              "BNA2-YY",
                              "AP-AP",
                              "TA-AP"
                            ]
                          },
                          {
                            "range_id": "<range_id>",
                            "first_ip": "<ip_address>",
                            "last_ip": "<ip_address>",
                            "ips_count": 32768,
                            "active_responsive_ips_count": 0,
                            "date_added": 1649644918955,
                            "business_units": [
                              "Test - Acme Supply"
                            ],
                            "organization_handles": [
                              "IA-AP",
                              "IRT-P",
                              "AP-AP",
                              "MAINT-HK",
                              "NIC-HM",
                              "ORG-AP"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_external_ip_address_range": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get External IP Address Range",
        "description": "Get external IP address range details according to the range IDs. You can send up to 100 IDs.\n\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-assets-get_external_ip_address_range",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "description": "A dictionary containing the API request fields.",
                    "properties": {
                      "range_id_list": {
                        "type": "array",
                        "description": "A list of strings representing the range ID for which you want to get the details.",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "range_id_list": [
                        "<range_ID>"
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "range_id_list": [
                        "<range_ID>"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "range_id": {
                                "type": "string"
                              },
                              "first_ip": {
                                "type": "string"
                              },
                              "last_ip": {
                                "type": "string"
                              },
                              "ips_count": {
                                "type": "integer"
                              },
                              "active_responsive_ips_count": {
                                "type": "integer"
                              },
                              "date_added": {
                                "type": "integer"
                              },
                              "organization_handles": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "details": {
                                "type": "object",
                                "properties": {
                                  "networkRecords": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "handle": {
                                          "type": "string"
                                        },
                                        "firstIp": {
                                          "type": "string"
                                        },
                                        "lastIp": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "whoIsServer": {
                                          "type": "string"
                                        },
                                        "lastChanged": {
                                          "type": "integer"
                                        },
                                        "organizationRecords": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "handle": {
                                                "type": "string"
                                              },
                                              "dateAdded": {
                                                "type": "integer"
                                              },
                                              "address": {
                                                "type": "string"
                                              },
                                              "email": {
                                                "type": "string"
                                              },
                                              "phone": {
                                                "type": "string"
                                              },
                                              "org": {
                                                "type": "string"
                                              },
                                              "formattedName": {
                                                "type": "string"
                                              },
                                              "kind": {
                                                "type": "string"
                                              },
                                              "roles": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "lastChanged": {
                                                "type": "integer"
                                              },
                                              "firstRegistered": {
                                                "type": "integer"
                                              },
                                              "remarks": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "remarks": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "explainers": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "ipaddress_version": {
                                "type": "integer"
                              },
                              "business_units": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "details": [
                          {
                            "range_id": "9eb4acae-5d75-3fae-bfaf-f3e5c2f1bba8",
                            "first_ip": "223.197.66.80",
                            "last_ip": "223.197.66.87",
                            "ips_count": 8,
                            "active_responsive_ips_count": 0,
                            "date_added": 1658450152749,
                            "organization_handles": [
                              "AP706-AP",
                              "BNA2-AP",
                              "IRT-PCCW-BIA-HK",
                              "MAINT-HK-PCCW-BIA-CS",
                              "TA66-AP"
                            ],
                            "details": {
                              "networkRecords": [
                                {
                                  "handle": "223.197.66.80 - 223.197.66.87",
                                  "firstIp": "223.197.66.80",
                                  "lastIp": "223.197.66.87",
                                  "name": "ACEMEMETAL-HK",
                                  "whoIsServer": "whois.apnic.net",
                                  "lastChanged": 1696868153165,
                                  "organizationRecords": [
                                    {
                                      "handle": "AP706-AP",
                                      "dateAdded": 1696915839587,
                                      "address": "",
                                      "email": "noc@imsbiz.com",
                                      "phone": "+000000000",
                                      "org": "",
                                      "formattedName": "ABUSE PCCWBIAHK",
                                      "kind": "group",
                                      "roles": [
                                        "abuse"
                                      ],
                                      "lastChanged": null,
                                      "firstRegistered": null,
                                      "remarks": ""
                                    },
                                    {
                                      "handle": "BNA2-AP",
                                      "dateAdded": 1696915839587,
                                      "address": "27/F, PCCW Tower, Taikoo Place,\n979 King's Road, Quarry Bay, HK          ",
                                      "email": "cs@imsbiz.com",
                                      "phone": "+852-2888-6932",
                                      "org": "",
                                      "formattedName": "BIZ NETVIGATOR ADMINISTRATORS",
                                      "kind": "group",
                                      "roles": [
                                        "administrative"
                                      ],
                                      "lastChanged": 1514892767000,
                                      "firstRegistered": 1220514857000,
                                      "remarks": ""
                                    },
                                    {
                                      "handle": "IRT-PCCW-BIA-HK",
                                      "dateAdded": 1696915839587,
                                      "address": "PO Box 9896 GPO          ",
                                      "email": "noc@imsbiz.com, noc@imsbiz.com",
                                      "phone": "",
                                      "org": "",
                                      "formattedName": "IRT-PCCW-BIA-HK",
                                      "kind": "group",
                                      "roles": [
                                        "abuse"
                                      ],
                                      "lastChanged": 1689215779000,
                                      "firstRegistered": 1291774233000,
                                      "remarks": "noc@imsbiz.com, noc@imsbiz.com was validated on 2023-07-13"
                                    },
                                    {
                                      "handle": "MAINT-HK-PCCW-BIA-CS",
                                      "dateAdded": 1696915839587,
                                      "address": "",
                                      "email": "noc@imsbiz.com",
                                      "phone": "",
                                      "org": "",
                                      "formattedName": "",
                                      "kind": "group",
                                      "roles": [
                                        "registrant"
                                      ],
                                      "lastChanged": null,
                                      "firstRegistered": null,
                                      "remarks": ""
                                    },
                                    {
                                      "handle": "TA66-AP",
                                      "dateAdded": 1696915839587,
                                      "address": "HKT Limited\nPO Box 9896 GPO          ",
                                      "email": "noc@imsbiz.com",
                                      "phone": "+852-2883-5151",
                                      "org": "",
                                      "formattedName": "TECHNICAL ADMINISTRATORS",
                                      "kind": "group",
                                      "roles": [
                                        "technical"
                                      ],
                                      "lastChanged": 1468555410000,
                                      "firstRegistered": 1220514856000,
                                      "remarks": ""
                                    }
                                  ],
                                  "remarks": "ACME METAL WORKS (INTERNATIONAL) LTD"
                                }
                              ]
                            },
                            "explainers": [],
                            "ipaddress_version": 4,
                            "business_units": [
                              "Vinay XSIAM Test - Acme Latex Supply"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Got an invalid JSON.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized access. An issue occurred during authentication. This can indicate an incorrect key, id, or other invalid authentication parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "402": {
            "description": "Unauthorized access. User does not have the required license type to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden access. The provided API Key does not have the required RBAC permissions to run this API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. A unified status for API communication type errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reply"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/triage_endpoint": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "summary": "Initiate Forensics Triage",
        "description": "Initiate forensics triage for the specified agents.\n- Maximum of 10 concurrent triage actions at a time.\n- Specified agents must have Forensics License enabled.\n- Specified agents must be the same OS, Windows or macOS, but not a mixture of both.\n- Specified configuration must have type \"Online = True\".\n\nRequired license: ",
        "operationId": "post-public_api-v1-triage_endpoint",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "agent_ids": {
                        "type": "array",
                        "description": "List of agents to run forensics triage on. ",
                        "items": {
                          "type": "string"
                        }
                      },
                      "collector_uuid": {
                        "type": "string",
                        "description": "UUID of the triage configuration. If none is specified, the default configuration is used for this action."
                      }
                    },
                    "required": [
                      "agent_ids"
                    ]
                  }
                },
                "required": [
                  "request_data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "group_action_id": {
                          "type": "integer",
                          "description": "Unique ID for triage action."
                        },
                        "successful_agent_ids": {
                          "type": "array",
                          "description": "List of agent IDs that successfully received the triage action.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "unsuccessful_agent_ids": {
                          "type": "array",
                          "description": "List of agent IDs that did not successfully receive the triage action.",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "GROUP_ACTION_ID": 325,
                        "SUCCESSFUL_AGENT_IDS": [
                          "5111e5eb99944e2f97274da4f30b4813"
                        ],
                        "UNSUCCESSFUL_AGENT_IDS": []
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "group_action_id": 325,
                        "successful_agent_ids": [
                          "5111c5eb93944e2f97674db4f36b4211"
                        ],
                        "unsuccessful_agent_ids": []
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/get_vulnerability_tests": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Get Vulnerability Tests",
        "description": "Get a complete or filtered list of vulnerability tests. Results include details about each test, including the number of services confirmed vulnerable.",
        "operationId": "post-public_api-v1-assets-get_vulnerability_tests",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "\n\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "filters": {
                        "type": "array",
                        "description": "An array of filter fields.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "field": {
                              "type": "string",
                              "enum": [
                                "name",
                                "status",
                                "vulnerability_ids",
                                "description",
                                "affected_software",
                                "cwe_ids",
                                "vendor_names",
                                "severity_score",
                                "epss_score",
                                "count_vulnerable_services"
                              ],
                              "description": "Identifies the field the filter will match on."
                            },
                            "operator": {
                              "type": "string",
                              "description": "Identifies the comparison operator to use for this filter. The following list shows which operator can be used for each filter field:\r\n- `name`: contains, eq, neq\r\n- `status`: eq\r\n- `vulnerability_ids`: contains, not_contains\r\n- `description`: contains\r\n- `affected_software`: contains, not_contains\r\n- `cwe_ids`: contains, not_contains\r\n- `vendor_names`: contains, not_contains\r\n- `severity_score`: eq, neq, gte, lte\r\n- `epss_score`: eq, neq, gte, lte\r\n- `count_vulnerable_services`: eq, neq, gte, lte\r\n"
                            },
                            "value": {
                              "type": "string",
                              "description": "Value depends on the filter field used.\r\n- `name`: string e.g. apache\r\n- `status`: Enabled, Disabled\r\n- `vulnerability_ids`: strings in the form of CVE IDs, such as CVE-1, CVE-2\r\n- `description`: string e.g. apache\r\n- `affected_software`: strings\r\n- `cwe_ids`: strings in the form of CWE IDs such as CWE-20\r\n- `vendor_names`: strings such as Cisco, Siemens\r\n- `severity_score`: numbers, such as 2, 3.5\r\n- `epss_score`: numbers, such as 2, 3.5\r\n- `count_vulnerable_services`: integers, such as 1,2,5"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "request_data"
                ],
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "name",
                          "operator": "contains",
                          "value": "apache"
                        }
                      ]
                    }
                  }
                }
              },
              "examples": {
                "Example ": {
                  "value": {
                    "request_data": {
                      "filters": [
                        {
                          "field": "name",
                          "operator": "contains",
                          "value": "apache"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "total_count": {
                          "type": "integer"
                        },
                        "result_count": {
                          "type": "integer"
                        },
                        "vulnerability_tests": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "vulnerability_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "description": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "vendor_names": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "affected_software": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "NAME": {
                                      "type": "string"
                                    },
                                    "VERSION_START_INCLUDING": {
                                      "nullable": true
                                    },
                                    "VERSION_START_EXCLUDING": {
                                      "nullable": true
                                    },
                                    "VERSION_END_INCLUDING": {
                                      "nullable": true
                                    },
                                    "VERSION_END_EXCLUDING": {
                                      "type": "string"
                                    },
                                    "VENDOR": {
                                      "type": "string"
                                    },
                                    "PRODUCT": {
                                      "type": "string"
                                    },
                                    "VERSION": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "severity_score": {
                                "type": "number"
                              },
                              "cwe_ids": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "epss_score": {
                                "type": "number"
                              },
                              "references": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "remediation_guidance": {
                                "type": "string"
                              },
                              "first_published": {
                                "type": "integer"
                              },
                              "created": {
                                "type": "integer"
                              },
                              "count_vulnerable_services": {
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "vulnerability_tests": [
                          {
                            "id": "69527826-e1c5-42d8-b8d8-2c2005b75cbe",
                            "name": "Apache Solr DataImportHandler Code Injection Vulnerability",
                            "vulnerability_ids": [
                              "CVE-2019-0193"
                            ],
                            "description": "Apache Solr, a popular open-source search platform built on Apache Lucene, is affected by a remote code execution vulnerability. Solr's DataImportHandler (DIH), an optional module widely used to import data from databases and other sources, allows the entire DIH configuration to come from a request's \"dataConfig\" parameter. The debug mode of the DIH admin screen uses this feature for convenient debugging and development of a DIH configuration. However, since a DIH configuration can contain scripts, this parameter poses a security risk. The affected products can potentially be exposed to the public internet, making them vulnerable to exploitation.\n",
                            "status": "DISABLED",
                            "vendor_names": [
                              "apache"
                            ],
                            "affected_software": [
                              {
                                "NAME": "cpe:2.3:a:apache:solr:*:*:*:*:*:*:*:*",
                                "VERSION_START_INCLUDING": null,
                                "VERSION_START_EXCLUDING": null,
                                "VERSION_END_INCLUDING": null,
                                "VERSION_END_EXCLUDING": "8.2.0",
                                "VENDOR": "apache",
                                "PRODUCT": "solr",
                                "VERSION": "*"
                              }
                            ],
                            "severity_score": 7.2,
                            "cwe_ids": [
                              "CWE-94"
                            ],
                            "epss_score": 0.9605,
                            "references": [
                              "https://issues.apache.org/jira/browse/SOLR-13669"
                            ],
                            "remediation_guidance": "Exploiting this vulnerability may lead to remote code execution, which could compromise the security and integrity of the affected system. To address this issue, follow these steps:\n\n1. Upgrade to Apache Solr 8.2.0 or later, which is secure by default.\n2. Alternatively, edit the solrconfig.xml to configure all DataImportHandler usages with an \"invariants\" section listing the \"dataConfig\" parameter set to an empty string.\n3. Ensure your network settings are configured so that only trusted traffic communicates with Solr, especially to the DIH request handler. This is a best practice for all Solr installations.\n\nBy implementing these fixes and mitigations, you can protect your Apache Solr installation from the remote code execution vulnerability described in CVE-2019-0193.\n",
                            "first_published": 1699326060000,
                            "created": 1711058940000,
                            "count_vulnerable_services": null
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example ": {
                    "value": {
                      "reply": {
                        "total_count": 1,
                        "result_count": 1,
                        "vulnerability_tests": [
                          {
                            "id": "69527826-e1c5-42d8-b8d8-2c2005b75cbe",
                            "name": "Apache Solr DataImportHandler Code Injection Vulnerability",
                            "vulnerability_ids": [
                              "CVE-2019-0193"
                            ],
                            "description": "Apache Solr, a popular open-source search platform built on Apache Lucene, is affected by a remote code execution vulnerability. Solr's DataImportHandler (DIH), an optional module widely used to import data from databases and other sources, allows the entire DIH configuration to come from a request's \"dataConfig\" parameter. The debug mode of the DIH admin screen uses this feature for convenient debugging and development of a DIH configuration. However, since a DIH configuration can contain scripts, this parameter poses a security risk. The affected products can potentially be exposed to the public internet, making them vulnerable to exploitation.\n",
                            "status": "DISABLED",
                            "vendor_names": [
                              "apache"
                            ],
                            "affected_software": [
                              {
                                "NAME": "cpe:2.3:a:apache:solr:*:*:*:*:*:*:*:*",
                                "VERSION_START_INCLUDING": null,
                                "VERSION_START_EXCLUDING": null,
                                "VERSION_END_INCLUDING": null,
                                "VERSION_END_EXCLUDING": "8.2.0",
                                "VENDOR": "apache",
                                "PRODUCT": "solr",
                                "VERSION": "*"
                              }
                            ],
                            "severity_score": 7.2,
                            "cwe_ids": [
                              "CWE-94"
                            ],
                            "epss_score": 0.9605,
                            "references": [
                              "https://issues.apache.org/jira/browse/SOLR-13669"
                            ],
                            "remediation_guidance": "Exploiting this vulnerability may lead to remote code execution, which could compromise the security and integrity of the affected system. To address this issue, follow these steps:\n\n1. Upgrade to Apache Solr 8.2.0 or later, which is secure by default.\n2. Alternatively, edit the solrconfig.xml to configure all DataImportHandler usages with an \"invariants\" section listing the \"dataConfig\" parameter set to an empty string.\n3. Ensure your network settings are configured so that only trusted traffic communicates with Solr, especially to the DIH request handler. This is a best practice for all Solr installations.\n\nBy implementing these fixes and mitigations, you can protect your Apache Solr installation from the remote code execution vulnerability described in CVE-2019-0193.\n",
                            "first_published": 1699326060000,
                            "created": 1711058940000,
                            "count_vulnerable_services": null
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/assets/bulk_update_vulnerability_tests": {
      "post": {
        "tags": [
          "Assets"
        ],
        "summary": "Bulk Update Vulnerability Tests",
        "description": "Enable or disable vulnerability tests.",
        "operationId": "post-public_api-v1-assets-bulk_update_vulnerability_tests",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "test_names": {
                        "type": "array",
                        "description": "Names of tests, for example [\"test1\", \"test2\", \"test3\"]\r\n ",
                        "items": {
                          "type": "string"
                        }
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ]
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {
                      "test_names": [
                        "Apache Solr DataImportHandler Code Injection Vulnerability"
                      ],
                      "status": "Enabled"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "test_names": [
                        "Apache Solr DataImportHandler Code Injection Vulnerability"
                      ],
                      "status": "Enabled"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/dataset/define_dataset": {
      "post": {
        "tags": [
          "XQL user datasets"
        ],
        "summary": "Define an XQL user dataset",
        "description": "Define an XQL user dataset based on an existing BigQuery table created by the user.\r\n\r\n**Note:** BigQuery table must be an existing table under public_access_user.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**.\r\n\r\nThese APIs are only applicable from within the XSIAM Notebook environment.",
        "operationId": "post-public_api-v1-dataset-define_dataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "table_name": {
                        "type": "string",
                        "description": "An existing BigQuery table name that was created by the user."
                      }
                    },
                    "required": [
                      "table_name"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/dataset/get_created_datasets": {
      "post": {
        "tags": [
          "XQL user datasets"
        ],
        "summary": "Get created XQL user datasets",
        "description": "Retrieve a list of all XQL user datasets created using the Cortex SDK.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**.\r\n\r\nThese APIs are only applicable from within the XSIAM Notebook environment.",
        "operationId": "post-public_api-v1-dataset-get_created_datasets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "datasets": {
                      "type": "array",
                      "description": "A list of created datasets.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/dataset/delete_dataset": {
      "post": {
        "tags": [
          "XQL user datasets"
        ],
        "summary": "Delete an XQL user dataset",
        "description": "Delete an XQL user dataset that was created by the Cortex SDK.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**.\r\n\r\nThese APIs are only applicable from within the XSIAM Notebook environment.",
        "operationId": "post-public_api-v1-dataset-delete_dataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "The dataset name to be deleted."
                      },
                      "delete_underlying_bq_table": {
                        "type": "boolean",
                        "description": "Define whether or not to delete the BigQuery table related to the dataset.",
                        "default": false
                      }
                    },
                    "required": [
                      "dataset_name"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/add_dataset": {
      "post": {
        "tags": [
          "Dataset Management"
        ],
        "summary": "Add Dataset",
        "description": "Add a dataset of type `lookup` with the specified name and schema.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-add_dataset",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "The designated name of the dataset."
                      },
                      "dataset_type": {
                        "type": "string",
                        "description": "Dataset type. Currently only `lookup` is supported."
                      },
                      "dataset_schema": {
                        "type": "object",
                        "description": "The schema of the dataset in a comma-separated list of JSON pairs where the key is the field name and the value is the field type.",
                        "additionalProperties": {
                          "type": "string",
                          "enum": [
                            "text",
                            "number",
                            "bool",
                            "datetime"
                          ]
                        }
                      }
                    },
                    "required": [
                      "dataset_name",
                      "dataset_type",
                      "dataset_schema"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "dataset_name": "users",
                      "dataset_schema": {
                        "uid": "text",
                        "username": "text",
                        "zipcode": "number",
                        "salary": "number",
                        "is_admin": "bool",
                        "birthday": "datetime"
                      },
                      "dataset_type": "lookup"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dataset_name": {
                      "type": "string",
                      "description": "Name of the dataset added."
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v2/xql/delete_dataset/": {
      "post": {
        "tags": [
          "Dataset Management"
        ],
        "summary": "Delete a dataset",
        "description": "Delete a dataset with the specified name. The following dataset types can be deleted: Lookup, Raw, User, Snapshot, and Correlation. You can only delete a dataset with dependencies by setting `force` to TRUE.\r\n\r\n**Note:** The System dataset and other protected datasets cannot be deleted.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-delete_dataset",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "The name of the dataset to be deleted."
                      },
                      "force": {
                        "type": "boolean",
                        "description": "**Warning:** Setting this to `True` forces deletion even when there are dependencies."
                      }
                    },
                    "required": [
                      "dataset_name"
                    ]
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "dataset_name": "users",
                    "force": "yes"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "dataset_name": "users",
                      "force": "yes"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/get_datasets": {
      "post": {
        "tags": [
          "Dataset Management"
        ],
        "summary": "Get all datasets",
        "description": "Retrieve a list of all the datasets and their properties.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-get_datasets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataset_name": {
                            "type": "string",
                            "description": "Dataset name."
                          },
                          "type": {
                            "type": "string",
                            "description": "Dataset type. Can be one of the following: `System`, `Lookup`, `Raw`, `User`, `Snapshot`, `Correlation`, `System Audit`."
                          },
                          "log_update_type": {
                            "type": "string",
                            "description": "Log update type. Can be one of the following: `Logs` (event logs are updated continuously), `State` (the current state is updated periodically)."
                          },
                          "last_updated": {
                            "type": "integer",
                            "description": "Integer in timestamp epoch milliseconds. When the data in the dataset was last updated."
                          },
                          "total_days_stored": {
                            "type": "integer",
                            "description": "Number of dats the data is stored in the tenant, which is comprised of `hot_range` + `cold_range`."
                          },
                          "hot_range": {
                            "type": "object",
                            "description": "The time period of the hot storage from the start date to the end date.",
                            "properties": {
                              "from": {
                                "type": "integer",
                                "description": "    Integer in timestamp epoch milliseconds."
                              },
                              "to": {
                                "type": "integer",
                                "description": "Integer in timestamp epoch milliseconds."
                              }
                            }
                          },
                          "cold_range": {
                            "type": "object",
                            "description": "The time period of the cold storage from the start date to the end date.",
                            "properties": {
                              "from": {
                                "type": "integer",
                                "description": "Integer in timestamp epoch milliseconds."
                              },
                              "to": {
                                "type": "integer",
                                "description": "Integer in timestamp epoch milliseconds."
                              }
                            }
                          },
                          "total_size_stored": {
                            "type": "integer",
                            "description": "Actual size of the data (in bytes) that is stored in the tenant. This number is dependent on the events stored in the hot storage. For the xdr_data dataset, where the first 31 days of storage are included with your license, the first 31 days are not included in the `total_size_stored` number."
                          },
                          "average_daily_size": {
                            "type": "integer",
                            "description": "Average daily amount stored (in bytes) in the tenant. This number is dependent on the events stored in the hot storage."
                          },
                          "total_events": {
                            "type": "integer",
                            "description": "Number of total events/logs that are stored in the tenant. This number is dependent on the events stored in the hot storage."
                          },
                          "average_event_size": {
                            "type": "integer",
                            "description": "Average size (in bytes) of a single event in the dataset (`total_size_stored` divided by the `total_events`). This number is dependent on the events stored in the hot storage."
                          },
                          "ttl": {
                            "type": "integer",
                            "description": "Time to live. Defines when lookup entries expire and are removed automatically from the lookup dataset."
                          },
                          "default_query_target": {
                            "type": "boolean",
                            "description": "whether the dataset is configured to use as your default query target in XQL Search, so when you write your queries you do not need to define a dataset. Can be one of the following: `True`, `False`."
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": [
                        {
                          "Dataset Name": "xdr_data",
                          "Type": "SYSTEM",
                          "Log Update Type": "LOGS",
                          "Last Updated": null,
                          "Total Days Stored": null,
                          "Hot Range": {
                            "from": 1715299200000,
                            "to": 1716595200000
                          },
                          "Cold Range": {},
                          "Total Size Stored": null,
                          "Average Daily Size": null,
                          "Total Events": null,
                          "Average Event Size": null,
                          "TTL": null,
                          "Default Query Target": "FALSE"
                        },
                        {
                          "Dataset Name": "host_inventory",
                          "Type": "SYSTEM",
                          "Log Update Type": "LOGS",
                          "Last Updated": null,
                          "Total Days Stored": null,
                          "Hot Range": {},
                          "Cold Range": {},
                          "Total Size Stored": null,
                          "Average Daily Size": null,
                          "Total Events": null,
                          "Average Event Size": null,
                          "TTL": null,
                          "Default Query Target": "FALSE"
                        },
                        {
                          "Dataset Name": "host_users_to_groups",
                          "Type": "SYSTEM",
                          "Log Update Type": "LOGS",
                          "Last Updated": null,
                          "Total Days Stored": null,
                          "Hot Range": {},
                          "Cold Range": {},
                          "Total Size Stored": null,
                          "Average Daily Size": null,
                          "Total Events": null,
                          "Average Event Size": null,
                          "TTL": null,
                          "Default Query Target": "FALSE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/lookups/add_data": {
      "post": {
        "tags": [
          "Lookup Datasets"
        ],
        "summary": "Add or update data in a lookup dataset",
        "description": "Add or update data in a lookup dataset.\r\n\r\nWhen updating data, any field not specified in the `data` field, but specified on at least one of the rows, will be set to `None`.\r\n\r\n**Note: ** The maximum size of a lookup dataset is 50 MB. Attemping to exceed this limit will fail.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-lookups-add_data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "Unique dataset name"
                      },
                      "key_fields": {
                        "type": "array",
                        "description": "The fields used to identify existing records. If there is not an exact match to the key_fields specified, a new row is created. \r\nWhen you specify `key_fields`, these fields are mandatory in data entries. When `key_fields` are not specified, existing data entries are not updated, and new entries are added with the specified data.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "data": {
                        "type": "object",
                        "description": "Key-value pairs of data entries.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "dataset_name",
                      "data"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "dataset_name": "users",
                      "key_fields": [
                        "uid",
                        "username"
                      ],
                      "data": [
                        {
                          "uid": "123abc",
                          "username": "john",
                          "zipcode": 58672,
                          "salary": 5.1,
                          "is_admin": false,
                          "birthday": "31-05-1982T10:22:45Z"
                        },
                        {
                          "uid": "124abc",
                          "username": "jane",
                          "zipcode": 58642,
                          "salary": 5000000,
                          "is_admin": true,
                          "birthday": "31-03-1982T10:22:45Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "added": {
                      "type": "integer"
                    },
                    "updated": {
                      "type": "integer"
                    },
                    "skipped": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/lookups/remove_data": {
      "post": {
        "tags": [
          "Lookup Datasets"
        ],
        "summary": "Remove data from a lookup dataset",
        "description": "Remove data from a dataset based on the specified parameters. If any one of the filter sets are not found, the API does not delete any data.\r\n\r\n**Note:** All lookup entries matching any of the filter blocks are deleted. To match a filter block, a lookup entry must match all the specified fields as if there were an `AND` operator between them.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-lookups-remove_data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "The name of the dataset to delete."
                      },
                      "filters": {
                        "type": "object",
                        "description": "Key-value pairs of fields to query in datasets. A lookup entry must match all the specified fields as if there were an `AND` operator between them.\r\nYou can use one or more fields, up to the number of fields in the schema.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "dataset_name",
                      "filters"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "dataset_name": "users",
                      "filters": [
                        {
                          "uid": "123",
                          "username": "john"
                        },
                        {
                          "uid": "124",
                          "zipcode": 58672
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted": {
                      "type": "integer",
                      "description": "Number of entries deleted successfully."
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/xql/lookups/get_data": {
      "post": {
        "tags": [
          "Lookup Datasets"
        ],
        "summary": "Get data from a lookup dataset",
        "description": "Get data from a lookup dataset according to the specified filter fields. All lookup entries matching any of the filter blocks are returned. To match a filter block, a lookup entry must match all the specified fields as if there were an `AND` operator between them. If no filters are specified, return all lookup entries. \r\n\r\n**Note:** The maximum number of entries returned is 10,000.\r\n\r\nRequired license: **Cortex XSIAM Enterprise** or **Cortex XSIAM Enterprise Plus**",
        "operationId": "post-public_api-v1-xql-lookups-get_data",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object",
                    "properties": {
                      "dataset_name": {
                        "type": "string",
                        "description": "Name of the dataset to query."
                      },
                      "filters": {
                        "type": "array",
                        "description": "Key-value pairs of fields to query in a dataset. A lookup entry must match all the specified fields as if there were an `AND` operator between them.\r\nYou can use one or more fields, up to the number of fields in the schema.",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The maximum number of results to return. If this is not specified, return all lookup entries that match the filter criteria."
                      }
                    },
                    "required": [
                      "dataset_name"
                    ]
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "request_data": {
                      "dataset_name": "users",
                      "filters": [
                        {
                          "uid": "123",
                          "username": "john"
                        },
                        {
                          "department": "dev",
                          "zipcode": 58674
                        }
                      ],
                      "limit": 20
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "filter_count": {
                      "type": "integer",
                      "description": "Number of entries that match the filter."
                    },
                    "total_count": {
                      "type": "integer",
                      "description": "Total number of entries."
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "data": [
                          {
                            "uid": "uid5",
                            "salary": 5.1,
                            "zipcode": 70005,
                            "birthday": 386418165000,
                            "is_admin": true,
                            "username": "username5",
                            "_insert_time": 1718807765000,
                            "_update_time": 1718807765000,
                            "_collector_name": "Console",
                            "_collector_type": "Console"
                          },
                          {
                            "uid": "uid6",
                            "salary": 6.1,
                            "zipcode": 70006,
                            "birthday": 386418165000,
                            "is_admin": true,
                            "username": "username6",
                            "_insert_time": 1718807765000,
                            "_update_time": 1718807765000,
                            "_collector_name": "Console",
                            "_collector_type": "Console"
                          }
                        ],
                        "filter count": 2,
                        "total count": 10
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    },
    "/public_api/v1/get_triage_presets": {
      "post": {
        "tags": [
          "Response Action"
        ],
        "summary": "Get triage presets",
        "description": "Get all triage preset information including triage name, platform, description, created by, and triage type.\r\n\r\nRequired license: **Forensics add-on**",
        "operationId": "post-public_api-v1-get_triage_presets",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "{api_key}",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-xdr-auth-id",
            "in": "header",
            "description": "{api_key_id}",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "request_data": {
                    "type": "object"
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "request_data": {}
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reply": {
                      "type": "object",
                      "properties": {
                        "triage_presets": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string",
                                "description": "Preset/configuration UUID"
                              },
                              "name": {
                                "type": "string",
                                "description": "Triage name"
                              },
                              "os": {
                                "type": "string",
                                "description": "Triage operating system/platform: `Windows` or `macOS`"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description"
                              },
                              "created_by": {
                                "type": "string",
                                "description": "Triage was created by"
                              },
                              "type": {
                                "type": "string",
                                "description": "Triage type: Online, Offline, Online/Offline"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-examples": {
                    "Example 1": {
                      "reply": {
                        "triage_presets": [
                          {
                            "uuid": "374ecf0447c944c39791e5a60d1a6d24",
                            "name": "XDR Default",
                            "os": "MACOS",
                            "description": "Default macOS Triage configuration included with the XDR Forensics add-on",
                            "created_by": "secdo-default@sec.do",
                            "type": "Online / Offline"
                          },
                          {
                            "uuid": "ea7a5d3ff02d41629e96fbd1d5f68535",
                            "name": "XDR Default",
                            "os": "WINDOWS",
                            "description": "Default Triage configuration included with XDR Forensics add-on",
                            "created_by": "secdo-default@sec.do",
                            "type": "Online / Offline"
                          }
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "reply": {
                        "triage_presets": [
                          {
                            "uuid": "374ecf0457c944c39791e5a60d1a6d24",
                            "name": "XDR Default",
                            "os": "MACOS",
                            "description": "Default macOS Triage configuration included with the XDR Forensics add-on",
                            "created_by": "user@company.com",
                            "type": "Online / Offline"
                          },
                          {
                            "uuid": "ea7a5d3ff52d41629e96fbd1d5f68535",
                            "name": "XDR Default",
                            "os": "WINDOWS",
                            "description": "Default Triage configuration included with XDR Forensics add-on",
                            "created_by": "user@company.com",
                            "type": "Online / Offline"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://api-yourfqdn/"
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Assets",
      "description": "APIs for managing assets"
    },
    {
      "name": "Audit log",
      "description": "APIs for audit logs"
    },
    {
      "name": "Dataset Management",
      "description": "APIs for managing datasets"
    },
    {
      "name": "Endpoints",
      "description": "APIs for managing endpoints"
    },
    {
      "name": "Lookup Datasets",
      "description": "APIs for lookup datasets"
    },
    {
      "name": "Incidents",
      "description": "APIs for managing incidents"
    },
    {
      "name": "Playbooks",
      "description": "APIs for managing playbooks"
    },
    {
      "name": "Response Action",
      "description": "APIs for response actions"
    },
    {
      "name": "Rules",
      "description": "APIs for managing rules"
    },
    {
      "name": "Scripts",
      "description": "APIs for managing scripts"
    },
    {
      "name": "Script execution",
      "description": "APIs executing script"
    },
    {
      "name": "System management",
      "description": "APIs for system management"
    },
    {
      "name": "XQL user datasets",
      "description": "APIs for managing XQL user datasets."
    },
    {
      "name": "XQL query",
      "description": "Run XQL queries on your data sources using a series of APIs."
    }
  ],
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "reply": {
        "type": "object",
        "title": "reply",
        "description": "The query result upon error.",
        "properties": {
          "err_code": {
            "type": "string",
            "description": "HTTP response code."
          },
          "err_msg": {
            "type": "string",
            "description": "Error message.",
            "example": "{\"line\": 1, \"column\": 19, \"message\": \"no viable alternative at input '|alter2'\"}"
          },
          "err_extra": {
            "type": "string",
            "description": "Additional information describing the error."
          }
        }
      },
      "alert": {
        "type": "object",
        "title": "alert",
        "properties": {
          "external_id": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "matching_status": {
            "type": "string"
          },
          "end_match_attempt_ts": {
            "type": "integer"
          },
          "local_insert_ts": {
            "type": "integer"
          },
          "bioc_indicator": {
            "type": "string"
          },
          "matching_service_rule_id": {
            "type": "string"
          },
          "attempt_counter": {
            "type": "integer"
          },
          "bioc_category_enum_key": {
            "type": "string"
          },
          "is_whitelisted": {
            "type": "boolean"
          },
          "starred": {
            "type": "boolean"
          },
          "deduplicate_tokens": {
            "type": "string"
          },
          "filter_rule_id": {
            "type": "string"
          },
          "mitre_technique_id_and_name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mitre_tactic_id_and_name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agent_version": {
            "type": "string"
          },
          "agent_device_domain": {
            "type": "string"
          },
          "agent_fqdn": {
            "type": "string"
          },
          "agent_os_type": {
            "type": "string"
          },
          "agent_os_sub_type": {
            "type": "string"
          },
          "agent_data_collection_status": {
            "type": "boolean"
          },
          "mac": {
            "type": "string"
          },
          "mac_address": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "agent_is_vdi": {
            "type": "boolean"
          },
          "contains_featured_host": {
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          "contains_featured_user": {
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          "contains_featured_ip": {
            "type": "string",
            "enum": [
              true,
              false
            ]
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "alert_id": {
            "type": "string"
          },
          "detection_timestamp": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "endpoint_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "host_ip": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "host_name": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "action_pretty": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "external_id": "<external ID>",
            "severity": "high",
            "matching_status": "FAILED",
            "end_match_attempt_ts": 1603552062824,
            "local_insert_ts": 1603279967500,
            "bioc_indicator": null,
            "matching_service_rule_id": null,
            "attempt_counter": 55,
            "bioc_category_enum_key": null,
            "is_whitelisted": false,
            "starred": false,
            "deduplicate_tokens": null,
            "filter_rule_id": null,
            "mitre_technique_id_and_name": [
              ""
            ],
            "mitre_tactic_id_and_name": [
              ""
            ],
            "agent_version": "<agent version>",
            "agent_device_domain": null,
            "agent_fqdn": "test",
            "agent_os_type": "Windows",
            "agent_os_sub_type": "<os subtype>",
            "agent_data_collection_status": true,
            "mac": null,
            "mac_address": [
              "<mac address>"
            ],
            "agent_is_vdi": null,
            "contains_featured_host": false,
            "contains_featured_user": false,
            "contains_featured_ip": false,
            "events": [
              {
                "agent_install_type": "NA",
                "agent_host_boot_time": null,
                "event_sub_type": null,
                "module_id": "Privilege Escalation Protection",
                "association_strength": null,
                "dst_association_strength": null,
                "story_id": null,
                "event_id": null,
                "event_type": "Process Execution",
                "event_timestamp": 1603279888980,
                "actor_process_instance_id": "<instance ID>",
                "actor_process_image_path": "c:\\<file path>\\virus.exe",
                "actor_process_image_name": "virus.exe",
                "actor_process_command_line": "c:\\<file path>\\virus.exe",
                "actor_process_signature_status": "N/A",
                "actor_process_signature_vendor": null,
                "actor_process_image_sha256": "<SHA256 value>",
                "actor_process_image_md5": null,
                "actor_process_causality_id": null,
                "actor_causality_id": null,
                "actor_process_os_pid": "<PID>",
                "actor_thread_thread_id": null,
                "causality_actor_process_image_name": null,
                "causality_actor_process_command_line": null,
                "causality_actor_process_image_path": null,
                "causality_actor_process_signature_vendor": null,
                "causality_actor_process_signature_status": "N/A",
                "causality_actor_causality_id": null,
                "causality_actor_process_execution_time": null,
                "causality_actor_process_image_md5": null,
                "causality_actor_process_image_sha256": null,
                "action_file_path": null,
                "action_file_name": null,
                "action_file_md5": null,
                "action_file_sha256": null,
                "action_file_macro_sha256": null,
                "action_registry_data": null,
                "action_registry_key_name": null,
                "action_registry_value_name": null,
                "action_registry_full_key": null,
                "action_local_ip": null,
                "action_local_port": null,
                "action_remote_ip": null,
                "action_remote_port": null,
                "action_external_hostname": null,
                "action_country": "UNKNOWN",
                "action_process_instance_id": null,
                "action_process_causality_id": null,
                "action_process_image_name": null,
                "action_process_image_sha256": null,
                "action_process_image_command_line": null,
                "action_process_signature_status": "N/A",
                "action_process_signature_vendor": null,
                "os_actor_effective_username": null,
                "os_actor_process_instance_id": null,
                "os_actor_process_image_path": null,
                "os_actor_process_image_name": null,
                "os_actor_process_command_line": null,
                "os_actor_process_signature_status": "N/A",
                "os_actor_process_signature_vendor": null,
                "os_actor_process_image_sha256": null,
                "os_actor_process_causality_id": null,
                "os_actor_causality_id": null,
                "os_actor_process_os_pid": null,
                "os_actor_thread_thread_id": null,
                "fw_app_id": null,
                "fw_interface_from": null,
                "fw_interface_to": null,
                "fw_rule": null,
                "fw_rule_id": null,
                "fw_device_name": null,
                "fw_serial_number": null,
                "fw_url_domain": null,
                "fw_email_subject": null,
                "fw_email_sender": null,
                "fw_email_recipient": null,
                "fw_app_subcategory": null,
                "fw_app_category": null,
                "fw_app_technology": null,
                "fw_vsys": null,
                "fw_xff": null,
                "fw_misc": null,
                "fw_is_phishing": "N/A",
                "dst_agent_id": null,
                "dst_causality_actor_process_execution_time": null,
                "dns_query_name": null,
                "dst_action_external_hostname": null,
                "dst_action_country": null,
                "dst_action_external_port": null,
                "user_name": null
              }
            ],
            "alert_id": "<alert ID>",
            "detection_timestamp": 1603279888980,
            "name": "Kernel Privilege Escalation",
            "category": "Exploit",
            "endpoint_id": "<endpoint ID>",
            "description": "Local privilege escalation prevented",
            "host_ip": [
              "<IP address>"
            ],
            "host_name": "Test",
            "source": "XDR Agent",
            "action": "BLOCKED",
            "action_pretty": "Prevented (Blocked)"
          }
        }
      },
      "event": {
        "type": "object",
        "title": "event",
        "properties": {
          "agent_install_type": {
            "type": "string"
          },
          "agent_host_boot_time": {
            "type": "integer"
          },
          "event_sub_type": {
            "type": "string"
          },
          "module_id": {
            "type": "string"
          },
          "association_strength": {
            "type": "string"
          },
          "dst_association_strength": {
            "type": "string"
          },
          "story_id": {
            "type": "string"
          },
          "event_id": {
            "type": "string"
          },
          "event_type": {
            "type": "string"
          },
          "event_timestamp": {
            "type": "integer"
          },
          "actor_process_instance_id": {
            "type": "string"
          },
          "actor_process_image_path": {
            "type": "string"
          },
          "actor_process_image_name": {
            "type": "string"
          },
          "actor_process_command_line": {
            "type": "string"
          },
          "actor_process_signature_status": {
            "type": "string"
          },
          "actor_process_signature_vendor": {
            "type": "string"
          },
          "actor_process_image_sha256": {
            "type": "string"
          },
          "actor_process_image_md5": {
            "type": "string"
          },
          "actor_process_causality_id": {
            "type": "string"
          },
          "actor_causality_id": {
            "type": "string"
          },
          "actor_process_os_pid": {
            "type": "string"
          },
          "actor_thread_thread_id": {
            "type": "string"
          },
          "causality_actor_process_image_name": {
            "type": "string"
          },
          "causality_actor_process_command_line": {
            "type": "string"
          },
          "causality_actor_process_image_path": {
            "type": "string"
          },
          "causality_actor_process_signature_vendor": {
            "type": "string"
          },
          "causality_actor_process_signature_status": {
            "type": "string"
          },
          "causality_actor_causality_id": {
            "type": "string"
          },
          "causality_actor_process_execution_time": {
            "type": "integer"
          },
          "causality_actor_process_image_md5": {
            "type": "string"
          },
          "causality_actor_process_image_sha256": {
            "type": "string"
          },
          "action_file_path": {
            "type": "string"
          },
          "action_file_name": {
            "type": "string"
          },
          "action_file_md5": {
            "type": "string"
          },
          "action_file_sha256": {
            "type": "string"
          },
          "action_file_macro_sha256": {
            "type": "string"
          },
          "action_registry_data": {
            "type": "string"
          },
          "action_registry_key_name": {
            "type": "string"
          },
          "action_registry_value_name": {
            "type": "string"
          },
          "action_registry_full_key": {
            "type": "string"
          },
          "action_local_ip": {
            "type": "string"
          },
          "action_local_port": {
            "type": "string"
          },
          "action_remote_ip": {
            "type": "string"
          },
          "action_remote_port": {
            "type": "string"
          },
          "action_external_hostname": {
            "type": "string"
          },
          "action_country": {
            "type": "string"
          },
          "action_process_instance_id": {
            "type": "string"
          },
          "action_process_causality_id": {
            "type": "string"
          },
          "action_process_image_name": {
            "type": "string"
          },
          "action_process_image_sha256": {
            "type": "string"
          },
          "action_process_image_command_line": {
            "type": "string"
          },
          "action_process_signature_status": {
            "type": "string"
          },
          "action_process_signature_vendor": {
            "type": "string"
          },
          "os_actor_effective_username": {
            "type": "string"
          },
          "os_actor_process_instance_id": {
            "type": "string"
          },
          "os_actor_process_image_path": {
            "type": "string"
          },
          "os_actor_process_image_name": {
            "type": "string"
          },
          "os_actor_process_command_line": {
            "type": "string"
          },
          "os_actor_process_signature_status": {
            "type": "string"
          },
          "os_actor_process_signature_vendor": {
            "type": "string"
          },
          "os_actor_process_image_sha256": {
            "type": "string"
          },
          "os_actor_process_causality_id": {
            "type": "string"
          },
          "os_actor_causality_id": {
            "type": "string"
          },
          "os_actor_process_os_pid": {
            "type": "string"
          },
          "os_actor_thread_thread_id": {
            "type": "string"
          },
          "fw_app_id": {
            "type": "string"
          },
          "fw_interface_from": {
            "type": "string"
          },
          "fw_interface_to": {
            "type": "string"
          },
          "fw_rule": {
            "type": "string"
          },
          "fw_rule_id": {
            "type": "string"
          },
          "fw_device_name": {
            "type": "string"
          },
          "fw_serial_number": {
            "type": "integer"
          },
          "fw_url_domain": {
            "type": "string"
          },
          "fw_email_subject": {
            "type": "string"
          },
          "fw_email_sender": {
            "type": "string"
          },
          "fw_email_recipient": {
            "type": "string"
          },
          "fw_app_subcategory": {
            "type": "string"
          },
          "fw_app_category": {
            "type": "string"
          },
          "fw_app_technology": {
            "type": "string"
          },
          "fw_vsys": {
            "type": "string"
          },
          "fw_xff": {
            "type": "string"
          },
          "fw_misc": {
            "type": "string"
          },
          "fw_is_phishing": {
            "type": "string"
          },
          "dst_agent_id": {
            "type": "string"
          },
          "dst_causality_actor_process_execution_time": {
            "type": "integer"
          },
          "dns_query_name": {
            "type": "string"
          },
          "dst_action_external_hostname": {
            "type": "string"
          },
          "dst_action_country": {
            "type": "string"
          },
          "dst_action_external_port": {
            "type": "string"
          },
          "user_name": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "agent_install_type": "NA",
            "agent_host_boot_time": null,
            "event_sub_type": null,
            "module_id": "Privilege Escalation Protection",
            "association_strength": null,
            "dst_association_strength": null,
            "story_id": null,
            "event_id": null,
            "event_type": "Process Execution",
            "event_timestamp": 1603279888980,
            "actor_process_instance_id": "<instance ID>",
            "actor_process_image_path": "c:\\<file path>\\virus.exe",
            "actor_process_image_name": "virus.exe",
            "actor_process_command_line": "c:\\<file path>\\virus.exe",
            "actor_process_signature_status": "N/A",
            "actor_process_signature_vendor": null,
            "actor_process_image_sha256": "<SHA256 value>",
            "actor_process_image_md5": null,
            "actor_process_causality_id": null,
            "actor_causality_id": null,
            "actor_process_os_pid": "<PID>",
            "actor_thread_thread_id": null,
            "causality_actor_process_image_name": null,
            "causality_actor_process_command_line": null,
            "causality_actor_process_image_path": null,
            "causality_actor_process_signature_vendor": null,
            "causality_actor_process_signature_status": "N/A",
            "causality_actor_causality_id": null,
            "causality_actor_process_execution_time": null,
            "causality_actor_process_image_md5": null,
            "causality_actor_process_image_sha256": null,
            "action_file_path": null,
            "action_file_name": null,
            "action_file_md5": null,
            "action_file_sha256": null,
            "action_file_macro_sha256": null,
            "action_registry_data": null,
            "action_registry_key_name": null,
            "action_registry_value_name": null,
            "action_registry_full_key": null,
            "action_local_ip": null,
            "action_local_port": null,
            "action_remote_ip": null,
            "action_remote_port": null,
            "action_external_hostname": null,
            "action_country": "UNKNOWN",
            "action_process_instance_id": null,
            "action_process_causality_id": null,
            "action_process_image_name": null,
            "action_process_image_sha256": null,
            "action_process_image_command_line": null,
            "action_process_signature_status": "N/A",
            "action_process_signature_vendor": null,
            "os_actor_effective_username": null,
            "os_actor_process_instance_id": null,
            "os_actor_process_image_path": null,
            "os_actor_process_image_name": null,
            "os_actor_process_command_line": null,
            "os_actor_process_signature_status": "N/A",
            "os_actor_process_signature_vendor": null,
            "os_actor_process_image_sha256": null,
            "os_actor_process_causality_id": null,
            "os_actor_causality_id": null,
            "os_actor_process_os_pid": null,
            "os_actor_thread_thread_id": null,
            "fw_app_id": null,
            "fw_interface_from": null,
            "fw_interface_to": null,
            "fw_rule": null,
            "fw_rule_id": null,
            "fw_device_name": null,
            "fw_serial_number": null,
            "fw_url_domain": null,
            "fw_email_subject": null,
            "fw_email_sender": null,
            "fw_email_recipient": null,
            "fw_app_subcategory": null,
            "fw_app_category": null,
            "fw_app_technology": null,
            "fw_vsys": null,
            "fw_xff": null,
            "fw_misc": null,
            "fw_is_phishing": "N/A",
            "dst_agent_id": null,
            "dst_causality_actor_process_execution_time": null,
            "dns_query_name": null,
            "dst_action_external_hostname": null,
            "dst_action_country": null,
            "dst_action_external_port": null,
            "user_name": null
          }
        }
      },
      "violation": {
        "type": "object",
        "title": "violation",
        "properties": {
          "hostname": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "timestamp": {
            "type": "integer"
          },
          "violation_id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "vendor_id": {
            "type": "string"
          },
          "vendor": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "serial": {
            "type": "string"
          },
          "endpoint_id": {
            "type": "string"
          }
        },
        "x-examples": {
          "example-1": {
            "hostname": "<host name>",
            "username": "test",
            "ip": "<IP address>",
            "timestamp": 1576260019000,
            "violation_id": 11,
            "type": "Disk Drive",
            "vendor_id": "<vendor ID>",
            "vendor": "<vendor name>",
            "product_id": "<product ID>",
            "product": "<product name>",
            "serial": "<serial number>",
            "endpoint_id": "<endpoint ID>"
          }
        }
      }
    }
  }
}